{"version":3,"sources":["components/PDFGeneration.js","components/Common/DeleteConfirm.js","generators/TestDataGenerator.js","components/Common/Upload.js","components/ChartCreate/ChartSetup/Dialogs/LoadDataDialog.js","components/ChartCreate/ChartSetup/common.js","components/ChartCreate/ChartSetup/LoadData.js","components/Common/ColorSelect.js","components/Common/VisibilitySwitch.js","components/ChartCreate/ChartSetup/Dialogs/UseDataDialog.js","components/ChartCreate/ChartSetup/UseData.js","components/ChartCreate/ChartSetup/Dialogs/AxisDialog.js","components/ChartCreate/ChartSetup/Dialogs/XAxisDialog.js","components/ChartCreate/ChartSetup/Dialogs/EditSettingsDialog.js","components/ChartCreate/ChartSetup/ConfigChart.js","components/ChartCreate/ChartSetup/ChartSetup.js","components/Charts/calculate.js","components/Charts/LineChart.js","components/ChartCreate/ChartCreate.js","App.js","index.js"],"names":["Component","DeleteConfirm","_ref","title","canRemove","remove","reason","children","props","Object","objectWithoutProperties","react_default","a","createElement","tooltip","placement","arrowPointAtCenter","popconfirm","assign","className","okText","cancelText","RandomSerie","_ref$from","from","_ref$to","to","_ref$wavePeriod","wavePeriod","_ref$waveScale","waveScale","_ref$rand","rand","_ref$dataSets","dataSets","result","dataSetBegin","dataSetEnd","i","generated","Math","sin","PI","random","push","toFixed","Generator","outside_temperature","inside_temperature","hot_water","electricity","TestDataGenerator","generator","arguments","length","undefined","_ref2","_ref2$dataSets","begin","moment","time","format","add","DataSetLabel","keys","forEach","key","val","dummyRequest","validator","file","onSuccess","onError","setTimeout","upload","customRequest","arg","Dragger","_ref3","Option","Select","TabPane","Tabs","WeekPicker","DatePicker","MonthPicker","RangePicker","timeout","ms","Promise","resolve","filterOutAll","array","filter","e","filterOnlyDoneFiles","status","isDateAfter","date","isBefore","periods","day","description","default","subtract","label","name","rules","required","message","type","element","esm_extends","date_picker","disabledDate","formatter","value","startOf","endOf","week","month","userDefined","_ref4","values","PeriodSelect","es_select","placeholder","this","map","PossibleDataCheckBox","_this$props","possibleData","es_checkbox","Group","style","width","row","col","span","CustomUpload","_this$props2","onChange","disabled","Common_Upload","accept","icon","LoadedFiles","fileList","showUploadList","showRemoveIcon","defaultFileList","PureComponent","LoadDataForm","state","_this","uploadedFiles","onUploadChange","info","success","concat","error","setState","changeDataSource","source","form","setFieldsValue","dataSource","loadDataFromApi","_callee","fields","regenerator_default","wrap","_context","prev","next","measurements","abrupt","stop","getFieldsFromFlow","requiredFields","formattedFields","getFieldValue","currentPeriodValue","Boolean","getRequiredFields","reduce","field","objectSpread","defineProperty","handleSubmit","_callee3","_this$getFieldsFromFl","_context3","preventDefault","validateFields","_ref7","asyncToGenerator","mark","_callee2","err","fieldsValue","statusFieldsValue","data","loadedKeys","_context2","mode","t0","sent","includes","loadData","handleReset","onClose","_x3","_x4","apply","loadPossibleData","_callee4","_context4","checkedList","toConsumableArray","normalizeCheckBox","prevValue","indexOf","filtered","resetFields","console","log","_this$props$form","getFieldDecorator","isEdit","es_form","layout","onSubmit","hideRequiredMark","height","display","flexDirection","Item","validateTrigger","whitespace","min","max","input","valuePropName","initialValue","tabs","tab","LoadDataDialog_PeriodSelect","normalize","rule","callback","LoadDataDialog_PossibleDataCheckBox","getValueFromEvent","normFile","LoadDataDialog_LoadedFiles","LoadDataDialog_CustomUpload","es_button","onClick","marginRight","htmlType","updateValidationRules","validateField","WrappedLoadDataForm","Form","create","WrappedEditDataForm","onFieldsChange","changedFields","warn","mapPropsToFields","editedData","createFormField","LoadDataDialog","onUpdateFields","_this2$props","_this2","updateData","_this$props3","MODES","freeze","EDIT","LOAD","extractDataSource","path","split","MiddleWrapper","LoadData","openedDialogLoad","openedDialogEdit","onCloseDialogLoad","onCloseDialogEdit","openDialogLoad","openDialogEdit","newIndex","curr","newData","update","find","usedData","removeData","newValue","align","LoadData_MiddleWrapper","shape","components_Common_DeleteConfirm","onConfirm","drawer","visible","bodyStyle","flex","Dialogs_LoadDataDialog","colors","color","ColorSelect","ColorSelect_Option","background","VisibilitySwitch","PathSelect","genTreeData","loadedData","selectable","set","tree_select","dropdownStyle","maxHeight","overflow","treeData","treeDefaultExpandAll","AxisSelect","id","UseDataDialog_Option","UseDataForm","handleAxisData","config","axisData","yAxises","defaultAxisData","_this$handleAxisData","UseDataDialog_PathSelect","UseDataDialog_AxisSelect","gutter","input_number","step","precision","ColorSelect_ColorSelect","components_Common_VisibilitySwitch","lineWidth","dashLength","dashSpacing","WrappedUseDataForm","WrappedEditUseDataForm","UseDataDialog","_this3$props","_this3","UseData","_this$props4","UseData_MiddleWrapper","Dialogs_UseDataDialog","AxisSideSelect","AxisDialog_Option","AxisForm","_MODES$LOAD$MODES$EDI","_MODES$LOAD$MODES$EDI2","AxisDialog_AxisSideSelect","help","react","unit","WrappedEditAxisForm","editedAxis","WrappedLoadAxisForm","AxisDialog","XAxisForm","datesNumber","WrappedXAxisForm","XAxisDialog","EditSettingsForm","slider","WrappedEditSettingsForm","settings","EditSettingsDialog","ConfigChart","openedDialogSettings","openedDialogXAxis","openedDialogAddAxis","openedDialogEditAxis","onCloseDialogSettings","onCloseDialogXAxis","onCloseDialogAddAxis","onCloseDialogEditAxis","openDialogSettings","openDialogXAxis","openDialogAddAxis","openDialogEditAxis","axis","addAxis","newAxis","ncofig","updateAxis","removeAxis","axisId","updateSettings","newSettings","updateXAxis","_this$props5","xAxis","ConfigChart_MiddleWrapper","axes","Dialogs_EditSettingsDialog","Dialogs_XAxisDialog","Dialogs_AxisDialog","Panel","Collapse","getActiveStatus","isActiveUsedData","getOwnPropertyNames","isActiveChartConfig","ChartSetup","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","changeActiveKey","newActiveKey","activeKey","updateLoadedData","updateUsedData","updateChartConfig","_getActiveStatus","prevProps","updateActiveKeys","removeActiveKeys","activeStatus","prevActiveStatus","_","union","chartConfig","_getActiveStatus2","collapse","bordered","header","ChartSetup_LoadData","ChartSetup_UseData","ChartSetup_ConfigChart","autoRanges","limit","calculateSpan","power","range","logRange","floor","log10","pow","calculatePower","digit","minTick","maxTick","ceil","minValue","maxValue","formatRange","auto","Number","parseFloat","getTicks","_ref5","dateTicks","_ref6","withTime","dateFrom","dateTo","start","unix","end","duration","diff","asHours","asDays","number","iter","isAfter","chartRangesFromConfig","rangeFrom","rangeTo","rangeSpan","_getRangeFromData","getRangeFromData","domainMin","domainMax","ticks","CustomYLabel","side","_props$viewBox","viewBox","x","y","nx","transform","CustomXLabel","_props$viewBox2","ny","formatDate","timestamp","formatHour","CustomizedXAxisTick","payload","dy","textAnchor","fill","xAxisHeight","showDescription","generateRegresionKey","extractDataKey","generateRegresionPath","extractDataFromPath","sourceId","pop","regresionSettings","activeDot","dashed","CustomLine","dataSet","lineId","lineColor","es6","isAnimationActive","strokeDasharray","strokeWidth","stroke","dot","dataKey","yAxisId","CustomTooltip","active","startsWith","dataFromAxis","used","item","timeFromData","generateRegresionValue","xData","yData","_regresionData","_ref8","sx2","sx","sxy","sy","regresionData","n","b","regresion","genRegresionValue","_generateRegresionVal","RegresionSummary","calculate","showRegresion","_ref9","findIndex","_generateRegresionVal2","msInHour","toExponential","ResponsiveLineChart","stopInteractive","_chartConfig$settings","addRegresionValues","showTitle","aspect","content","LineChart_CustomTooltip","showLegend","verticalAlign","paylodUniqBy","_ref10","vertical","timeSpread","allowDataOverflow","padding","left","right","tick","LineChart_CustomizedXAxisTick","interval","domain","LineChart_CustomXLabel","CustomXAxis","yAxis","dataSpread","showAxis","_chartRangesFromConfi","hide","orientation","LineChart_CustomYLabel","CustomYAxis","_ref11","_ref12","LineChart_RegresionSummary","defaultChartConfig","0","ChartCreate","mapSetupToChart","fieldKey","mapSetupResult","ChartCreate_ChartSetup_ChartSetup","Charts_LineChart","empty","image","locale","App","classes","locale_provider","pl_PL","components_ChartCreate_ChartCreate","withStyles","root","menuTab","maxWidth","textDecoration","button","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.aa122f50.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\n// import Charts from \"./Charts/LineChart\";\r\n\r\nimport jsPDF from \"jspdf\";\r\n\r\nimport canvg from \"canvg\";\r\n\r\nclass PDFGeneration extends Component {\r\n  chartRef = null;\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>{/* <Charts ref={(input) => {this.chartRef = input }} /> */}</div>\r\n        <div>\r\n          <button onClick={this.generatedPDF}>Generate PDF!</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  generatedPDF() {\r\n    fetch(\"http://localhost:9000/api/render\", {\r\n      method: \"POST\", // *GET, POST, PUT, DELETE, etc.\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({ url: \"http://localhost:3000\" }) // body data type must match \"Content-Type\" header\r\n    })\r\n      .then(response => response.blob())\r\n      .then(blob => {\r\n        var newBlob = new Blob([blob], { type: \"application/pdf\" });\r\n        if (window.navigator && window.navigator.msSaveOrOpenBlob) {\r\n          window.navigator.msSaveOrOpenBlob(newBlob);\r\n          return;\r\n        }\r\n        const data = window.URL.createObjectURL(newBlob);\r\n        var link = document.createElement(\"a\");\r\n        link.href = data;\r\n        link.download = \"file.pdf\";\r\n        link.click();\r\n        setTimeout(function() {\r\n          window.URL.revokeObjectURL(data);\r\n        }, 100);\r\n      });\r\n  }\r\n  generatePdf() {\r\n    alert(\"blick!\");\r\n    const element = document.getElementsByClassName(\"recharts-surface\")[0];\r\n    if (element) {\r\n      console.log(element);\r\n      const svg = new XMLSerializer().serializeToString(element);\r\n      const svg64 =\r\n        \"data:image/svg+xml;base64,\" + btoa(unescape(encodeURIComponent(svg)));\r\n      const canvas = document.createElement(\"canvas\");\r\n      canvas.height = 600;\r\n      canvas.width = 1000;\r\n      const ctx = canvas.getContext(\"2d\");\r\n      ctx.drawSvg(svg64, 0, 0, 1000, 600);\r\n\r\n      const png = canvas.toDataURL(\"image/png\");\r\n\r\n      // const image = new Image(500,300)\r\n      // image.src = png;\r\n      // document.body.append(image);\r\n\r\n      const doc = new jsPDF(\"portrait\", \"mm\", \"a4\");\r\n      doc.setFontSize(20);\r\n      doc.text(15, 15, \"Super Cool Chart\");\r\n      doc.addImage(png, \"PNG\", 20, 20, 210 - 20 * 2, ((210 - 20 * 2) * 6) / 10);\r\n      doc.save(\"new-canvas.pdf\");\r\n    }\r\n  }\r\n}\r\n\r\nexport default PDFGeneration;\r\n","import React from \"react\";\r\n// imported elements\r\n// css\r\nimport \"../../css/Common/DeleteConfirm.css\";\r\n// ant.design\r\nimport { Popconfirm, Tooltip } from \"antd\";\r\n\r\nconst DeleteConfirm = ({\r\n  title,\r\n  canRemove,\r\n  remove,\r\n  reason,\r\n  children,\r\n  ...props\r\n}) => (\r\n  <Tooltip\r\n    placement=\"top\"\r\n    arrowPointAtCenter\r\n    title={canRemove ? remove : reason}\r\n  >\r\n    {canRemove ? (\r\n      <Popconfirm\r\n        placement=\"top\"\r\n        title={<div className=\"PopConfirm\">{title}</div>}\r\n        okText=\"Tak\"\r\n        cancelText=\"Nie\"\r\n        {...props}\r\n      >\r\n        {children}\r\n      </Popconfirm>\r\n    ) : (\r\n      children\r\n    )}\r\n  </Tooltip>\r\n);\r\n\r\nexport default DeleteConfirm;\r\n","import moment from \"moment\";\r\n\r\nexport const RandomSerie = ({\r\n  from = 10,\r\n  to = 15,\r\n  wavePeriod = 1,\r\n  waveScale = 0,\r\n  rand = 0.2,\r\n  dataSets = 50,\r\n  dataSetBegin = 1,\r\n  dataSetEnd = 50\r\n}) => {\r\n  const result = [];\r\n  for (let i = 0; i < dataSets; i++) {\r\n    const generated =\r\n      from +\r\n      ((to - from) * i) / (dataSets - 1) +\r\n      Math.sin(((i / (dataSets - 1)) * 2 * Math.PI) / wavePeriod) * waveScale +\r\n      rand * Math.random();\r\n    result.push(generated.toFixed(2));\r\n  }\r\n  return result;\r\n};\r\nexport const DataSetLabel = ({\r\n  dataSets = 50,\r\n  dataSetBegin = 1,\r\n  dataSetEnd = 50\r\n}) => {\r\n  const result = [];\r\n  const begin = moment(\"2019-03-22\");\r\n  for (let i = 0; i < dataSets; i++) {\r\n    result.push({\r\n      time: begin.format(\"x\")\r\n    });\r\n    begin.add(1, \"hours\");\r\n  }\r\n  return result;\r\n};\r\n\r\nconst Generator = {\r\n  outside_temperature: () =>\r\n    RandomSerie({ from: -3, to: 10, wavePeriod: 0.5, waveScale: 5, rand: 0.5 }),\r\n  inside_temperature: () =>\r\n    RandomSerie({ from: 18, to: 20, wavePeriod: 6, waveScale: 0.5, rand: 0.2 }),\r\n  hot_water: () => RandomSerie({ from: 3667, to: 4223, rand: 8 }),\r\n  electricity: () => RandomSerie({ from: 4567.23, to: 4644.89, rand: 0.8 })\r\n};\r\n\r\nconst TestDataGenerator = (generator = Generator) => {\r\n  const result = DataSetLabel({});\r\n  Object.keys(generator).forEach(key => {\r\n    const data = generator[key]();\r\n    data.forEach((val, i) => {\r\n      result[i][key] = val;\r\n    });\r\n  });\r\n  return result;\r\n};\r\n\r\nexport default TestDataGenerator;\r\n","import React from \"react\";\r\n// imported elements\r\n// css\r\nimport \"../../css/Common/Upload.css\";\r\n// ant.design\r\nimport { Upload } from \"antd\";\r\n\r\nconst dummyRequest = ({ file, onSuccess, onError }, validator) => {\r\n  setTimeout(() => {\r\n    if (!validator || validator(file)) {\r\n      onSuccess(\"ok\");\r\n    } else {\r\n      onError(\"bad\");\r\n    }\r\n  }, 0);\r\n};\r\n\r\nconst CustomUpload = ({ validator, ...props }) => (\r\n  <Upload customRequest={arg => dummyRequest(arg, validator)} {...props} />\r\n);\r\n\r\nconst CustomDragger = ({ validator, ...props }) => (\r\n  <Upload.Dragger\r\n    customRequest={arg => dummyRequest(arg, validator)}\r\n    {...props}\r\n  />\r\n);\r\n\r\nexport default Object.assign(CustomUpload, {\r\n  Dragger: CustomDragger\r\n});\r\n","import React, { Component, PureComponent } from \"react\";\r\nimport moment from \"moment\";\r\nimport { filter } from \"lodash\";\r\nimport PropTypes from \"prop-types\";\r\n// imported elements\r\nimport TestDataGenerator, {\r\n  RandomSerie\r\n} from \"../../../../generators/TestDataGenerator\";\r\nimport Upload from \"../../../Common/Upload\";\r\n// ant.design\r\nimport {\r\n  Checkbox,\r\n  Form,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Tabs,\r\n  Icon,\r\n  Button,\r\n  Select,\r\n  DatePicker,\r\n  message\r\n} from \"antd\";\r\nconst { Option } = Select;\r\nconst { TabPane } = Tabs;\r\nconst { WeekPicker, MonthPicker, RangePicker } = DatePicker;\r\n\r\nfunction timeout(ms) {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\nconst filterOutAll = array => filter(array, e => e !== \"all\");\r\n\r\nconst filterOnlyDoneFiles = array => filter(array, e => e.status === \"done\");\r\n\r\nconst isDateAfter = date => moment().isBefore(date);\r\n\r\nconst periods = {\r\n  day: {\r\n    description: \"Dzienne\",\r\n    default: moment().subtract(1, \"day\"),\r\n    label: \"Wybór dnia\",\r\n    name: \"date-picker\",\r\n    rules: [{ required: true, message: \"Wybierz wartość\", type: \"object\" }],\r\n    element: ({ ...props }) => (\r\n      <DatePicker disabledDate={isDateAfter} {...props} />\r\n    ),\r\n    formatter: value => ({\r\n      from: value.startOf(\"day\").format(),\r\n      to: value.endOf(\"day\").format()\r\n    })\r\n  },\r\n  week: {\r\n    description: \"Tygodniowe\",\r\n    default: moment().subtract(1, \"week\"),\r\n    label: \"Wybór tygodnia\",\r\n    name: \"week-picker\",\r\n    rules: [{ required: true, message: \"Wybierz wartość\", type: \"object\" }],\r\n    element: ({ ...props }) => (\r\n      <WeekPicker\r\n        disabledDate={isDateAfter}\r\n        format=\"WW. [tydzień] YYYY\"\r\n        {...props}\r\n      />\r\n    ),\r\n    formatter: value => ({\r\n      from: value.startOf(\"week\").format(),\r\n      to: value.endOf(\"week\").format()\r\n    })\r\n  },\r\n  month: {\r\n    description: \"Miesięczne\",\r\n    default: moment().subtract(1, \"month\"),\r\n    label: \"Wybór miesiąca\",\r\n    name: \"month-picker\",\r\n    rules: [{ required: true, message: \"Wybierz wartość\", type: \"object\" }],\r\n    element: ({ ...props }) => (\r\n      <MonthPicker disabledDate={isDateAfter} {...props} />\r\n    ),\r\n    formatter: value => ({\r\n      from: value.startOf(\"month\").format(),\r\n      to: value.endOf(\"month\").format()\r\n    })\r\n  },\r\n  userDefined: {\r\n    description: \"Inny zakres\",\r\n    default: [moment().subtract(1, \"months\"), moment()],\r\n    label: \"Wybór zakresu dni\",\r\n    name: \"range-picker\",\r\n    rules: [{ required: true, message: \"Wybierz wartość\", type: \"array\" }],\r\n    element: ({ ...props }) => (\r\n      <RangePicker disabledDate={isDateAfter} {...props} />\r\n    ),\r\n    formatter: values => ({\r\n      from: values[0].startOf(\"day\").format(),\r\n      to: values[0].endOf(\"day\").format()\r\n    })\r\n  }\r\n};\r\n\r\nclass PeriodSelect extends Component {\r\n  render() {\r\n    return (\r\n      <Select placeholder=\"Rodzaj zakresu danych\" {...this.props}>\r\n        {Object.keys(periods).map(e => (\r\n          <Option key={e} value={e}>\r\n            {periods[e].description}\r\n          </Option>\r\n        ))}\r\n      </Select>\r\n    );\r\n  }\r\n}\r\n\r\nclass PossibleDataCheckBox extends Component {\r\n  render() {\r\n    const { possibleData, ...props } = this.props;\r\n    return (\r\n      <Checkbox.Group style={{ width: \"100%\" }} {...props}>\r\n        <Row>\r\n          <Col span={24}>\r\n            <Checkbox value=\"all\">Wybierz wszystkie</Checkbox>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          {possibleData.map(e => (\r\n            <Col key={e.key} span={8}>\r\n              <Checkbox value={e.key}>{e.description}</Checkbox>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      </Checkbox.Group>\r\n    );\r\n  }\r\n}\r\n\r\nclass CustomUpload extends Component {\r\n  render() {\r\n    const { onChange, disabled } = this.props;\r\n    return (\r\n      <Upload.Dragger\r\n        // can add validator={(file) => validatefileresult: boolean}\r\n        accept=\".txt,.csv,.xls,.xlsx\"\r\n        name=\"files\"\r\n        onChange={onChange}\r\n        disabled={disabled}\r\n      >\r\n        <p className=\"ant-upload-drag-icon\">\r\n          <Icon type=\"inbox\" />\r\n        </p>\r\n        <p className=\"ant-upload-text\">Kliknij lub przeciągnij plik z danymi</p>\r\n        <p className=\"ant-upload-hint\">\r\n          Wspiera przesłanie pojedynczego pliku.\r\n        </p>\r\n      </Upload.Dragger>\r\n    );\r\n  }\r\n}\r\n\r\nclass LoadedFiles extends PureComponent {\r\n  render() {\r\n    const { fileList } = this.props;\r\n    return (\r\n      <Upload\r\n        showUploadList={{ showRemoveIcon: false }}\r\n        defaultFileList={fileList.fileList}\r\n        disabled={true}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nclass LoadDataForm extends Component {\r\n  static propTypes = {\r\n    mode: PropTypes.oneOf([\"edit\", \"load\"]).isRequired,\r\n    editedData: PropTypes.object,\r\n    possibleData: PropTypes.array,\r\n    onClose: PropTypes.func,\r\n    loadData: PropTypes.func,\r\n    updateData: PropTypes.func\r\n  };\r\n\r\n  state = {\r\n    possibleData: this.props.possibleData || [],\r\n    uploadedFiles: 0\r\n  };\r\n\r\n  onUploadChange = info => {\r\n    if (info.file.status === \"done\") {\r\n      message.success(`${info.file.name} - Plik został załadowany poprawnie`);\r\n    } else if (info.file.status === \"error\") {\r\n      message.error(`${info.file.name} - Nie udało się załadować pliku.`);\r\n    }\r\n    this.setState({\r\n      uploadedFiles: filterOnlyDoneFiles(info.fileList)\r\n    });\r\n  };\r\n\r\n  changeDataSource = source => {\r\n    this.props.form.setFieldsValue({\r\n      dataSource: source\r\n    });\r\n  };\r\n\r\n  // TODO aktualnie zaslepka na strzal\r\n  loadDataFromApi = async fields => {\r\n    await timeout(2000);\r\n    const Generator = {};\r\n    fields.measurements.forEach(e => {\r\n      Generator[e] = () =>\r\n        RandomSerie({\r\n          from: 10 + 14 * Math.random(),\r\n          to: 20 + 6 * Math.random(),\r\n          waveScale: 0.3 * Math.random()\r\n        });\r\n    });\r\n    return TestDataGenerator(Generator);\r\n  };\r\n\r\n  getFieldsFromFlow = () => {\r\n    const requiredFields = [];\r\n    const formattedFields = [];\r\n    requiredFields.push(\"description\");\r\n    requiredFields.push(\"dataSource\");\r\n    if (this.props.form.getFieldValue(\"dataSource\") === \"db\") {\r\n      const currentPeriodValue = this.props.form.getFieldValue(\"selectPeriod\");\r\n      requiredFields.push(\"selectPeriod\");\r\n      requiredFields.push(periods[currentPeriodValue].name);\r\n      formattedFields.push({\r\n        name: periods[currentPeriodValue].name,\r\n        formatter: periods[currentPeriodValue].formatter\r\n      });\r\n      requiredFields.push(\"measurements\");\r\n      formattedFields.push({\r\n        name: \"measurements\",\r\n        formatter: filterOutAll\r\n      });\r\n    } else {\r\n      requiredFields.push(\"dropbox\");\r\n      formattedFields.push({\r\n        name: \"dropbox\",\r\n        formatter: value => filterOnlyDoneFiles(value.fileList)\r\n      });\r\n      requiredFields.push(\"saveOnDB\");\r\n      formattedFields.push({\r\n        name: \"saveOnDB\",\r\n        formatter: value => Boolean(value)\r\n      });\r\n    }\r\n    return { requiredFields, formattedFields };\r\n  };\r\n\r\n  getRequiredFields = requiredFields =>\r\n    requiredFields.reduce(\r\n      (prev, field) => ({\r\n        ...prev,\r\n        [field]: { value: this.props.form.getFieldValue(field) }\r\n      }),\r\n      {}\r\n    );\r\n\r\n  handleSubmit = async e => {\r\n    e.preventDefault();\r\n\r\n    const { requiredFields, formattedFields } = this.getFieldsFromFlow();\r\n\r\n    this.props.form.validateFields(\r\n      requiredFields,\r\n      {},\r\n      async (err, fieldsValue) => {\r\n        if (err) {\r\n          return;\r\n        }\r\n        const statusFieldsValue = { ...fieldsValue };\r\n        formattedFields.forEach(e => {\r\n          fieldsValue[e.name] = e.formatter(fieldsValue[e.name]);\r\n        });\r\n        if (this.props.mode === \"edit\") {\r\n          // TODO strzal / update info\r\n        } else {\r\n          const data =\r\n            statusFieldsValue[\"dataSource\"] === \"db\"\r\n              ? await this.loadDataFromApi(fieldsValue)\r\n              : {};\r\n          const loadedKeys =\r\n            statusFieldsValue[\"dataSource\"] === \"db\"\r\n              ? filter(this.state.possibleData, e =>\r\n                  statusFieldsValue[\"measurements\"].includes(e.key)\r\n                )\r\n              : [];\r\n          this.props.loadData({\r\n            fields: this.getRequiredFields(requiredFields),\r\n            data,\r\n            possibleData: this.state.possibleData,\r\n            loadedKeys\r\n          });\r\n          this.handleReset();\r\n          this.props.onClose();\r\n        }\r\n        return;\r\n      }\r\n    );\r\n  };\r\n\r\n  // TODO: fetch/mock\r\n  loadPossibleData = async () => {\r\n    await timeout(1000);\r\n    const result = [\r\n      {\r\n        key: \"temperature\",\r\n        description: \"Temperatura\"\r\n      },\r\n      {\r\n        key: \"co2\",\r\n        description: \"CO2\"\r\n      },\r\n      {\r\n        key: \"humidity\",\r\n        description: \"Wilgotność\"\r\n      }\r\n    ];\r\n    this.setState({\r\n      possibleData: result,\r\n      checkedList: [\"all\", ...result.map(e => e.key)]\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    console.log(\"did mount\", this.props, this.state);\r\n    if (this.props.mode === \"load\") {\r\n      this.loadPossibleData();\r\n    }\r\n  }\r\n\r\n  normalizeCheckBox = (value, prevValue = []) => {\r\n    if (!value) return [];\r\n    if (value.indexOf(\"all\") >= 0 && prevValue.indexOf(\"all\") < 0) {\r\n      return [\"all\", ...this.state.possibleData.map(e => e.key)];\r\n    }\r\n    if (value.indexOf(\"all\") < 0 && prevValue.indexOf(\"all\") >= 0) {\r\n      return [];\r\n    }\r\n    const filtered = filterOutAll(value);\r\n    if (filtered.length !== this.state.possibleData.length) {\r\n      return filtered;\r\n    } else {\r\n      return [\"all\", ...this.state.possibleData.map(e => e.key)];\r\n    }\r\n  };\r\n\r\n  handleReset = () => {\r\n    this.props.form.resetFields();\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator, getFieldValue } = this.props.form;\r\n    const initialPeriodValue = \"month\";\r\n    const currentPeriodValue =\r\n      getFieldValue(\"selectPeriod\") || initialPeriodValue;\r\n    const isEdit = this.props.mode === \"edit\";\r\n    return (\r\n      <Form\r\n        layout=\"vertical\"\r\n        onSubmit={this.handleSubmit}\r\n        hideRequiredMark={true}\r\n        style={{\r\n          height: \"100%\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\"\r\n        }}\r\n      >\r\n        <div className=\"LoadDataDialogInner\">\r\n          <Form.Item label=\"Nazwa zestawu\">\r\n            {getFieldDecorator(\"description\", {\r\n              validateTrigger: [\"onChange\", \"onBlur\"],\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"Proszę podać nazwę zestawu\"\r\n                },\r\n                {\r\n                  message: \"Wymagana nazwa o długości od 3 do 30 znaków\",\r\n                  whitespace: true,\r\n                  min: 3,\r\n                  max: 30\r\n                }\r\n              ]\r\n            })(<Input placeholder=\"Nazwa zestawu danych\" />)}\r\n          </Form.Item>\r\n          <Form.Item label=\"Źródło danych\">\r\n            {getFieldDecorator(\"dataSource\", {\r\n              valuePropName: \"activeKey\",\r\n              initialValue: \"db\"\r\n            })(\r\n              <Tabs onChange={this.changeDataSource}>\r\n                <TabPane\r\n                  tab={\r\n                    <span>\r\n                      <Icon type=\"database\" />\r\n                      Pobierz z bazy danych\r\n                    </span>\r\n                  }\r\n                  key=\"db\"\r\n                  disabled={isEdit && getFieldValue(\"dataSource\") !== \"db\"}\r\n                >\r\n                  <Form.Item label=\"Rodzaj zakresu danych\">\r\n                    {getFieldDecorator(\"selectPeriod\", {\r\n                      validateTrigger: [\"onChange\"],\r\n                      rules: [\r\n                        {\r\n                          required: true,\r\n                          message: \"Wybierz rodzaj zakresu czasu\"\r\n                        }\r\n                      ],\r\n                      initialValue: initialPeriodValue\r\n                    })(<PeriodSelect disabled={isEdit} />)}\r\n                  </Form.Item>\r\n                  <Form.Item label={periods[currentPeriodValue].label}>\r\n                    {getFieldDecorator(periods[currentPeriodValue].name, {\r\n                      validateTrigger: [\"onChange\"],\r\n                      rules: periods[currentPeriodValue].rules,\r\n                      initialValue: periods[currentPeriodValue].default\r\n                    })(\r\n                      periods[currentPeriodValue].element({\r\n                        disabled: isEdit\r\n                      })\r\n                    )}\r\n                  </Form.Item>\r\n                  {this.state.possibleData.length > 0 && (\r\n                    <Form.Item label=\"Pobierane pomiary\">\r\n                      {getFieldDecorator(\"measurements\", {\r\n                        initialValue: this.state.checkedList,\r\n                        normalize: this.normalizeCheckBox,\r\n                        rules: [\r\n                          {\r\n                            validator: (rule, value, callback) =>\r\n                              filterOutAll(value).length === 0\r\n                                ? callback(rule.message)\r\n                                : callback(),\r\n                            message:\r\n                              \"Potrzebny minimum jeden pomiar do pobrania\"\r\n                          }\r\n                        ]\r\n                      })(\r\n                        <PossibleDataCheckBox\r\n                          possibleData={this.state.possibleData}\r\n                        />\r\n                      )}\r\n                    </Form.Item>\r\n                  )}\r\n                </TabPane>\r\n                <TabPane\r\n                  tab={\r\n                    <span>\r\n                      <Icon type=\"upload\" />\r\n                      Wgraj z pliku\r\n                    </span>\r\n                  }\r\n                  key=\"file\"\r\n                  disabled={isEdit && getFieldValue(\"dataSource\") !== \"file\"}\r\n                >\r\n                  <Form.Item label=\"Wczytaj plik\">\r\n                    <div className=\"dropbox\">\r\n                      {getFieldDecorator(\"dropbox\", {\r\n                        valuePropName: \"fileList\",\r\n                        getValueFromEvent: this.normFile,\r\n                        rules: [\r\n                          {\r\n                            validator: (rule, value, callback) =>\r\n                              filterOnlyDoneFiles(value ? value.fileList : [])\r\n                                .length !== 1\r\n                                ? callback(rule.message)\r\n                                : callback(),\r\n                            message: \"Potrzebny poprawny plik do załadowania\"\r\n                          }\r\n                        ]\r\n                      })(\r\n                        isEdit ? (\r\n                          <LoadedFiles />\r\n                        ) : (\r\n                          <CustomUpload\r\n                            onChange={this.onUploadChange}\r\n                            disabled={this.state.uploadedFiles > 0}\r\n                          />\r\n                        )\r\n                      )}\r\n                    </div>\r\n                  </Form.Item>\r\n                  <Form.Item>\r\n                    {getFieldDecorator(\"saveOnDB\", {\r\n                      valuePropName: \"checked\"\r\n                    })(<Checkbox>Zapisz w bazie danych</Checkbox>)}\r\n                  </Form.Item>\r\n                </TabPane>\r\n              </Tabs>\r\n            )}\r\n          </Form.Item>\r\n        </div>\r\n        <div className=\"LoadDataDialogSubmit\">\r\n          {!isEdit && (\r\n            <Button onClick={this.handleReset} style={{ marginRight: 16 }}>\r\n              Zresetuj\r\n            </Button>\r\n          )}\r\n          <Button\r\n            type=\"primary\"\r\n            icon={isEdit ? \"redo\" : \"plus\"}\r\n            htmlType=\"submit\"\r\n            disabled={!(this.state.possibleData.length > 0)}\r\n          >\r\n            {isEdit ? \"Aktualizuj\" : \"Dodaj dane\"}\r\n          </Button>\r\n        </div>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst updateValidationRules = {\r\n  description: [value => value.length >= 3, value => value.length <= 30],\r\n  measurements: [value => filterOutAll(value).length !== 0]\r\n};\r\n\r\nconst validateField = (field, value) =>\r\n  !updateValidationRules[field] ||\r\n  updateValidationRules[field].reduce(\r\n    (result, rule) => result && rule(value),\r\n    true\r\n  );\r\n\r\nconst validateFields = fields =>\r\n  Object.keys(fields).reduce(\r\n    (prev, field) => prev && validateField(field, fields[field].value),\r\n    true\r\n  );\r\n\r\nconst WrappedLoadDataForm = Form.create({ name: \"load_data_form\" })(\r\n  LoadDataForm\r\n);\r\nconst WrappedEditDataForm = Form.create({\r\n  name: \"edit_data_form\",\r\n  onFieldsChange(props, changedFields) {\r\n    if (!validateFields(changedFields)) {\r\n      return console.warn(\"Form not valid, abort update\");\r\n    }\r\n    props.onChange(changedFields);\r\n  },\r\n  mapPropsToFields(props) {\r\n    return Object.keys(props.editedData).reduce(\r\n      (prev, key) => ({\r\n        ...prev,\r\n        [key]: Form.createFormField({ ...props.editedData[key] })\r\n      }),\r\n      {}\r\n    );\r\n  }\r\n})(LoadDataForm);\r\n\r\nclass LoadDataDialog extends Component {\r\n  static propTypes = {\r\n    mode: PropTypes.string,\r\n    editedData: PropTypes.object,\r\n    onClose: PropTypes.func,\r\n    loadData: PropTypes.func,\r\n    updateData: PropTypes.func\r\n  };\r\n\r\n  onUpdateFields = changedFields => {\r\n    const { editedData, updateData } = this.props;\r\n    if (changedFields !== editedData.fields) {\r\n      console.log({\r\n        ...editedData,\r\n        fields: { ...editedData.fields, ...changedFields }\r\n      });\r\n      updateData({\r\n        ...editedData,\r\n        fields: { ...editedData.fields, ...changedFields }\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { mode, editedData, onClose, loadData, updateData } = this.props;\r\n\r\n    return (\r\n      <div className=\"LoadDataDialog\">\r\n        {mode === \"edit\" ? (\r\n          <WrappedEditDataForm\r\n            mode=\"edit\"\r\n            onClose={onClose}\r\n            updateData={updateData}\r\n            editedData={editedData.fields}\r\n            possibleData={editedData.possibleData}\r\n            onChange={this.onUpdateFields}\r\n          />\r\n        ) : (\r\n          <WrappedLoadDataForm\r\n            mode=\"load\"\r\n            onClose={onClose}\r\n            loadData={loadData}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoadDataDialog;\r\n","export const MODES = Object.freeze({\r\n  EDIT: \"edit\",\r\n  LOAD: \"load\"\r\n});\r\n\r\nexport const extractDataSource = path => {\r\n  const tab = path.split(\"-\");\r\n  return tab[0];\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { find } from \"lodash\";\r\n// imported elements\r\nimport DeleteConfirm from \"../../Common/DeleteConfirm\";\r\nimport LoadDataDialog from \"./Dialogs/LoadDataDialog\";\r\nimport { extractDataSource } from \"./common\";\r\n// ant.design\r\nimport { Button, Col, Drawer, Row, Tooltip } from \"antd\";\r\n\r\nconst MiddleWrapper = ({ ...props }) => (\r\n  <div className=\"MiddleWrapper\" {...props} />\r\n);\r\n\r\nclass LoadData extends Component {\r\n  static propTypes = {\r\n    data: PropTypes.object.isRequired,\r\n    usedData: PropTypes.object.isRequired,\r\n    update: PropTypes.func.isRequired\r\n  };\r\n\r\n  state = {\r\n    openedDialogLoad: false,\r\n    openedDialogEdit: false,\r\n    editedData: null\r\n  };\r\n\r\n  onCloseDialogLoad = () => {\r\n    this.setState({ openedDialogLoad: false });\r\n  };\r\n  onCloseDialogEdit = () => {\r\n    this.setState({\r\n      openedDialogEdit: false,\r\n      editedData: null\r\n    });\r\n  };\r\n  openDialogLoad = () => {\r\n    this.setState({ openedDialogLoad: true });\r\n  };\r\n  openDialogEdit = key => {\r\n    this.setState({\r\n      openedDialogEdit: true,\r\n      editedData: key\r\n    });\r\n  };\r\n\r\n  newIndex = () =>\r\n    Object.keys(this.props.data).reduce(\r\n      (prev, curr) => Math.max(prev, curr),\r\n      -1\r\n    ) + 1;\r\n\r\n  loadData = newData => {\r\n    const { data, update } = this.props;\r\n    update({ ...data, [this.newIndex()]: newData });\r\n  };\r\n\r\n  canRemove = key =>\r\n    !find(\r\n      Object.keys(this.props.usedData),\r\n      i =>\r\n        extractDataSource(this.props.usedData[i].fields.dataSource.value) ===\r\n        key\r\n    );\r\n\r\n  removeData = key => {\r\n    const { data, update } = this.props;\r\n    const newValue = { ...data };\r\n    delete newValue[key];\r\n    update(newValue);\r\n  };\r\n\r\n  updateData = (key, value) => {\r\n    const { data, update } = this.props;\r\n    update({ ...data, [key]: value });\r\n  };\r\n\r\n  render() {\r\n    const { data } = this.props;\r\n    return (\r\n      <div className=\"LoadData\">\r\n        {Object.keys(data).map(key => (\r\n          <Row type=\"flex\" align=\"middle\" key={key}>\r\n            <Col span={16}>{data[key].fields.description.value}</Col>\r\n            <Col span={4}>\r\n              <MiddleWrapper>\r\n                <Tooltip placement=\"top\" title=\"Ustawienia\">\r\n                  <Button\r\n                    shape=\"circle\"\r\n                    icon=\"setting\"\r\n                    onClick={() => this.openDialogEdit(key)}\r\n                  />\r\n                </Tooltip>\r\n              </MiddleWrapper>\r\n            </Col>\r\n            <Col span={4}>\r\n              <MiddleWrapper>\r\n                <DeleteConfirm\r\n                  title=\"Czy chcesz usunąć załadowane dane?\"\r\n                  remove=\"Usuń załadowane dane\"\r\n                  canRemove={this.canRemove(key)}\r\n                  reason=\"Nie można usunąć, dane są w użyciu.\"\r\n                  onConfirm={() => this.removeData(key)}\r\n                >\r\n                  <Button\r\n                    disabled={!this.canRemove(key)}\r\n                    shape=\"circle\"\r\n                    icon=\"delete\"\r\n                  />\r\n                </DeleteConfirm>\r\n              </MiddleWrapper>\r\n            </Col>\r\n          </Row>\r\n        ))}\r\n        <Row type=\"flex\" align=\"middle\">\r\n          <Col span={16}>Nowy zestaw danych</Col>\r\n          <Col span={4} />\r\n          <Col span={4}>\r\n            <MiddleWrapper>\r\n              <Tooltip placement=\"bottom\" title=\"Dodaj zestaw danych\">\r\n                <Button\r\n                  type=\"primary\"\r\n                  shape=\"circle\"\r\n                  icon=\"plus\"\r\n                  onClick={this.openDialogLoad}\r\n                />\r\n              </Tooltip>\r\n            </MiddleWrapper>\r\n          </Col>\r\n        </Row>\r\n        <Drawer\r\n          title=\"Dodaj nowy zestaw danych\"\r\n          placement=\"left\"\r\n          onClose={this.onCloseDialogLoad}\r\n          visible={this.state.openedDialogLoad}\r\n          width={480}\r\n          bodyStyle={{\r\n            flex: 1\r\n          }}\r\n        >\r\n          <LoadDataDialog\r\n            mode=\"load\"\r\n            onClose={this.onCloseDialogLoad}\r\n            loadData={this.loadData}\r\n          />\r\n        </Drawer>\r\n        {this.state.editedData !== null && (\r\n          <Drawer\r\n            title=\"Edycja zestawu danych\"\r\n            placement=\"left\"\r\n            onClose={this.onCloseDialogEdit}\r\n            visible={this.state.openedDialogEdit}\r\n            width={480}\r\n            bodyStyle={{\r\n              flex: 1\r\n            }}\r\n          >\r\n            <LoadDataDialog\r\n              mode=\"edit\"\r\n              onClose={this.onCloseDialogEdit}\r\n              editedData={data[this.state.editedData]}\r\n              updateData={value =>\r\n                this.updateData(this.state.editedData, value)\r\n              }\r\n            />\r\n          </Drawer>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoadData;\r\n","import React, { Component } from \"react\";\r\n// imported elements\r\n// css\r\nimport \"../../css/Common/ColorSelect.css\";\r\n// ant.design\r\nimport { Select } from \"antd\";\r\nconst { Option } = Select;\r\n\r\nconst colors = [\r\n  {\r\n    description: \"Czarny\",\r\n    color: \"black\"\r\n  },\r\n  {\r\n    description: \"Niebieski\",\r\n    color: \"blue\"\r\n  },\r\n  {\r\n    description: \"Czerwony\",\r\n    color: \"red\"\r\n  }\r\n];\r\n\r\nexport default class ColorSelect extends Component {\r\n  render() {\r\n    return (\r\n      <Select placeholder=\"Kolor linii\" {...this.props}>\r\n        {colors.map((e, i) => (\r\n          <Option key={i} value={e.color}>\r\n            <div>\r\n              <div\r\n                className=\"ColorSelectColor\"\r\n                style={{ background: e.color }}\r\n              />\r\n              <span>{e.description}</span>\r\n            </div>\r\n          </Option>\r\n        ))}\r\n      </Select>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n// imported elements\r\n// css\r\nimport \"../../css/Common/VisibilitySwitch.css\";\r\n// ant.design\r\n\r\nconst VisibilitySwitch = ({ visible, ...props }) => (\r\n  <div className={visible ? \"Visible\" : \"Hidden\"} {...props} />\r\n);\r\n\r\nexport default VisibilitySwitch;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { head } from \"lodash\";\r\n// imported elements\r\nimport ColorSelect from \"../../../Common/ColorSelect\";\r\nimport VisibilitySwitch from \"../../../Common/VisibilitySwitch\";\r\n// ant.design\r\nimport {\r\n  Checkbox,\r\n  Form,\r\n  Input,\r\n  InputNumber,\r\n  Row,\r\n  Col,\r\n  TreeSelect,\r\n  Button,\r\n  Select\r\n} from \"antd\";\r\nconst { Option } = Select;\r\n\r\n// TODO zastosowac MODES\r\n\r\nclass PathSelect extends Component {\r\n  static propTypes = {\r\n    loadedData: PropTypes.object.isRequired\r\n  };\r\n\r\n  genTreeData = () => {\r\n    const data = this.props.loadedData;\r\n    return Object.keys(data).map(e => ({\r\n      title: data[e].fields.description.value,\r\n      value: `${e}`,\r\n      selectable: false,\r\n      key: `${e}`,\r\n      children: data[e].loadedKeys.map(set => ({\r\n        title: `${data[e].fields.description.value}: ${set.description}`,\r\n        value: `${e}-${set.key}`,\r\n        key: `${e}-${set.key}`\r\n      }))\r\n    }));\r\n  };\r\n  render() {\r\n    return (\r\n      <TreeSelect\r\n        dropdownStyle={{ maxHeight: 400, overflow: \"auto\" }}\r\n        treeData={this.genTreeData()}\r\n        placeholder=\"Wybierz załadowane dane\"\r\n        treeDefaultExpandAll\r\n        {...this.props}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nclass AxisSelect extends Component {\r\n  static propTypes = {\r\n    data: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        description: PropTypes.string.isRequired\r\n      })\r\n    )\r\n  };\r\n  render() {\r\n    const { data } = this.props;\r\n    return (\r\n      <Select {...this.props}>\r\n        {data.map(({ id, description }) => (\r\n          <Option key={id} value={id}>\r\n            {description}\r\n          </Option>\r\n        ))}\r\n      </Select>\r\n    );\r\n  }\r\n}\r\n\r\nclass UseDataForm extends Component {\r\n  static propTypes = {\r\n    mode: PropTypes.oneOf([\"edit\", \"load\"]).isRequired,\r\n    editedData: PropTypes.object,\r\n    loadedData: PropTypes.object,\r\n    onClose: PropTypes.func,\r\n    loadData: PropTypes.func,\r\n    config: PropTypes.object.isRequired,\r\n    updateData: PropTypes.func\r\n  };\r\n\r\n  handleSubmit = async e => {\r\n    e.preventDefault();\r\n\r\n    this.props.form.validateFields((err, fieldsValue) => {\r\n      if (err) {\r\n        return;\r\n      }\r\n      if (this.props.mode === \"edit\") {\r\n        this.props.onClose();\r\n      } else {\r\n        this.props.loadData({\r\n          fields: Object.keys(fieldsValue).reduce(\r\n            (prev, field) => ({\r\n              ...prev,\r\n              [field]: {\r\n                value: fieldsValue[field]\r\n              }\r\n            }),\r\n            {}\r\n          )\r\n        });\r\n        this.handleReset();\r\n        this.props.onClose();\r\n      }\r\n    });\r\n  };\r\n\r\n  handleReset = () => {\r\n    this.props.form.resetFields();\r\n  };\r\n\r\n  handleAxisData = () => {\r\n    const { config } = this.props;\r\n    console.log(\"handleAxisData\", this.props);\r\n    const axisData = Object.keys(config.yAxises).map(key => ({\r\n      id: key,\r\n      description: config.yAxises[key].description.value\r\n    }));\r\n    return {\r\n      axisData,\r\n      defaultAxisData: axisData[0].id\r\n    };\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator, getFieldValue } = this.props.form;\r\n    const isEdit = this.props.mode === \"edit\";\r\n    const { axisData, defaultAxisData } = this.handleAxisData();\r\n    return (\r\n      <Form\r\n        layout=\"vertical\"\r\n        onSubmit={this.handleSubmit}\r\n        hideRequiredMark={true}\r\n        style={{\r\n          height: \"100%\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\"\r\n        }}\r\n      >\r\n        <div className=\"LoadDataDialogInner\">\r\n          <Form.Item label=\"Opis danych\">\r\n            {getFieldDecorator(\"description\", {\r\n              validateTrigger: [\"onChange\", \"onBlur\"],\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"Proszę podać opis zestawu\"\r\n                },\r\n                {\r\n                  message: \"Wymagana nazwa o długości od 3 do 30 znaków\",\r\n                  whitespace: true,\r\n                  min: 3,\r\n                  max: 30\r\n                }\r\n              ]\r\n            })(<Input placeholder=\"Nazwa zestawu danych\" />)}\r\n          </Form.Item>\r\n          <Form.Item label=\"Wybór danych\">\r\n            {getFieldDecorator(\"dataSource\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"Proszę wybrać załadowane dane\"\r\n                }\r\n              ]\r\n            })(<PathSelect loadedData={this.props.loadedData} />)}\r\n          </Form.Item>\r\n          <Form.Item label=\"Oś odniesienia\">\r\n            {getFieldDecorator(\"axis\", {\r\n              validateTrigger: [\"onChange\"],\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"Wybierz rodzaj zakresu czasu\"\r\n                }\r\n              ],\r\n              initialValue: defaultAxisData\r\n            })(<AxisSelect data={axisData} />)}\r\n          </Form.Item>\r\n          <Form.Item>\r\n            {getFieldDecorator(\"showRegresion\", {\r\n              initialValue: false,\r\n              valuePropName: \"checked\"\r\n            })(<Checkbox>Pokaż linię regresji</Checkbox>)}\r\n          </Form.Item>\r\n          <Row gutter={24}>\r\n            <Col span={12}>\r\n              <Form.Item label=\"Grubość linii\">\r\n                {getFieldDecorator(\"lineWidth\", {\r\n                  initialValue: 2,\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      type: \"number\",\r\n                      min: 1,\r\n                      max: 6,\r\n                      message: \"Wybierz liczbę z zakresu od 1 do 6\"\r\n                    }\r\n                  ]\r\n                })(\r\n                  <InputNumber\r\n                    className=\"AutoInputNumber\"\r\n                    min={1}\r\n                    max={6}\r\n                    step={1}\r\n                    precision={0}\r\n                  />\r\n                )}\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item label=\"Kolor linii\">\r\n                {getFieldDecorator(\"lineColor\", {\r\n                  initialValue: \"black\",\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"Wybierz kolor linii\"\r\n                    }\r\n                  ]\r\n                })(<ColorSelect />)}\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Form.Item>\r\n            {getFieldDecorator(\"dashed\", {\r\n              initialValue: false,\r\n              valuePropName: \"checked\"\r\n            })(<Checkbox>Użyj przerywanej linii</Checkbox>)}\r\n          </Form.Item>\r\n          <VisibilitySwitch visible={getFieldValue(\"dashed\")}>\r\n            <Row gutter={24}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Długość kreski\">\r\n                  {getFieldDecorator(\"dashLength\", {\r\n                    initialValue: 5,\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        type: \"number\",\r\n                        min: 4,\r\n                        max: 15,\r\n                        message: \"Wybierz liczbę z zakresu od 4 do 15\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <InputNumber\r\n                      className=\"AutoInputNumber\"\r\n                      min={4}\r\n                      max={15}\r\n                      step={1}\r\n                      precision={0}\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Długość przerwy\">\r\n                  {getFieldDecorator(\"dashSpacing\", {\r\n                    initialValue: 5,\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        type: \"number\",\r\n                        min: 4,\r\n                        max: 15,\r\n                        message: \"Wybierz liczbę z zakresu od 4 do 15\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <InputNumber\r\n                      className=\"AutoInputNumber\"\r\n                      min={4}\r\n                      max={15}\r\n                      step={1}\r\n                      precision={0}\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n          </VisibilitySwitch>\r\n        </div>\r\n        <div className=\"LoadDataDialogSubmit\">\r\n          {!isEdit && (\r\n            <Button onClick={this.handleReset} style={{ marginRight: 16 }}>\r\n              Zresetuj\r\n            </Button>\r\n          )}\r\n          <Button\r\n            type=\"primary\"\r\n            icon={isEdit ? \"redo\" : \"plus\"}\r\n            htmlType=\"submit\"\r\n          >\r\n            {isEdit ? \"Aktualizuj\" : \"Dodaj dane\"}\r\n          </Button>\r\n        </div>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst updateValidationRules = {\r\n  description: [value => value.length >= 3, value => value.length <= 30],\r\n  lineWidth: [value => value >= 1, value => value <= 6],\r\n  dashLength: [value => value >= 4, value => value <= 15],\r\n  dashSpacing: [value => value >= 4, value => value <= 15]\r\n};\r\n\r\nconst validateField = (field, value) =>\r\n  !updateValidationRules[field] ||\r\n  updateValidationRules[field].reduce(\r\n    (result, rule) => result && rule(value),\r\n    true\r\n  );\r\n\r\nconst validateFields = fields =>\r\n  Object.keys(fields).reduce(\r\n    (prev, field) => prev && validateField(field, fields[field].value),\r\n    true\r\n  );\r\n\r\nconst WrappedUseDataForm = Form.create({ name: \"use_data_form\" })(UseDataForm);\r\nconst WrappedEditUseDataForm = Form.create({\r\n  name: \"edit_use_data_form\",\r\n  onFieldsChange: (props, changedFields) => {\r\n    if (!validateFields(changedFields)) {\r\n      return console.warn(\"Form not valid, abort update\");\r\n    }\r\n    props.onChange(changedFields);\r\n  },\r\n  mapPropsToFields(props) {\r\n    return Object.keys(props.editedData).reduce(\r\n      (prev, key) => ({\r\n        ...prev,\r\n        [key]: Form.createFormField({ ...props.editedData[key] })\r\n      }),\r\n      {}\r\n    );\r\n  }\r\n})(UseDataForm);\r\n\r\nclass UseDataDialog extends Component {\r\n  static propTypes = {\r\n    mode: PropTypes.string,\r\n    editedData: PropTypes.object,\r\n    loadedData: PropTypes.object,\r\n    config: PropTypes.object,\r\n    onClose: PropTypes.func,\r\n    loadData: PropTypes.func,\r\n    updateData: PropTypes.func\r\n  };\r\n\r\n  onUpdateFields = changedFields => {\r\n    // TODO validacja - przez async wymaga recznego napisania\r\n    const { editedData, updateData } = this.props;\r\n    if (changedFields !== editedData.fields) {\r\n      console.log({\r\n        ...editedData,\r\n        fields: { ...editedData.fields, ...changedFields }\r\n      });\r\n      updateData({\r\n        ...editedData,\r\n        fields: { ...editedData.fields, ...changedFields }\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      mode,\r\n      editedData,\r\n      loadedData,\r\n      onClose,\r\n      loadData,\r\n      config,\r\n      updateData\r\n    } = this.props;\r\n    return (\r\n      <div className=\"LoadDataDialog\">\r\n        {mode === \"edit\" ? (\r\n          <WrappedEditUseDataForm\r\n            mode=\"edit\"\r\n            onClose={onClose}\r\n            updateData={updateData}\r\n            editedData={editedData.fields}\r\n            loadedData={loadedData}\r\n            config={config}\r\n            onChange={this.onUpdateFields}\r\n          />\r\n        ) : (\r\n          <WrappedUseDataForm\r\n            mode=\"load\"\r\n            onClose={onClose}\r\n            config={config}\r\n            loadData={loadData}\r\n            loadedData={loadedData}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UseDataDialog;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// imported elements\r\nimport DeleteConfirm from \"../../Common/DeleteConfirm\";\r\nimport UseDataDialog from \"./Dialogs/UseDataDialog\";\r\n// ant.design\r\nimport { Button, Col, Drawer, Row, Tooltip } from \"antd\";\r\n\r\nconst MiddleWrapper = ({ ...props }) => (\r\n  <div className=\"MiddleWrapper\" {...props} />\r\n);\r\n\r\nclass UseData extends Component {\r\n  static propTypes = {\r\n    data: PropTypes.object.isRequired,\r\n    loadedData: PropTypes.object.isRequired,\r\n    config: PropTypes.object.isRequired,\r\n    update: PropTypes.func.isRequired\r\n  };\r\n\r\n  state = {\r\n    openedDialogLoad: false,\r\n    openedDialogEdit: false,\r\n    editedData: null\r\n  };\r\n\r\n  onCloseDialogLoad = () => {\r\n    this.setState({ openedDialogLoad: false });\r\n  };\r\n  onCloseDialogEdit = () => {\r\n    this.setState({\r\n      openedDialogEdit: false,\r\n      editedData: null\r\n    });\r\n  };\r\n  openDialogLoad = () => {\r\n    this.setState({ openedDialogLoad: true });\r\n  };\r\n  openDialogEdit = key => {\r\n    this.setState({\r\n      openedDialogEdit: true,\r\n      editedData: key\r\n    });\r\n  };\r\n\r\n  newIndex = () =>\r\n    Object.keys(this.props.data).reduce(\r\n      (prev, curr) => Math.max(prev, curr),\r\n      -1\r\n    ) + 1;\r\n\r\n  loadData = newData => {\r\n    const { data, update } = this.props;\r\n    update({ ...data, [this.newIndex()]: newData });\r\n  };\r\n\r\n  removeData = key => {\r\n    const { data, update } = this.props;\r\n    const newValue = { ...data };\r\n    delete newValue[key];\r\n    update(newValue);\r\n  };\r\n\r\n  updateData = (key, value) => {\r\n    const { data, update } = this.props;\r\n    update({ ...data, [key]: value });\r\n  };\r\n\r\n  render() {\r\n    const { data, loadedData, config } = this.props;\r\n    return (\r\n      <div className=\"LoadData\">\r\n        {Object.keys(data).map(key => (\r\n          <Row type=\"flex\" align=\"middle\" key={key}>\r\n            <Col span={16}>{data[key].fields.description.value}</Col>\r\n            <Col span={4}>\r\n              <MiddleWrapper>\r\n                <Tooltip placement=\"top\" title=\"Ustawienia\">\r\n                  <Button\r\n                    shape=\"circle\"\r\n                    icon=\"setting\"\r\n                    onClick={() => this.openDialogEdit(key)}\r\n                  />\r\n                </Tooltip>\r\n              </MiddleWrapper>\r\n            </Col>\r\n            <Col span={4}>\r\n              <MiddleWrapper>\r\n                <DeleteConfirm\r\n                  title=\"Usuń dane z wykresu\"\r\n                  remove=\"Usuń z wykresu\"\r\n                  canRemove={true}\r\n                  onConfirm={() => this.removeData(key)}\r\n                >\r\n                  <Button shape=\"circle\" icon=\"delete\" />\r\n                </DeleteConfirm>\r\n              </MiddleWrapper>\r\n            </Col>\r\n          </Row>\r\n        ))}\r\n        <Row type=\"flex\" align=\"middle\">\r\n          <Col span={16}>Nowe dane na wykresie</Col>\r\n          <Col span={4} />\r\n          <Col span={4}>\r\n            <MiddleWrapper>\r\n              <Tooltip placement=\"bottom\" title=\"Dodaj dane do wykresu\">\r\n                <Button\r\n                  type=\"primary\"\r\n                  shape=\"circle\"\r\n                  icon=\"plus\"\r\n                  onClick={this.openDialogLoad}\r\n                />\r\n              </Tooltip>\r\n            </MiddleWrapper>\r\n          </Col>\r\n        </Row>\r\n        <Drawer\r\n          title=\"Dodaj nowe dane do wykresu\"\r\n          placement=\"left\"\r\n          onClose={this.onCloseDialogLoad}\r\n          visible={this.state.openedDialogLoad}\r\n          width={480}\r\n          bodyStyle={{\r\n            flex: 1\r\n          }}\r\n        >\r\n          <UseDataDialog\r\n            mode=\"load\"\r\n            config={config}\r\n            onClose={this.onCloseDialogLoad}\r\n            loadData={this.loadData}\r\n            loadedData={loadedData}\r\n          />\r\n        </Drawer>\r\n        {this.state.editedData !== null && (\r\n          <Drawer\r\n            title=\"Edycja wyświetlanych danych\"\r\n            placement=\"left\"\r\n            onClose={this.onCloseDialogEdit}\r\n            visible={this.state.openedDialogEdit}\r\n            width={480}\r\n            bodyStyle={{\r\n              flex: 1\r\n            }}\r\n          >\r\n            <UseDataDialog\r\n              mode=\"edit\"\r\n              onClose={this.onCloseDialogEdit}\r\n              editedData={data[this.state.editedData]}\r\n              loadedData={loadedData}\r\n              config={config}\r\n              updateData={value =>\r\n                this.updateData(this.state.editedData, value)\r\n              }\r\n            />\r\n          </Drawer>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UseData;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// imported elements\r\nimport ColorSelect from \"../../../Common/ColorSelect\";\r\nimport { MODES } from \"../common\";\r\n// ant.design\r\nimport { Checkbox, Form, Row, Col, Input, Button, Select } from \"antd\";\r\nconst { Option } = Select;\r\n\r\nclass AxisSideSelect extends Component {\r\n  render() {\r\n    return (\r\n      <Select placeholder=\"Pozycja na wykresie\" {...this.props}>\r\n        <Option key=\"left\" value=\"left\">\r\n          Po lewej stronie\r\n        </Option>\r\n        <Option key=\"right\" value=\"right\">\r\n          Po prawej stronie\r\n        </Option>\r\n      </Select>\r\n    );\r\n  }\r\n}\r\n\r\nclass AxisForm extends Component {\r\n  static propTypes = {\r\n    mode: PropTypes.oneOf([MODES.EDIT, MODES.LOAD]).isRequired,\r\n    editedAxis: PropTypes.object,\r\n    onClose: PropTypes.func,\r\n    loadData: PropTypes.func,\r\n    updateData: PropTypes.func\r\n  };\r\n\r\n  handleReset = () => {\r\n    this.props.form.resetFields();\r\n  };\r\n\r\n  handleSubmit = async e => {\r\n    e.preventDefault();\r\n\r\n    this.props.form.validateFields((err, fieldsValue) => {\r\n      if (err) {\r\n        return;\r\n      }\r\n      ({\r\n        [MODES.LOAD]: () => {\r\n          this.props.loadData(\r\n            Object.keys(fieldsValue).reduce(\r\n              (prev, field) => ({\r\n                ...prev,\r\n                [field]: {\r\n                  value: fieldsValue[field]\r\n                }\r\n              }),\r\n              {}\r\n            )\r\n          );\r\n          this.handleReset();\r\n          this.props.onClose();\r\n        },\r\n        [MODES.EDIT]: () => {\r\n          this.props.onClose();\r\n        }\r\n      }[this.props.mode]());\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <Form\r\n        layout=\"vertical\"\r\n        onSubmit={this.handleSubmit}\r\n        hideRequiredMark={true}\r\n        style={{\r\n          height: \"100%\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\"\r\n        }}\r\n      >\r\n        <div className=\"LoadDataDialogInner\">\r\n          <Form.Item>\r\n            {getFieldDecorator(\"showAxis\", {\r\n              initialValue: true,\r\n              valuePropName: \"checked\"\r\n            })(<Checkbox>Pokaż oś na wykresie</Checkbox>)}\r\n          </Form.Item>\r\n          <Form.Item label=\"Opis osi\">\r\n            {getFieldDecorator(\"description\", {\r\n              validateTrigger: [\"onChange\", \"onBlur\"],\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message:\r\n                    \"Proszę podać nazwę osi, która pozwoli na identyfikację\"\r\n                },\r\n                {\r\n                  message: \"Wymagana nazwa o długości od 2 do 20 znaków\",\r\n                  whitespace: true,\r\n                  min: 2,\r\n                  max: 20\r\n                }\r\n              ]\r\n            })(<Input placeholder=\"Opis osi\" />)}\r\n          </Form.Item>\r\n          <Form.Item>\r\n            {getFieldDecorator(\"showDescription\", {\r\n              initialValue: true,\r\n              valuePropName: \"checked\"\r\n            })(<Checkbox>Pokaż nazwę osi na wykresie</Checkbox>)}\r\n          </Form.Item>\r\n          <Form.Item label=\"Jednostka\">\r\n            {getFieldDecorator(\"unit\", {\r\n              initialValue: \"\",\r\n              rules: [\r\n                {\r\n                  message: \"Maksymalna długość to 10 znaków\",\r\n                  whitespace: true,\r\n                  max: 10\r\n                }\r\n              ]\r\n            })(<Input placeholder=\"Jednostka\" />)}\r\n          </Form.Item>\r\n          <Row gutter={24}>\r\n            <Col span={12}>\r\n              <Form.Item label=\"Miejsce wyświetlania\">\r\n                {getFieldDecorator(\"side\", {\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"Wybierz miejsce wyświetlania\"\r\n                    }\r\n                  ],\r\n                  initialValue: \"left\"\r\n                })(<AxisSideSelect />)}\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item label=\"Kolor osi\">\r\n                {getFieldDecorator(\"color\", {\r\n                  validateTrigger: [\"onChange\"],\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"Wybierz kolor osi\"\r\n                    }\r\n                  ],\r\n                  initialValue: \"black\"\r\n                })(<ColorSelect />)}\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Form.Item\r\n            label=\"Zarządzanie zakresem danych\"\r\n            help=\"Aby ustawić automatyczne wyliczanie, wpisz auto\"\r\n          >\r\n            <Row gutter={24}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Od\">\r\n                  {getFieldDecorator(\"rangeFrom\", {\r\n                    initialValue: \"auto\",\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: \"Proszę podać początek zakresu\"\r\n                      }\r\n                    ]\r\n                  })(<Input placeholder=\"Początek zakresu\" />)}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Do\">\r\n                  {getFieldDecorator(\"rangeTo\", {\r\n                    initialValue: \"auto\",\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: \"Proszę podać koniec zakresu\"\r\n                      }\r\n                    ]\r\n                  })(<Input placeholder=\"Początek zakresu\" />)}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Krok\">\r\n                  {getFieldDecorator(\"rangeSpan\", {\r\n                    initialValue: \"auto\",\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message:\r\n                          \"Proszę podać krok pomiędzy punktami odniesienia\"\r\n                      }\r\n                    ]\r\n                  })(<Input placeholder=\"Krok\" />)}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n          </Form.Item>\r\n        </div>\r\n        <div className=\"LoadDataDialogSubmit\">\r\n          {\r\n            {\r\n              [MODES.LOAD]: (\r\n                <Fragment>\r\n                  <Button\r\n                    className=\"ResetFormButton\"\r\n                    onClick={this.handleReset}\r\n                  >\r\n                    Zresetuj\r\n                  </Button>\r\n                  <Button type=\"primary\" icon=\"plus\" htmlType=\"submit\">\r\n                    Dodaj\r\n                  </Button>\r\n                </Fragment>\r\n              ),\r\n              [MODES.EDIT]: (\r\n                <Button type=\"primary\" icon=\"redo\" htmlType=\"submit\">\r\n                  Aktualizuj\r\n                </Button>\r\n              )\r\n            }[this.props.mode]\r\n          }\r\n        </div>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst updateValidationRules = {\r\n  description: [value => value.length >= 2, value => value.length <= 20],\r\n  unit: [value => value.length <= 10]\r\n};\r\n\r\nconst validateField = (field, value) =>\r\n  !updateValidationRules[field] ||\r\n  updateValidationRules[field].reduce(\r\n    (result, rule) => result && rule(value),\r\n    true\r\n  );\r\n\r\nconst validateFields = fields =>\r\n  Object.keys(fields).reduce(\r\n    (prev, field) => prev && validateField(field, fields[field].value),\r\n    true\r\n  );\r\n\r\nconst WrappedEditAxisForm = Form.create({\r\n  name: \"edit_axis_form\",\r\n  onFieldsChange(props, changedFields) {\r\n    if (!validateFields(changedFields)) {\r\n      return console.warn(\"Form not valid, abort update\");\r\n    }\r\n    props.onChange(changedFields);\r\n  },\r\n  mapPropsToFields(props) {\r\n    return Object.keys(props.editedAxis).reduce(\r\n      (prev, key) => ({\r\n        ...prev,\r\n        [key]: Form.createFormField({ ...props.editedAxis[key] })\r\n      }),\r\n      {}\r\n    );\r\n  }\r\n})(AxisForm);\r\n\r\nconst WrappedLoadAxisForm = Form.create({\r\n  name: \"load_axis_form\"\r\n})(AxisForm);\r\n\r\nclass AxisDialog extends Component {\r\n  static propTypes = {\r\n    mode: PropTypes.oneOf([\"load\", \"edit\"]).isRequired,\r\n    editedAxis: PropTypes.object,\r\n    onClose: PropTypes.func,\r\n    loadData: PropTypes.func,\r\n    updateData: PropTypes.func\r\n  };\r\n\r\n  onUpdateFields = changedFields => {\r\n    const { editedAxis, updateData } = this.props;\r\n    if (changedFields !== editedAxis) {\r\n      console.log({\r\n        ...editedAxis,\r\n        ...changedFields\r\n      });\r\n      updateData({\r\n        ...editedAxis,\r\n        ...changedFields\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { mode, editedAxis, loadData, updateData, onClose } = this.props;\r\n    return (\r\n      <div className=\"LoadDataDialog\">\r\n        {mode === \"edit\" ? (\r\n          <WrappedEditAxisForm\r\n            mode={mode}\r\n            onClose={onClose}\r\n            updateData={updateData}\r\n            editedAxis={editedAxis}\r\n            onChange={this.onUpdateFields}\r\n          />\r\n        ) : (\r\n          <WrappedLoadAxisForm\r\n            mode={mode}\r\n            onClose={onClose}\r\n            loadData={loadData}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AxisDialog;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// imported elements\r\nimport ColorSelect from \"../../../Common/ColorSelect\";\r\n// ant.design\r\nimport { Checkbox, Form, Row, Col, Input, InputNumber, Button } from \"antd\";\r\n\r\nclass XAxisForm extends Component {\r\n  static propTypes = {\r\n    editedAxis: PropTypes.object,\r\n    onClose: PropTypes.func,\r\n    updateData: PropTypes.func\r\n  };\r\n\r\n  render() {\r\n    const { onClose } = this.props;\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <Form\r\n        layout=\"vertical\"\r\n        onSubmit={this.handleSubmit}\r\n        hideRequiredMark={true}\r\n        style={{\r\n          height: \"100%\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\"\r\n        }}\r\n      >\r\n        <div className=\"LoadDataDialogInner\">\r\n          <Form.Item label=\"Opis osi\">\r\n            {getFieldDecorator(\"description\", {\r\n              validateTrigger: [\"onChange\", \"onBlur\"],\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message:\r\n                    \"Proszę podać nazwę osi, która pozwoli na identyfikację\"\r\n                },\r\n                {\r\n                  message: \"Wymagana nazwa o długości od 2 do 20 znaków\",\r\n                  whitespace: true,\r\n                  min: 2,\r\n                  max: 20\r\n                }\r\n              ],\r\n              initialValue: \"Czas\"\r\n            })(<Input placeholder=\"Opis osi\" />)}\r\n          </Form.Item>\r\n          <Form.Item>\r\n            {getFieldDecorator(\"showDescription\", {\r\n              initialValue: true,\r\n              valuePropName: \"checked\"\r\n            })(<Checkbox>Pokaż nazwę osi na wykresie</Checkbox>)}\r\n          </Form.Item>\r\n          <Row gutter={24}>\r\n            <Col span={12}>\r\n              <Form.Item label=\"Kolor osi\">\r\n                {getFieldDecorator(\"color\", {\r\n                  validateTrigger: [\"onChange\"],\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"Wybierz kolor osi\"\r\n                    }\r\n                  ],\r\n                  initialValue: \"black\"\r\n                })(<ColorSelect />)}\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Form.Item label=\"Zarządzanie zakresem czasu\">\r\n            <Row gutter={24}>\r\n              <Col span={12}>\r\n                <Form.Item\r\n                  label=\"Minimalna ilość dat na osi\"\r\n                  help=\"Wyświetlna liczba może być mniejsza dla krótkich okresów\"\r\n                >\r\n                  {getFieldDecorator(\"datesNumber\", {\r\n                    initialValue: 5,\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        type: \"number\",\r\n                        min: 2,\r\n                        max: 8,\r\n                        message: \"Wybierz liczbę z zakresu od 2 do 8\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <InputNumber\r\n                      className=\"AutoInputNumber\"\r\n                      min={2}\r\n                      max={8}\r\n                      step={1}\r\n                      precision={0}\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item>\r\n                  {getFieldDecorator(\"withTime\", {\r\n                    initialValue: false,\r\n                    valuePropName: \"checked\"\r\n                  })(<Checkbox>Pokaż godzinę</Checkbox>)}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n          </Form.Item>\r\n        </div>\r\n        <div className=\"LoadDataDialogSubmit\">\r\n          <Button type=\"primary\" icon=\"redo\" onClick={onClose}>\r\n            Aktualizuj\r\n          </Button>\r\n        </div>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst updateValidationRules = {\r\n  description: [value => value.length >= 2, value => value.length <= 20],\r\n  datesNumber: [value => value >= 2, value => value <= 8]\r\n};\r\n\r\nconst validateField = (field, value) =>\r\n  !updateValidationRules[field] ||\r\n  updateValidationRules[field].reduce(\r\n    (result, rule) => result && rule(value),\r\n    true\r\n  );\r\n\r\nconst validateFields = fields =>\r\n  Object.keys(fields).reduce(\r\n    (prev, field) => prev && validateField(field, fields[field].value),\r\n    true\r\n  );\r\n\r\nconst WrappedXAxisForm = Form.create({\r\n  name: \"edit_xaxis_form\",\r\n  onFieldsChange(props, changedFields) {\r\n    if (!validateFields(changedFields)) {\r\n      return console.warn(\"Form not valid, abort update\");\r\n    }\r\n    props.onChange(changedFields);\r\n  },\r\n  mapPropsToFields(props) {\r\n    return Object.keys(props.editedAxis).reduce(\r\n      (prev, key) => ({\r\n        ...prev,\r\n        [key]: Form.createFormField({ ...props.editedAxis[key] })\r\n      }),\r\n      {}\r\n    );\r\n  }\r\n})(XAxisForm);\r\n\r\nclass XAxisDialog extends Component {\r\n  static propTypes = {\r\n    editedAxis: PropTypes.object,\r\n    onClose: PropTypes.func,\r\n    updateData: PropTypes.func\r\n  };\r\n\r\n  onUpdateFields = changedFields => {\r\n    const { editedAxis, updateData } = this.props;\r\n    if (changedFields !== editedAxis) {\r\n      console.log({\r\n        ...editedAxis,\r\n        ...changedFields\r\n      });\r\n      updateData({\r\n        ...editedAxis,\r\n        ...changedFields\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { editedAxis, updateData, onClose } = this.props;\r\n    return (\r\n      <div className=\"LoadDataDialog\">\r\n        <WrappedXAxisForm\r\n          editedAxis={editedAxis}\r\n          onClose={onClose}\r\n          updateData={updateData}\r\n          onChange={this.onUpdateFields}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default XAxisDialog;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// imported elements\r\n// ant.design\r\nimport { Checkbox, Form, Input, Button, Slider } from \"antd\";\r\n\r\nclass EditSettingsForm extends Component {\r\n  static propTypes = {\r\n    settings: PropTypes.object.isRequired,\r\n    onClose: PropTypes.func\r\n  };\r\n\r\n  handleReset = () => {\r\n    this.props.form.resetFields();\r\n    this.props.form.validateFields();\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator, getFieldValue } = this.props.form;\r\n    return (\r\n      <Form\r\n        layout=\"vertical\"\r\n        hideRequiredMark={true}\r\n        style={{\r\n          height: \"100%\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\"\r\n        }}\r\n      >\r\n        <div className=\"LoadDataDialogInner\">\r\n          <Form.Item label=\"Tytuł wykresu\">\r\n            {getFieldDecorator(\"title\", {\r\n              initialValue: \"\"\r\n            })(<Input placeholder=\"Tytuł wykresu\" />)}\r\n          </Form.Item>\r\n          <Form.Item>\r\n            {getFieldDecorator(\"showTitle\", {\r\n              initialValue: false,\r\n              valuePropName: \"checked\"\r\n            })(<Checkbox>Pokaż tytuł na wykresie</Checkbox>)}\r\n          </Form.Item>\r\n          <Form.Item>\r\n            {getFieldDecorator(\"showLegend\", {\r\n              initialValue: false,\r\n              valuePropName: \"checked\"\r\n            })(<Checkbox>Pokaż legendę na wykresie</Checkbox>)}\r\n          </Form.Item>\r\n          <Form.Item label={`Szerokość (${getFieldValue(\"width\")}%)`}>\r\n            {getFieldDecorator(\"width\", {\r\n              initialValue: 100,\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  type: \"number\",\r\n                  min: 10,\r\n                  max: 100,\r\n                  message: \"Wybierz liczbę z zakresu od 10 do 100\"\r\n                }\r\n              ]\r\n            })(<Slider step={5} min={10} max={100} />)}\r\n          </Form.Item>\r\n          <Form.Item label={`Wysokość (${getFieldValue(\"height\")}%)`}>\r\n            {getFieldDecorator(\"height\", {\r\n              initialValue: 60,\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  type: \"number\",\r\n                  min: 10,\r\n                  step: 5,\r\n                  max: 100,\r\n                  message: \"Wybierz liczbę z zakresu od 10 do 100\"\r\n                }\r\n              ]\r\n            })(<Slider step={5} min={10} max={100} />)}\r\n          </Form.Item>\r\n        </div>\r\n        <div className=\"LoadDataDialogSubmit\">\r\n          <Button onClick={this.handleReset} style={{ marginRight: 16 }}>\r\n            Zresetuj\r\n          </Button>\r\n          <Button type=\"primary\" onClick={this.props.onClose}>\r\n            Zakończ\r\n          </Button>\r\n        </div>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst updateValidationRules = {\r\n  width: [value => value >= 10, value => value <= 100],\r\n  height: [value => value >= 10, value => value <= 100]\r\n};\r\n\r\nconst validateField = (field, value) =>\r\n  !updateValidationRules[field] ||\r\n  updateValidationRules[field].reduce(\r\n    (result, rule) => result && rule(value),\r\n    true\r\n  );\r\n\r\nconst validateFields = fields =>\r\n  Object.keys(fields).reduce(\r\n    (prev, field) => prev && validateField(field, fields[field].value),\r\n    true\r\n  );\r\n\r\nconst WrappedEditSettingsForm = Form.create({\r\n  name: \"edit_settings_form\",\r\n  onFieldsChange(props, changedFields) {\r\n    if (!validateFields(changedFields)) {\r\n      return console.warn(\"Form not valid, abort update\");\r\n    }\r\n    props.onChange(changedFields);\r\n  },\r\n  mapPropsToFields(props) {\r\n    return Object.keys(props.settings).reduce(\r\n      (prev, key) => ({\r\n        ...prev,\r\n        [key]: Form.createFormField({ ...props.settings[key] })\r\n      }),\r\n      {}\r\n    );\r\n  }\r\n})(EditSettingsForm);\r\n\r\nclass EditSettingsDialog extends Component {\r\n  static propTypes = {\r\n    settings: PropTypes.object,\r\n    onClose: PropTypes.func,\r\n    updateData: PropTypes.func\r\n  };\r\n\r\n  onUpdateFields = changedFields => {\r\n    const { settings, updateData } = this.props;\r\n    if (changedFields !== settings) {\r\n      console.log({\r\n        ...settings,\r\n        ...changedFields\r\n      });\r\n      updateData({\r\n        ...settings,\r\n        ...changedFields\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { settings, onClose } = this.props;\r\n    return (\r\n      <div className=\"LoadDataDialog\">\r\n        <WrappedEditSettingsForm\r\n          onClose={onClose}\r\n          settings={settings}\r\n          onChange={this.onUpdateFields}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditSettingsDialog;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { find } from \"lodash\";\r\n// imported elements\r\nimport AxisDialog from \"./Dialogs/AxisDialog\";\r\nimport XAxisDialog from \"./Dialogs/XAxisDialog\";\r\nimport DeleteConfirm from \"../../Common/DeleteConfirm\";\r\n// ant.design\r\nimport { Button, Col, Drawer, Row, Tooltip } from \"antd\";\r\nimport EditSettingsDialog from \"./Dialogs/EditSettingsDialog\";\r\n\r\nconst MiddleWrapper = ({ ...props }) => (\r\n  <div className=\"MiddleWrapper\" {...props} />\r\n);\r\n\r\nclass ConfigChart extends Component {\r\n  static propTypes = {\r\n    config: PropTypes.shape({\r\n      settings: PropTypes.object,\r\n      xAxis: PropTypes.object,\r\n      yAxises: PropTypes.object\r\n    }).isRequired,\r\n    usedData: PropTypes.object.isRequired,\r\n    update: PropTypes.func.isRequired\r\n  };\r\n\r\n  state = {\r\n    openedDialogSettings: false,\r\n    openedDialogXAxis: false,\r\n    openedDialogAddAxis: false,\r\n    openedDialogEditAxis: false,\r\n    editedAxis: null\r\n  };\r\n\r\n  onCloseDialogSettings = () => {\r\n    this.setState({ openedDialogSettings: false });\r\n  };\r\n  onCloseDialogXAxis = () => {\r\n    this.setState({ openedDialogXAxis: false });\r\n  };\r\n  onCloseDialogAddAxis = () => {\r\n    this.setState({ openedDialogAddAxis: false });\r\n  };\r\n  onCloseDialogEditAxis = () => {\r\n    this.setState({\r\n      openedDialogEditAxis: false,\r\n      editedAxis: null\r\n    });\r\n  };\r\n  openDialogSettings = () => {\r\n    this.setState({ openedDialogSettings: true });\r\n  };\r\n  openDialogXAxis = () => {\r\n    this.setState({ openedDialogXAxis: true });\r\n  };\r\n  openDialogAddAxis = () => {\r\n    this.setState({ openedDialogAddAxis: true });\r\n  };\r\n  openDialogEditAxis = axis => {\r\n    this.setState({\r\n      openedDialogEditAxis: true,\r\n      editedAxis: axis\r\n    });\r\n  };\r\n  newIndex = () =>\r\n    Object.keys(this.props.config.yAxises).reduce(\r\n      (prev, curr) => Math.max(prev, curr),\r\n      -1\r\n    ) + 1;\r\n\r\n  addAxis = newAxis => {\r\n    const { config, update } = this.props;\r\n    const ncofig = { ...config };\r\n    ncofig.yAxises = { ...ncofig.yAxises, [this.newIndex()]: newAxis };\r\n    update(ncofig);\r\n  };\r\n\r\n  updateAxis = (newAxis, key) => {\r\n    const { config, update } = this.props;\r\n    const ncofig = { ...config };\r\n    ncofig.yAxises[key] = { ...ncofig.yAxises[key], ...newAxis };\r\n    update(ncofig);\r\n  };\r\n\r\n  canRemove = key =>\r\n    !find(\r\n      Object.keys(this.props.usedData),\r\n      i => this.props.usedData[i].fields.axis.value === key\r\n    );\r\n\r\n  removeAxis = axisId => {\r\n    const { config, update } = this.props;\r\n    const ncofig = { ...config };\r\n    delete ncofig.yAxises[axisId];\r\n    update(ncofig);\r\n  };\r\n\r\n  updateSettings = newSettings => {\r\n    const { config, update } = this.props;\r\n    const ncofig = { ...config };\r\n    ncofig.settings = { ...ncofig.settings, ...newSettings };\r\n    update(ncofig);\r\n  };\r\n\r\n  updateXAxis = newAxis => {\r\n    const { config, update } = this.props;\r\n    const ncofig = { ...config };\r\n    ncofig.xAxis = { ...ncofig.xAxis, ...newAxis };\r\n    update(ncofig);\r\n  };\r\n\r\n  render() {\r\n    const { config } = this.props;\r\n    const { editedAxis } = this.state;\r\n    return (\r\n      <div className=\"LoadData\">\r\n        <Row type=\"flex\" align=\"middle\">\r\n          <Col span={16}>Konfiguracja ogólna wykresu</Col>\r\n          <Col span={4}>\r\n            <MiddleWrapper>\r\n              <Tooltip placement=\"top\" title=\"Edytuj wygląd wykresu\">\r\n                <Button\r\n                  type=\"primary\"\r\n                  shape=\"circle\"\r\n                  icon=\"setting\"\r\n                  onClick={this.openDialogSettings}\r\n                />\r\n              </Tooltip>\r\n            </MiddleWrapper>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <div className=\"ConfigChartSection\">Oś pozioma</div>\r\n        </Row>\r\n        <Row type=\"flex\" align=\"middle\">\r\n          <Col span={16}>Oś pozioma (czasu)</Col>\r\n          <Col span={4}>\r\n            <MiddleWrapper>\r\n              <Tooltip placement=\"top\" title=\"Edytuj oś czasu\">\r\n                <Button\r\n                  shape=\"circle\"\r\n                  icon=\"setting\"\r\n                  onClick={this.openDialogXAxis}\r\n                />\r\n              </Tooltip>\r\n            </MiddleWrapper>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <div className=\"ConfigChartSection\">Osie pionowe</div>\r\n        </Row>\r\n        {Object.keys(config.yAxises).map((key, i, axes) => (\r\n          <Row key={key} type=\"flex\" align=\"middle\">\r\n            <Col span={16}>{config.yAxises[key].description.value}</Col>\r\n            <Col span={4}>\r\n              <MiddleWrapper>\r\n                <Tooltip placement=\"top\" title=\"Ustawienia\">\r\n                  <Button\r\n                    shape=\"circle\"\r\n                    icon=\"setting\"\r\n                    onClick={() => this.openDialogEditAxis(key)}\r\n                  />\r\n                </Tooltip>\r\n              </MiddleWrapper>\r\n            </Col>\r\n            <Col span={4}>\r\n              <MiddleWrapper>\r\n                <DeleteConfirm\r\n                  title=\"Czy chcesz usunąć oś odniesienia?\"\r\n                  remove=\"Usuń oś\"\r\n                  reason=\"Nie można usunąć, oś jest używana.\"\r\n                  canRemove={this.canRemove(key)}\r\n                  onConfirm={() => this.removeAxis(key)}\r\n                >\r\n                  <Button\r\n                    disabled={!this.canRemove(key)}\r\n                    shape=\"circle\"\r\n                    icon=\"delete\"\r\n                  />\r\n                </DeleteConfirm>\r\n              </MiddleWrapper>\r\n            </Col>\r\n          </Row>\r\n        ))}\r\n        <Row type=\"flex\" align=\"middle\">\r\n          <Col span={16}>Dodaj oś odniesienia</Col>\r\n          <Col span={4} />\r\n          <Col span={4}>\r\n            <MiddleWrapper>\r\n              <Tooltip placement=\"bottom\" title=\"Dodaj oś odniesienia\">\r\n                <Button\r\n                  type=\"primary\"\r\n                  shape=\"circle\"\r\n                  icon=\"plus\"\r\n                  onClick={this.openDialogAddAxis}\r\n                />\r\n              </Tooltip>\r\n            </MiddleWrapper>\r\n          </Col>\r\n        </Row>\r\n        <Drawer\r\n          title=\"Edytuj sposób prezentacji wykresu\"\r\n          placement=\"left\"\r\n          onClose={this.onCloseDialogSettings}\r\n          visible={this.state.openedDialogSettings}\r\n          width={480}\r\n          bodyStyle={{\r\n            flex: 1\r\n          }}\r\n        >\r\n          <EditSettingsDialog\r\n            onClose={this.onCloseDialogSettings}\r\n            settings={config.settings}\r\n            updateData={this.updateSettings}\r\n          />\r\n        </Drawer>\r\n        <Drawer\r\n          title=\"Edytuj oś czasu\"\r\n          placement=\"left\"\r\n          onClose={this.onCloseDialogXAxis}\r\n          visible={this.state.openedDialogXAxis}\r\n          width={480}\r\n          bodyStyle={{\r\n            flex: 1\r\n          }}\r\n        >\r\n          <XAxisDialog\r\n            onClose={this.onCloseDialogXAxis}\r\n            editedAxis={config.xAxis}\r\n            updateData={this.updateXAxis}\r\n          />\r\n        </Drawer>\r\n        <Drawer\r\n          title=\"Dodaj nową oś\"\r\n          placement=\"left\"\r\n          onClose={this.onCloseDialogAddAxis}\r\n          visible={this.state.openedDialogAddAxis}\r\n          width={480}\r\n          bodyStyle={{\r\n            flex: 1\r\n          }}\r\n        >\r\n          <AxisDialog\r\n            mode=\"load\"\r\n            onClose={this.onCloseDialogAddAxis}\r\n            settings={config.settings}\r\n            loadData={this.addAxis}\r\n          />\r\n        </Drawer>\r\n        {this.state.editedAxis !== null && (\r\n          <Drawer\r\n            title=\"Edytuj ustawienia osi\"\r\n            placement=\"left\"\r\n            onClose={this.onCloseDialogEditAxis}\r\n            visible={this.state.openedDialogEditAxis}\r\n            width={480}\r\n            bodyStyle={{\r\n              flex: 1\r\n            }}\r\n          >\r\n            <AxisDialog\r\n              mode=\"edit\"\r\n              onClose={this.onCloseDialogEditAxis}\r\n              updateData={newAxis => this.updateAxis(newAxis, editedAxis)}\r\n              editedAxis={config.yAxises[editedAxis]}\r\n            />\r\n          </Drawer>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ConfigChart;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport _ from \"lodash\";\r\n// imported elements\r\nimport LoadData from \"./LoadData\";\r\nimport UseData from \"./UseData\";\r\nimport ConfigChart from \"./ConfigChart\";\r\n// ant.design\r\nimport { Collapse } from \"antd\";\r\nconst Panel = Collapse.Panel;\r\n\r\nconst getActiveStatus = ({ loadedData, usedData }) => {\r\n  const isActiveUsedData = Object.getOwnPropertyNames(loadedData).length !== 0;\r\n  const isActiveChartConfig =\r\n    isActiveUsedData && Object.getOwnPropertyNames(usedData).length !== 0;\r\n  return {\r\n    isActiveUsedData,\r\n    isActiveChartConfig\r\n  };\r\n};\r\n\r\nclass ChartSetup extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { isActiveUsedData, isActiveChartConfig } = getActiveStatus(props);\r\n    const activeKey = [\"loadedData\"];\r\n    if (isActiveUsedData) {\r\n      activeKey.push(\"usedData\");\r\n    }\r\n    if (isActiveChartConfig) {\r\n      activeKey.push(\"chartConfig\");\r\n    }\r\n    this.state = {\r\n      activeKey: activeKey\r\n    };\r\n  }\r\n  static propTypes = {\r\n    update: PropTypes.func.isRequired,\r\n    loadedData: PropTypes.object.isRequired,\r\n    usedData: PropTypes.object.isRequired,\r\n    chartConfig: PropTypes.object.isRequired\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const updateActiveKeys = [];\r\n    const removeActiveKeys = [];\r\n    const activeStatus = getActiveStatus(this.props);\r\n    const prevActiveStatus = getActiveStatus(prevProps);\r\n    if (!prevActiveStatus.isActiveUsedData && activeStatus.isActiveUsedData) {\r\n      updateActiveKeys.push(\"usedData\");\r\n    }\r\n    if (prevActiveStatus.isActiveUsedData && !activeStatus.isActiveUsedData) {\r\n      removeActiveKeys.push(\"usedData\");\r\n    }\r\n    if (\r\n      !prevActiveStatus.isActiveChartConfig &&\r\n      activeStatus.isActiveChartConfig\r\n    ) {\r\n      updateActiveKeys.push(\"chartConfig\");\r\n    }\r\n    if (\r\n      prevActiveStatus.isActiveChartConfig &&\r\n      !activeStatus.isActiveChartConfig\r\n    ) {\r\n      removeActiveKeys.push(\"chartConfig\");\r\n    }\r\n    if (updateActiveKeys.length + removeActiveKeys.length > 0) {\r\n      const result = _.union([...this.state.activeKey], updateActiveKeys);\r\n      this.setState({\r\n        activeKey: _.filter(result, e => !removeActiveKeys.includes(e))\r\n      });\r\n    }\r\n  }\r\n\r\n  changeActiveKey = newActiveKey => {\r\n    this.setState({\r\n      activeKey: newActiveKey\r\n    });\r\n  };\r\n\r\n  update = (key, newValue) => {\r\n    this.setState({\r\n      [key]: newValue\r\n    });\r\n  };\r\n\r\n  updateLoadedData = newValue => this.props.update(\"loadedData\", newValue);\r\n  updateUsedData = newValue => this.props.update(\"usedData\", newValue);\r\n  updateChartConfig = newValue => this.props.update(\"chartConfig\", newValue);\r\n\r\n  render() {\r\n    const { loadedData, usedData, chartConfig } = this.props;\r\n    const { isActiveUsedData, isActiveChartConfig } = getActiveStatus(\r\n      this.props\r\n    );\r\n    return (\r\n      <div className=\"ChartSetup\">\r\n        <Collapse\r\n          activeKey={this.state.activeKey}\r\n          onChange={this.changeActiveKey}\r\n          bordered={false}\r\n        >\r\n          <Panel header=\"Pobranie danych\" key=\"loadedData\">\r\n            <LoadData\r\n              update={this.updateLoadedData}\r\n              usedData={usedData}\r\n              data={loadedData}\r\n            />\r\n          </Panel>\r\n          <Panel\r\n            disabled={!isActiveUsedData}\r\n            header=\"Wybór wyświetlanych danych\"\r\n            key=\"usedData\"\r\n          >\r\n            <UseData\r\n              update={this.updateUsedData}\r\n              data={usedData}\r\n              loadedData={loadedData}\r\n              config={chartConfig}\r\n            />\r\n          </Panel>\r\n          <Panel\r\n            disabled={!isActiveChartConfig}\r\n            header=\"Konfiguracja wykresu\"\r\n            key=\"chartConfig\"\r\n          >\r\n            <ConfigChart\r\n              update={this.updateChartConfig}\r\n              usedData={usedData}\r\n              config={chartConfig}\r\n            />\r\n          </Panel>\r\n        </Collapse>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChartSetup;\r\n","import { range } from \"lodash\";\r\nimport moment from \"moment\";\r\n\r\nconst AUTO = \"auto\";\r\n\r\nconst autoRanges = [\r\n  {\r\n    limit: 2,\r\n    span: 0.5\r\n  },\r\n  {\r\n    limit: 4,\r\n    span: 1\r\n  },\r\n  {\r\n    limit: 7.5,\r\n    span: 2\r\n  },\r\n  {\r\n    limit: 10,\r\n    span: 2.5\r\n  }\r\n];\r\nconst minPower = -1;\r\n\r\nconst calculatePower = ({ min, max }) => {\r\n  const range = max - min;\r\n  const logRange = Math.max(Math.floor(Math.log10(range)), minPower);\r\n  return Math.pow(10, logRange);\r\n};\r\n\r\nconst calculateSpan = ({ min, max }) => {\r\n  const power = calculatePower({ min, max });\r\n  const digit = (max - min) / power;\r\n  let i = 0;\r\n  while (digit > autoRanges[i].limit && i + 1 < autoRanges.length) {\r\n    i++;\r\n  }\r\n  return power * autoRanges[i].span;\r\n};\r\n\r\nconst minTick = ({ min }, span) => span * Math.floor(min / span);\r\nconst maxTick = ({ max }, span) => span * Math.ceil(max / span);\r\nconst minValue = minTick;\r\nconst maxValue = maxTick;\r\n\r\nconst formatRange = (range, auto) =>\r\n  range === AUTO ? auto : Number.parseFloat(range);\r\n\r\nconst getRangeFromData = values => ({\r\n  min: Math.min(...values),\r\n  max: Math.max(...values)\r\n});\r\n\r\nconst getTicks = ({ min, max }, span) => range(min, max + span / 2, span);\r\n\r\nexport const dateTicks = ({ dateFrom, dateTo }, datesNumber, withTime) => {\r\n  const start = moment.unix(dateFrom / 1000);\r\n  const end = moment.unix(dateTo / 1000);\r\n  const duration = moment.duration(end.diff(start));\r\n  const periods = withTime ? duration.asHours() : duration.asDays();\r\n  const number = Math.min(periods, datesNumber - 1);\r\n  const span = Math.floor(periods / number);\r\n  const result = [];\r\n  const iter = moment(start);\r\n  while (!iter.isAfter(end)) {\r\n    result.push(iter.format(\"x\"));\r\n    iter.add(span, withTime ? \"hours\" : \"day\");\r\n  }\r\n  return result;\r\n};\r\n\r\nexport const chartRangesFromConfig = (\r\n  values,\r\n  { rangeFrom, rangeTo, rangeSpan }\r\n) => {\r\n  const { min, max } = getRangeFromData(values);\r\n  const from = formatRange(rangeFrom, min);\r\n  const to = formatRange(rangeTo, max);\r\n  const range = {\r\n    min: from,\r\n    max: to\r\n  };\r\n  const span = formatRange(rangeSpan, calculateSpan(range));\r\n  return {\r\n    domainMin: formatRange(rangeFrom, minValue(range, span)),\r\n    domainMax: formatRange(rangeTo, maxValue(range, span)),\r\n    ticks: getTicks(\r\n      {\r\n        min: minTick(range, span),\r\n        max: maxTick(range, span)\r\n      },\r\n      span\r\n    )\r\n  };\r\n};\r\n\r\nconst regresionData = (xData, yData) =>\r\n  xData.reduce(\r\n    ({ sx2, sx, sxy, sy }, x, i) => ({\r\n      sx2: sx2 + x * x,\r\n      sx: sx + x,\r\n      sxy: sxy + yData[i] * x,\r\n      sy: sy + yData[i]\r\n    }),\r\n    {\r\n      sx2: 0,\r\n      sx: 0,\r\n      sxy: 0,\r\n      sy: 0\r\n    }\r\n  );\r\n\r\nexport const regresion = (xData, yData) => {\r\n  const { sx, sy, sxy, sx2 } = regresionData(xData, yData);\r\n  const n = xData.length;\r\n  const a = (sxy * n - sx * sy) / (sx2 * n - sx * sx);\r\n  return {\r\n    a,\r\n    b: (sy - a * sx) / n\r\n  };\r\n};\r\n","import React, { Component, PureComponent } from \"react\";\r\nimport {\r\n  LineChart,\r\n  XAxis,\r\n  YAxis,\r\n  Line,\r\n  CartesianGrid,\r\n  Label,\r\n  Legend,\r\n  Tooltip,\r\n  ResponsiveContainer\r\n} from \"recharts\";\r\nimport PropTypes from \"prop-types\";\r\nimport { find, filter } from \"lodash\";\r\nimport moment from \"moment\";\r\n// imports\r\nimport { chartRangesFromConfig, dateTicks, regresion } from \"./calculate\";\r\n// ant.design\r\nimport { Row, Col } from \"antd\";\r\n// css\r\nimport \"../../css/Charts/LineChart.css\";\r\n\r\nconst settingsType = {\r\n  height: PropTypes.number.isRequired,\r\n  width: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  showTitle: PropTypes.bool.isRequired,\r\n  showLegend: PropTypes.bool.isRequired\r\n};\r\n\r\nconst withDescriptionType = {\r\n  description: PropTypes.string.isRequired,\r\n  showDescription: PropTypes.bool.isRequired\r\n};\r\nconst withIdType = {\r\n  id: PropTypes.string.isRequired\r\n};\r\n\r\nconst xAxisType = {\r\n  ...withDescriptionType,\r\n  withTime: PropTypes.bool.isRequired,\r\n  color: PropTypes.string.isRequired,\r\n  datesNumber: PropTypes.number.isRequired\r\n};\r\n\r\nconst yAxisType = {\r\n  ...withDescriptionType,\r\n  ...withIdType,\r\n  color: PropTypes.string.isRequired,\r\n  showAxis: PropTypes.bool.isRequired,\r\n  side: PropTypes.oneOf([\"left\", \"right\"]),\r\n  unit: PropTypes.string.isRequired,\r\n  rangeFrom: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\r\n    .isRequired,\r\n  rangeTo: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\r\n  rangeSpan: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\r\n    .isRequired\r\n};\r\n\r\nconst usedDataType = {\r\n  description: PropTypes.string.isRequired,\r\n  ...withIdType,\r\n  axis: PropTypes.string.isRequired,\r\n  dashed: PropTypes.bool.isRequired,\r\n  dashSpacing: PropTypes.number,\r\n  dashLength: PropTypes.number,\r\n  dataSource: PropTypes.string.isRequired,\r\n  lineColor: PropTypes.string.isRequired,\r\n  lineWidth: PropTypes.number.isRequired\r\n};\r\n\r\nconst dataType = {\r\n  ...withIdType,\r\n  data: PropTypes.array.isRequired\r\n};\r\n\r\nconst chartConfigType = {\r\n  settings: PropTypes.shape(settingsType).isRequired,\r\n  xAxis: PropTypes.shape(xAxisType).isRequired,\r\n  yAxises: PropTypes.arrayOf(PropTypes.shape(yAxisType).isRequired).isRequired\r\n};\r\n\r\nconst CustomYAxis = ({\r\n  description,\r\n  showDescription,\r\n  dataSpread,\r\n  id,\r\n  color,\r\n  showAxis,\r\n  side,\r\n  unit,\r\n  rangeFrom,\r\n  rangeTo,\r\n  rangeSpan,\r\n  ...props\r\n}) => {\r\n  const { domainMin, domainMax, ticks } = chartRangesFromConfig(dataSpread, {\r\n    rangeFrom,\r\n    rangeTo,\r\n    rangeSpan\r\n  });\r\n  return (\r\n    <YAxis\r\n      allowDataOverflow={true}\r\n      yAxisId={id}\r\n      hide={!showAxis}\r\n      orientation={side}\r\n      stroke={color}\r\n      type=\"number\"\r\n      width={showDescription ? 60 : 45}\r\n      domain={[domainMin, domainMax]}\r\n      ticks={ticks}\r\n      label={\r\n        showDescription\r\n          ? props => (\r\n              <CustomYLabel\r\n                description={description}\r\n                color={color}\r\n                unit={unit}\r\n                side={side}\r\n                {...props}\r\n              />\r\n            )\r\n          : undefined\r\n      }\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nconst CustomYLabel = ({ description, side, unit, color, ...props }) => {\r\n  const { x, y, height, width } = props.viewBox;\r\n  const customWidth = 20;\r\n  const nx = side === \"right\" ? x + width - customWidth : x;\r\n  return (\r\n    <g transform={`translate(${nx}, ${y})`}>\r\n      <foreignObject width={customWidth} height={height}>\r\n        <div className=\"CustomLabel\" style={{ color }}>\r\n          <div className=\"CustomLabelInner\">\r\n            <div className=\"CustomLabelRotate\">\r\n              {description}\r\n              {unit && ` [${unit}]`}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </foreignObject>\r\n    </g>\r\n  );\r\n};\r\nconst CustomXLabel = ({ description, color, ...props }) => {\r\n  const { x, y, height, width } = props.viewBox;\r\n  const customHeight = 20;\r\n  const ny = y + height - customHeight;\r\n  return (\r\n    <g transform={`translate(${x}, ${ny})`}>\r\n      <foreignObject height={customHeight} width={width}>\r\n        <div className=\"CustomLabel\" style={{ color }}>\r\n          <div className=\"CustomLabelInner\">\r\n            <div className=\"CustomLabelTransform\">{description}</div>\r\n          </div>\r\n        </div>\r\n      </foreignObject>\r\n    </g>\r\n  );\r\n};\r\n\r\nconst formatDate = timestamp =>\r\n  moment.unix(timestamp / 1000).format(\"YYYY-MM-DD\");\r\nconst formatHour = timestamp => moment.unix(timestamp / 1000).format(\"HH:mm\");\r\n\r\nclass CustomizedXAxisTick extends PureComponent {\r\n  render() {\r\n    const { x, y, payload, withTime } = this.props;\r\n\r\n    return (\r\n      <g transform={`translate(${x},${y})`}>\r\n        <text x={0} y={0} dy={16} textAnchor=\"middle\" fill=\"#666\">\r\n          {formatDate(payload.value)}\r\n        </text>\r\n        {withTime && (\r\n          <text x={0} y={16} dy={16} textAnchor=\"middle\" fill=\"#666\">\r\n            {formatHour(payload.value)}\r\n          </text>\r\n        )}\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nconst xAxisHeight = (showDescription, withTime) =>\r\n  30 + (showDescription ? 20 : 0) + (withTime ? 16 : 0);\r\n\r\nconst CustomXAxis = ({\r\n  description,\r\n  showDescription,\r\n  color,\r\n  withTime,\r\n  datesNumber,\r\n  timeSpread,\r\n  ...props\r\n}) => (\r\n  <XAxis\r\n    allowDataOverflow={true}\r\n    padding={{\r\n      left: 10,\r\n      right: 30\r\n    }}\r\n    tick={<CustomizedXAxisTick withTime={withTime} />}\r\n    interval={0}\r\n    dataKey=\"time\"\r\n    type=\"number\"\r\n    stroke={color}\r\n    height={xAxisHeight(showDescription, withTime)}\r\n    domain={[\"dataMin\", \"dataMax\"]}\r\n    ticks={dateTicks(\r\n      {\r\n        dateFrom: Math.min(...timeSpread),\r\n        dateTo: Math.max(...timeSpread)\r\n      },\r\n      datesNumber,\r\n      withTime\r\n    )}\r\n    label={\r\n      showDescription\r\n        ? props => (\r\n            <CustomXLabel description={description} color={color} {...props} />\r\n          )\r\n        : undefined\r\n    }\r\n    {...props}\r\n  />\r\n);\r\n\r\nconst extractDataSource = path => {\r\n  const tab = path.split(\"-\");\r\n  return tab[0];\r\n};\r\n\r\nconst generateRegresionKey = (path, id) => `REG_${id}_${extractDataKey(path)}`;\r\n\r\nconst generateRegresionPath = (path, id) =>\r\n  `${extractDataSource(path)}-${generateRegresionKey(path, id)}`;\r\n\r\nconst extractDataFromPath = (data, path) => {\r\n  const sourceId = extractDataSource(path);\r\n  return find(data, e => e.id === sourceId).data;\r\n};\r\n\r\nconst extractDataKey = path => {\r\n  const tab = path.split(\"-\");\r\n  return tab.pop();\r\n};\r\n\r\nconst regresionSettings = {\r\n  activeDot: false,\r\n  lineWidth: 1,\r\n  dashed: true,\r\n  dashSpacing: 5,\r\n  dashLength: 5\r\n};\r\n\r\nconst CustomLine = ({\r\n  yAxises,\r\n  dataSet,\r\n  description,\r\n  showDescription,\r\n  lineId,\r\n  axis,\r\n  dashed,\r\n  dashSpacing,\r\n  dashLength,\r\n  dataSource,\r\n  lineColor,\r\n  lineWidth,\r\n  ...props\r\n}) => (\r\n  <Line\r\n    unit={(e => e && e.unit)(find(yAxises, e => e.id === axis))}\r\n    name={description}\r\n    lineId={lineId}\r\n    isAnimationActive={false}\r\n    strokeDasharray={dashed ? `${dashLength} ${dashSpacing}` : undefined}\r\n    strokeWidth={lineWidth}\r\n    type=\"monotone\"\r\n    stroke={lineColor}\r\n    dot={false}\r\n    activeDot={true}\r\n    data={extractDataFromPath(dataSet, dataSource)}\r\n    dataKey={extractDataKey(dataSource)}\r\n    yAxisId={axis}\r\n    {...props}\r\n  />\r\n);\r\n\r\nconst CustomTooltip = ({ active, payload, label, withTime, ...props }) => {\r\n  if (active) {\r\n    return (\r\n      <div className=\"CustomTooltip\">\r\n        <div className=\"CTTime\">\r\n          {`${formatDate(label)} ${withTime ? `${formatHour(label)}` : \"\"}`}\r\n        </div>\r\n        {filter(payload, e => !e.dataKey.startsWith(\"REG_\")).map((e, i) => (\r\n          <div className=\"CTProperty\" key={i}>\r\n            <div className=\"CTFeature\">{e.name}</div>\r\n            <div className=\"CTValue\">{`${e.payload[e.dataKey]} ${e.unit}`}</div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nconst dataFromAxis = (data, usedData, axis) =>\r\n  filter(usedData, e => e.axis === axis).reduce(\r\n    (prev, used) => [\r\n      ...prev,\r\n      ...extractDataFromPath(data, used.dataSource).map(item =>\r\n        Number.parseFloat(item[extractDataKey(used.dataSource)])\r\n      )\r\n    ],\r\n    []\r\n  );\r\n\r\nconst timeFromData = (data, usedData) =>\r\n  usedData.reduce(\r\n    (prev, used) => [\r\n      ...prev,\r\n      ...extractDataFromPath(data, used.dataSource).map(item =>\r\n        Number.parseFloat(item.time)\r\n      )\r\n    ],\r\n    []\r\n  );\r\n\r\nconst generateRegresionValue = (dataSet, path) => {\r\n  const xData = dataSet.map(e => parseFloat(e.time));\r\n  const yData = dataSet.map(e => parseFloat(e[extractDataKey(path)]));\r\n  return regresion(xData, yData);\r\n};\r\n\r\nconst genRegresionValue = (dataSet, path, id) => {\r\n  const { a, b } = generateRegresionValue(dataSet, path);\r\n  return dataSet.map(item => ({\r\n    ...item,\r\n    [generateRegresionKey(path, id)]: a * item.time + b\r\n  }));\r\n};\r\n\r\nconst addRegresionValues = (data, usedData) => {\r\n  usedData\r\n    .filter(e => e.showRegresion)\r\n    .forEach(({ dataSource, id }) => {\r\n      const sourceId = extractDataSource(dataSource);\r\n      const i = data.findIndex(e => e.id === sourceId);\r\n      console.log(\"reg\", i, data, usedData);\r\n      data[i] = {\r\n        ...data[i],\r\n        data: genRegresionValue(data[i].data, dataSource, id)\r\n      };\r\n    });\r\n};\r\n\r\nconst RegresionSummary = ({ data, usedData, withTime }) => {\r\n  const calculate = filter(usedData, e => e.showRegresion).map(\r\n    ({ dataSource, id, description }) => {\r\n      const sourceId = extractDataSource(dataSource);\r\n      const i = data.findIndex(e => e.id === sourceId);\r\n      const { a, b } = generateRegresionValue(data[i].data, dataSource);\r\n      return {\r\n        description,\r\n        a,\r\n        begin: data[i].data[0].time,\r\n        b: b + a * data[i].data[0].time\r\n      };\r\n    }\r\n  );\r\n  const msInHour = 1000 * 60 * 60;\r\n  return calculate.length > 0 ? (\r\n    <div className=\"RegresionSummary\">\r\n      <div className=\"Title\">Regresja liniowa</div>\r\n      <Row gutter={16}>\r\n        {calculate.map((e, i) => (\r\n          <Col span={12} key={i}>\r\n            <div className=\"RegresionValue\">\r\n              <div className=\"CTProperty\">\r\n                <div className=\"CTFeature\">Źródło danych</div>\r\n                <div className=\"CTValue\">{e.description}</div>\r\n              </div>\r\n              <div className=\"CTProperty\">\r\n                <div className=\"CTFeature\">Wzór</div>\r\n                <div className=\"CTValue\">\r\n                  {`( ${(\r\n                    e.a * (withTime ? msInHour : msInHour * 24)\r\n                  ).toExponential(4)} ) x czas + ${e.b.toFixed(2)}`}\r\n                </div>\r\n              </div>\r\n              <div className=\"CTProperty\">\r\n                <div className=\"CTFeature\">Jednostka</div>\r\n                <div className=\"CTValue\">\r\n                  {`Czas liczony w ${withTime ? \"godzinach\" : \"dobach\"}`}\r\n                </div>\r\n              </div>\r\n              <div className=\"CTProperty\">\r\n                <div className=\"CTFeature\">Początek (czas = 0)</div>\r\n                <div className=\"CTValue\">\r\n                  {moment\r\n                    .unix(e.begin / 1000)\r\n                    .format(withTime ? \"YYYY-MM-DD HH:mm\" : \"YYYY-MM-DD\")}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\nclass ResponsiveLineChart extends Component {\r\n  static propTypes = {\r\n    stopInteractive: PropTypes.bool,\r\n    // Ustawienia\r\n    chartConfig: PropTypes.shape(chartConfigType).isRequired,\r\n    usedData: PropTypes.arrayOf(PropTypes.shape(usedDataType)).isRequired,\r\n    data: PropTypes.arrayOf(PropTypes.shape(dataType)).isRequired\r\n  };\r\n\r\n  render() {\r\n    console.log(\"passed to chart\", this.props);\r\n    const { stopInteractive, usedData, data, chartConfig } = this.props;\r\n    const { xAxis, settings, yAxises } = chartConfig;\r\n    const { height, width } = chartConfig.settings;\r\n\r\n    addRegresionValues(data, usedData);\r\n    console.log(\"after regresion\", data);\r\n    // console.log(\r\n    //   \"Wyliczenia dla wykresu\",\r\n    //   chartRangesFromConfing()\r\n    // )\r\n    // TODO!!!\r\n    // Wyciagniecie danych z axis po data i dopiero przekazac\r\n    return (\r\n      <div className=\"LineChart\">\r\n        <div\r\n          className=\"InnerChart\"\r\n          style={{\r\n            width: `${width}%`\r\n          }}\r\n        >\r\n          {settings.showTitle && (\r\n            <div className=\"ChartTitle\">{settings.title}</div>\r\n          )}\r\n          <ResponsiveContainer width={\"100%\"} aspect={width / height}>\r\n            <LineChart data={data}>\r\n              {!stopInteractive && (\r\n                <Tooltip\r\n                  content={<CustomTooltip withTime={xAxis.withTime} />}\r\n                />\r\n              )}\r\n              {settings.showLegend && (\r\n                <Legend\r\n                  height={36}\r\n                  verticalAlign=\"top\"\r\n                  paylodUniqBy={({ payload }) => payload.lineId}\r\n                />\r\n              )}\r\n              <CartesianGrid vertical={false} strokeDasharray=\"5 5\" />\r\n              {CustomXAxis({\r\n                ...xAxis,\r\n                timeSpread: timeFromData(data, usedData)\r\n              })}\r\n              {// WONTFIX recharts ma problem z przeciazaniem komponentow\r\n              yAxises.map(yAxis =>\r\n                CustomYAxis({\r\n                  ...yAxis,\r\n                  key: `yAxis-${yAxis.id}`,\r\n                  dataSpread: dataFromAxis(data, usedData, yAxis.id)\r\n                })\r\n              )}\r\n              {filter(usedData, e => e.showRegresion).map(\r\n                ({ id, dataSource, ...used }) =>\r\n                  CustomLine({\r\n                    yAxises,\r\n                    ...used,\r\n                    dataSource: generateRegresionPath(dataSource, id),\r\n                    lineId: id,\r\n                    regresion: true,\r\n                    dataSet: data,\r\n                    key: `regresionLine-${id}`,\r\n                    ...regresionSettings\r\n                  })\r\n              )}\r\n              {usedData.map(({ id, ...used }) =>\r\n                CustomLine({\r\n                  yAxises,\r\n                  ...used,\r\n                  lineId: id,\r\n                  dataSet: data,\r\n                  key: `usedData-${id}`\r\n                })\r\n              )}\r\n            </LineChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n        <RegresionSummary\r\n          data={data}\r\n          usedData={usedData}\r\n          withTime={xAxis.withTime}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResponsiveLineChart;\r\n","import React, { Component } from \"react\";\r\n// css\r\nimport \"../../css/ChartCreate.css\";\r\n// imported elements\r\nimport ChartSetup from \"./ChartSetup/ChartSetup\";\r\nimport ResponsiveLineChart from \"../Charts/LineChart\";\r\n// ant.design\r\nimport { Row, Col, Empty } from \"antd\";\r\n\r\nconst defaultChartConfig = {\r\n  settings: {\r\n    title: {\r\n      value: \"\"\r\n    },\r\n    showTitle: {\r\n      value: false\r\n    },\r\n    showLegend: {\r\n      value: false\r\n    },\r\n    height: {\r\n      value: 60\r\n    },\r\n    width: {\r\n      value: 100\r\n    }\r\n  },\r\n  xAxis: {\r\n    description: {\r\n      value: \"Czas\"\r\n    },\r\n    showDescription: {\r\n      value: true\r\n    },\r\n    color: {\r\n      value: \"black\"\r\n    },\r\n    datesNumber: {\r\n      value: 5\r\n    },\r\n    withTime: {\r\n      value: false\r\n    }\r\n  },\r\n  yAxises: {\r\n    0: {\r\n      color: {\r\n        value: \"black\"\r\n      },\r\n      showAxis: {\r\n        value: true\r\n      },\r\n      side: {\r\n        value: \"left\"\r\n      },\r\n      description: {\r\n        value: \"Oś Y\"\r\n      },\r\n      showDescription: {\r\n        value: false\r\n      },\r\n      unit: {\r\n        value: \"\"\r\n      },\r\n      rangeFrom: {\r\n        value: \"auto\"\r\n      },\r\n      rangeTo: {\r\n        value: \"auto\"\r\n      },\r\n      rangeSpan: {\r\n        value: \"auto\"\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nclass ChartCreate extends Component {\r\n  state = {\r\n    loadedData: {},\r\n    usedData: {},\r\n    chartConfig: Object.assign({}, defaultChartConfig)\r\n  };\r\n\r\n  update = (key, newValue) => {\r\n    console.log(`UPDATING: ${key}`, newValue);\r\n    this.setState({\r\n      [key]: newValue\r\n    });\r\n  };\r\n\r\n  mapSetupToChart = ({ loadedData, usedData, chartConfig }) => {\r\n    console.log(\"loadedData\", loadedData);\r\n    console.log(\"usedData\", usedData);\r\n    console.log(\"chartConfig\", chartConfig);\r\n    return {\r\n      usedData: Object.keys(usedData).reduce(\r\n        (result, key) => [\r\n          ...result,\r\n          Object.keys(usedData[key].fields).reduce(\r\n            (prev, fieldKey) => ({\r\n              ...prev,\r\n              [fieldKey]: usedData[key].fields[fieldKey].value\r\n            }),\r\n            { id: key }\r\n          )\r\n        ],\r\n        []\r\n      ),\r\n      chartConfig: {\r\n        settings: Object.keys(chartConfig.settings).reduce(\r\n          (prev, fieldKey) => ({\r\n            ...prev,\r\n            [fieldKey]: chartConfig.settings[fieldKey].value\r\n          }),\r\n          {}\r\n        ),\r\n        xAxis: Object.keys(chartConfig.xAxis).reduce(\r\n          (prev, fieldKey) => ({\r\n            ...prev,\r\n            [fieldKey]: chartConfig.xAxis[fieldKey].value\r\n          }),\r\n          {}\r\n        ),\r\n        yAxises: Object.keys(chartConfig.yAxises).reduce(\r\n          (result, key) => [\r\n            ...result,\r\n            Object.keys(chartConfig.yAxises[key]).reduce(\r\n              (prev, fieldKey) => ({\r\n                ...prev,\r\n                [fieldKey]: chartConfig.yAxises[key][fieldKey].value\r\n              }),\r\n              { id: key }\r\n            )\r\n          ],\r\n          []\r\n        )\r\n      },\r\n      data: Object.keys(loadedData).reduce(\r\n        (prev, key) => [...prev, { id: key, data: loadedData[key].data }],\r\n        []\r\n      )\r\n    };\r\n  };\r\n\r\n  render() {\r\n    const mapSetupResult = this.mapSetupToChart(this.state);\r\n    return (\r\n      <div className=\"ChartCreate\">\r\n        <Row>\r\n          <Col span={8}>\r\n            <ChartSetup update={this.update} {...this.state} />\r\n          </Col>\r\n          <Col span={16}>\r\n            <div className=\"ChartPresentation\">\r\n              {Object.keys(mapSetupResult.usedData).length > 0 ? (\r\n                <ResponsiveLineChart\r\n                  stopInteractive={false}\r\n                  {...mapSetupResult}\r\n                />\r\n              ) : (\r\n                <Empty\r\n                  image=\"https://gw.alipayobjects.com/mdn/miniapp_social/afts/img/A*pevERLJC9v0AAAAAAAAAAABjAQAAAQ/original\"\r\n                  description={\r\n                    <span>\r\n                      Tutaj powstanie wykres\r\n                      <br />\r\n                      Pobierz dane i wybierz ich formę prezentacji\r\n                    </span>\r\n                  }\r\n                />\r\n              )}\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChartCreate;\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport PDFGeneration from \"./components/PDFGeneration\";\r\nimport ChartCreate from \"./components/ChartCreate/ChartCreate\";\r\n\r\nimport { LocaleProvider } from \"antd\";\r\nimport pl_PL from \"antd/lib/locale-provider/pl_PL\";\r\nimport moment from \"moment\";\r\nimport \"moment/locale/pl\";\r\nmoment.locale(\"pl\");\r\n\r\nconst styles = {\r\n  root: {\r\n    flexDirection: \"row\"\r\n  },\r\n  menuTab: {\r\n    maxWidth: \"240px\",\r\n    textDecoration: \"unset\"\r\n  },\r\n  button: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    color: \"white\",\r\n    padding: \"4px 16px\"\r\n  }\r\n};\r\n\r\nconst TestContent = ({ link, description, component }) => (\r\n  <Route key={link} path={`/${link}/`} component={component} />\r\n);\r\n\r\nconst TestList = [\r\n  {\r\n    link: \"pdf-generation\",\r\n    description: \"Generacja PDF\",\r\n    component: PDFGeneration\r\n  },\r\n  {\r\n    link: \"recharts\",\r\n    description: \"Technologia tworzenia wykresów\",\r\n    component: ChartCreate\r\n  },\r\n  {\r\n    link: \"indicators\",\r\n    description: \"Operacje na wskaźnikach\",\r\n    component: Test\r\n  }\r\n];\r\n\r\nfunction Test() {\r\n  return <h1>Test</h1>;\r\n}\r\n\r\nclass App extends Component {\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <LocaleProvider locale={pl_PL}>\r\n        {/* <Router> */}\r\n          <div className=\"App\">\r\n            {/* <AppBar position=\"static\" className={classes.root}>\r\n              {TestList.map(e => (\r\n                <Link to={e.link} key={e.link} className={classes.menuTab}>\r\n                  <Button className={classes.button}>{e.description}</Button>\r\n                </Link>\r\n              ))}\r\n            </AppBar> */}\r\n            <div className=\"TestField\">\r\n            {/* {TestList.map(e => TestContent(e))} */}\r\n            <ChartCreate />\r\n            </div>\r\n          </div>\r\n        {/* </Router> */}\r\n      </LocaleProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}