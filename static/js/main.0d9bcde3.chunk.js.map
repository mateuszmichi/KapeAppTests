{"version":3,"sources":["components/PDFGeneration.js","components/Common/DeleteConfirm.js","generators/TestDataGenerator.js","components/Common/Upload.js","components/ChartCreate/ChartSetup/Dialogs/LoadDataDialog.js","components/ChartCreate/ChartSetup/common.js","components/ChartCreate/ChartSetup/LoadData.js","components/Common/ColorSelect.js","components/Common/VisibilitySwitch.js","components/ChartCreate/ChartSetup/Dialogs/UseDataDialog.js","components/ChartCreate/ChartSetup/UseData.js","components/ChartCreate/ChartSetup/Dialogs/AxisDialog.js","components/ChartCreate/ChartSetup/Dialogs/XAxisDialog.js","components/ChartCreate/ChartSetup/Dialogs/EditSettingsDialog.js","components/ChartCreate/ChartSetup/ConfigChart.js","components/ChartCreate/ChartSetup/ChartSetup.js","components/Charts/calculate.js","components/Charts/LineChart.js","components/ChartCreate/ChartCreate.js","App.js","index.js"],"names":["PDFGeneration","chartRef","react_default","a","createElement","onClick","this","generatedPDF","fetch","method","headers","Accept","Content-Type","body","JSON","stringify","url","then","response","blob","newBlob","Blob","type","window","navigator","msSaveOrOpenBlob","data","URL","createObjectURL","link","document","href","download","click","setTimeout","revokeObjectURL","alert","element","getElementsByClassName","console","log","svg","XMLSerializer","serializeToString","svg64","btoa","unescape","encodeURIComponent","canvas","height","width","getContext","drawSvg","png","toDataURL","doc","jsPDF","setFontSize","text","addImage","save","Component","DeleteConfirm","_ref","title","canRemove","remove","reason","children","props","Object","objectWithoutProperties","tooltip","placement","arrowPointAtCenter","popconfirm","assign","className","okText","cancelText","RandomSerie","_ref$from","from","_ref$to","to","_ref$wavePeriod","wavePeriod","_ref$waveScale","waveScale","_ref$rand","rand","_ref$dataSets","dataSets","result","dataSetBegin","dataSetEnd","i","generated","Math","sin","PI","random","push","toFixed","Generator","outside_temperature","inside_temperature","hot_water","electricity","TestDataGenerator","generator","arguments","length","undefined","_ref2","_ref2$dataSets","begin","moment","time","format","add","DataSetLabel","keys","forEach","key","val","dummyRequest","validator","file","onSuccess","onError","upload","customRequest","arg","Dragger","_ref3","Option","Select","TabPane","Tabs","WeekPicker","DatePicker","MonthPicker","RangePicker","timeout","ms","Promise","resolve","filterOutAll","array","filter","e","filterOnlyDoneFiles","status","isDateAfter","date","isBefore","periods","day","description","default","subtract","label","name","rules","required","message","esm_extends","date_picker","disabledDate","formatter","value","startOf","endOf","week","month","userDefined","_ref4","values","PeriodSelect","es_select","placeholder","map","PossibleDataCheckBox","_this$props","possibleData","es_checkbox","Group","style","row","col","span","CustomUpload","_this$props2","onChange","disabled","Common_Upload","accept","icon","LoadedFiles","fileList","showUploadList","showRemoveIcon","defaultFileList","PureComponent","LoadDataForm","state","_this","uploadedFiles","onUploadChange","info","success","concat","error","setState","changeDataSource","source","form","setFieldsValue","dataSource","loadDataFromApi","_callee","fields","regenerator_default","wrap","_context","prev","next","measurements","abrupt","stop","getFieldsFromFlow","requiredFields","formattedFields","getFieldValue","currentPeriodValue","Boolean","getRequiredFields","reduce","field","objectSpread","defineProperty","handleSubmit","_callee3","_this$getFieldsFromFl","_context3","preventDefault","validateFields","_ref7","asyncToGenerator","mark","_callee2","err","fieldsValue","statusFieldsValue","loadedKeys","_context2","mode","t0","sent","includes","loadData","handleReset","onClose","_x3","_x4","apply","loadPossibleData","_callee4","_context4","checkedList","toConsumableArray","normalizeCheckBox","prevValue","indexOf","filtered","resetFields","_this$props$form","getFieldDecorator","isEdit","es_form","layout","onSubmit","hideRequiredMark","display","flexDirection","Item","validateTrigger","whitespace","min","max","input","valuePropName","initialValue","tabs","tab","LoadDataDialog_PeriodSelect","normalize","rule","callback","LoadDataDialog_PossibleDataCheckBox","getValueFromEvent","normFile","LoadDataDialog_LoadedFiles","LoadDataDialog_CustomUpload","es_button","marginRight","htmlType","updateValidationRules","validateField","WrappedLoadDataForm","Form","create","WrappedEditDataForm","onFieldsChange","changedFields","warn","mapPropsToFields","editedData","createFormField","LoadDataDialog","onUpdateFields","_this2$props","_this2","updateData","_this$props3","MODES","freeze","EDIT","LOAD","extractDataSource","path","split","MiddleWrapper","LoadData","openedDialogLoad","openedDialogEdit","onCloseDialogLoad","onCloseDialogEdit","openDialogLoad","openDialogEdit","newIndex","curr","newData","update","find","usedData","removeData","newValue","align","LoadData_MiddleWrapper","shape","components_Common_DeleteConfirm","onConfirm","drawer","visible","bodyStyle","flex","Dialogs_LoadDataDialog","colors","color","ColorSelect","ColorSelect_Option","background","VisibilitySwitch","PathSelect","genTreeData","loadedData","selectable","set","tree_select","dropdownStyle","maxHeight","overflow","treeData","treeDefaultExpandAll","AxisSelect","id","UseDataDialog_Option","UseDataForm","handleAxisData","config","axisData","yAxises","defaultAxisData","_this$handleAxisData","UseDataDialog_PathSelect","UseDataDialog_AxisSelect","gutter","input_number","step","precision","ColorSelect_ColorSelect","components_Common_VisibilitySwitch","lineWidth","dashLength","dashSpacing","WrappedUseDataForm","WrappedEditUseDataForm","UseDataDialog","_this3$props","_this3","UseData","_this$props4","UseData_MiddleWrapper","Dialogs_UseDataDialog","AxisSideSelect","AxisDialog_Option","AxisForm","_MODES$LOAD$MODES$EDI","_MODES$LOAD$MODES$EDI2","AxisDialog_AxisSideSelect","help","react","unit","WrappedEditAxisForm","editedAxis","WrappedLoadAxisForm","AxisDialog","XAxisForm","datesNumber","WrappedXAxisForm","XAxisDialog","EditSettingsForm","slider","WrappedEditSettingsForm","settings","EditSettingsDialog","ConfigChart","openedDialogSettings","openedDialogXAxis","openedDialogAddAxis","openedDialogEditAxis","onCloseDialogSettings","onCloseDialogXAxis","onCloseDialogAddAxis","onCloseDialogEditAxis","openDialogSettings","openDialogXAxis","openDialogAddAxis","openDialogEditAxis","axis","addAxis","newAxis","ncofig","updateAxis","removeAxis","axisId","updateSettings","newSettings","updateXAxis","_this$props5","xAxis","ConfigChart_MiddleWrapper","axes","Dialogs_EditSettingsDialog","Dialogs_XAxisDialog","Dialogs_AxisDialog","Panel","Collapse","getActiveStatus","isActiveUsedData","getOwnPropertyNames","isActiveChartConfig","ChartSetup","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","changeActiveKey","newActiveKey","activeKey","updateLoadedData","updateUsedData","updateChartConfig","_getActiveStatus","prevProps","updateActiveKeys","removeActiveKeys","activeStatus","prevActiveStatus","_","union","chartConfig","_getActiveStatus2","collapse","bordered","header","ChartSetup_LoadData","ChartSetup_UseData","ChartSetup_ConfigChart","autoRanges","limit","calculateSpan","power","range","logRange","floor","log10","pow","calculatePower","digit","minTick","maxTick","ceil","minValue","maxValue","formatRange","auto","Number","parseFloat","getTicks","_ref5","dateTicks","_ref6","withTime","dateFrom","dateTo","start","unix","end","duration","diff","asHours","asDays","number","iter","isAfter","chartRangesFromConfig","rangeFrom","rangeTo","rangeSpan","_getRangeFromData","getRangeFromData","domainMin","domainMax","ticks","CustomYLabel","side","_props$viewBox","viewBox","x","y","nx","transform","CustomXLabel","_props$viewBox2","ny","formatDate","timestamp","formatHour","CustomizedXAxisTick","payload","dy","textAnchor","fill","xAxisHeight","showDescription","generateRegresionKey","extractDataKey","generateRegresionPath","extractDataFromPath","sourceId","pop","regresionSettings","activeDot","dashed","CustomLine","dataSet","lineId","lineColor","es6","isAnimationActive","strokeDasharray","strokeWidth","stroke","dot","dataKey","yAxisId","CustomTooltip","active","startsWith","dataFromAxis","used","item","timeFromData","generateRegresionValue","xData","yData","_regresionData","_ref8","sx2","sx","sxy","sy","regresionData","n","b","regresion","genRegresionValue","_generateRegresionVal","RegresionSummary","calculate","showRegresion","_ref9","findIndex","_generateRegresionVal2","msInHour","toExponential","ResponsiveLineChart","stopInteractive","_chartConfig$settings","addRegresionValues","showTitle","aspect","content","LineChart_CustomTooltip","showLegend","verticalAlign","paylodUniqBy","_ref10","vertical","timeSpread","allowDataOverflow","padding","left","right","tick","LineChart_CustomizedXAxisTick","interval","domain","LineChart_CustomXLabel","CustomXAxis","yAxis","dataSpread","showAxis","_chartRangesFromConfi","hide","orientation","LineChart_CustomYLabel","CustomYAxis","_ref11","_ref12","LineChart_RegresionSummary","defaultChartConfig","0","ChartCreate","mapSetupToChart","fieldKey","mapSetupResult","ChartCreate_ChartSetup_ChartSetup","Charts_LineChart","empty","image","locale","TestList","component","App","classes","locale_provider","pl_PL","BrowserRouter","AppBar_default","position","root","Link","menuTab","Button_default","button","Route","TestContent","withStyles","maxWidth","textDecoration","ReactDOM","render","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.0d9bcde3.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\n// import Charts from \"./Charts/LineChart\";\r\n\r\nimport jsPDF from \"jspdf\";\r\n\r\nimport canvg from \"canvg\";\r\n\r\nclass PDFGeneration extends Component {\r\n  chartRef = null;\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>{/* <Charts ref={(input) => {this.chartRef = input }} /> */}</div>\r\n        <div>\r\n          <button onClick={this.generatedPDF}>Generate PDF!</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  generatedPDF() {\r\n    fetch(\"http://localhost:9000/api/render\", {\r\n      method: \"POST\", // *GET, POST, PUT, DELETE, etc.\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({ url: \"http://localhost:3000\" }) // body data type must match \"Content-Type\" header\r\n    })\r\n      .then(response => response.blob())\r\n      .then(blob => {\r\n        var newBlob = new Blob([blob], { type: \"application/pdf\" });\r\n        if (window.navigator && window.navigator.msSaveOrOpenBlob) {\r\n          window.navigator.msSaveOrOpenBlob(newBlob);\r\n          return;\r\n        }\r\n        const data = window.URL.createObjectURL(newBlob);\r\n        var link = document.createElement(\"a\");\r\n        link.href = data;\r\n        link.download = \"file.pdf\";\r\n        link.click();\r\n        setTimeout(function() {\r\n          window.URL.revokeObjectURL(data);\r\n        }, 100);\r\n      });\r\n  }\r\n  generatePdf() {\r\n    alert(\"blick!\");\r\n    const element = document.getElementsByClassName(\"recharts-surface\")[0];\r\n    if (element) {\r\n      console.log(element);\r\n      const svg = new XMLSerializer().serializeToString(element);\r\n      const svg64 =\r\n        \"data:image/svg+xml;base64,\" + btoa(unescape(encodeURIComponent(svg)));\r\n      const canvas = document.createElement(\"canvas\");\r\n      canvas.height = 600;\r\n      canvas.width = 1000;\r\n      const ctx = canvas.getContext(\"2d\");\r\n      ctx.drawSvg(svg64, 0, 0, 1000, 600);\r\n\r\n      const png = canvas.toDataURL(\"image/png\");\r\n\r\n      // const image = new Image(500,300)\r\n      // image.src = png;\r\n      // document.body.append(image);\r\n\r\n      const doc = new jsPDF(\"portrait\", \"mm\", \"a4\");\r\n      doc.setFontSize(20);\r\n      doc.text(15, 15, \"Super Cool Chart\");\r\n      doc.addImage(png, \"PNG\", 20, 20, 210 - 20 * 2, ((210 - 20 * 2) * 6) / 10);\r\n      doc.save(\"new-canvas.pdf\");\r\n    }\r\n  }\r\n}\r\n\r\nexport default PDFGeneration;\r\n","import React from \"react\";\r\n// imported elements\r\n// css\r\nimport \"../../css/Common/DeleteConfirm.css\";\r\n// ant.design\r\nimport { Popconfirm, Tooltip } from \"antd\";\r\n\r\nconst DeleteConfirm = ({\r\n  title,\r\n  canRemove,\r\n  remove,\r\n  reason,\r\n  children,\r\n  ...props\r\n}) => (\r\n  <Tooltip\r\n    placement=\"top\"\r\n    arrowPointAtCenter\r\n    title={canRemove ? remove : reason}\r\n  >\r\n    {canRemove ? (\r\n      <Popconfirm\r\n        placement=\"top\"\r\n        title={<div className=\"PopConfirm\">{title}</div>}\r\n        okText=\"Tak\"\r\n        cancelText=\"Nie\"\r\n        {...props}\r\n      >\r\n        {children}\r\n      </Popconfirm>\r\n    ) : (\r\n      children\r\n    )}\r\n  </Tooltip>\r\n);\r\n\r\nexport default DeleteConfirm;\r\n","import moment from \"moment\";\r\n\r\nexport const RandomSerie = ({\r\n  from = 10,\r\n  to = 15,\r\n  wavePeriod = 1,\r\n  waveScale = 0,\r\n  rand = 0.2,\r\n  dataSets = 50,\r\n  dataSetBegin = 1,\r\n  dataSetEnd = 50\r\n}) => {\r\n  const result = [];\r\n  for (let i = 0; i < dataSets; i++) {\r\n    const generated =\r\n      from +\r\n      ((to - from) * i) / (dataSets - 1) +\r\n      Math.sin(((i / (dataSets - 1)) * 2 * Math.PI) / wavePeriod) * waveScale +\r\n      rand * Math.random();\r\n    result.push(generated.toFixed(2));\r\n  }\r\n  return result;\r\n};\r\nexport const DataSetLabel = ({\r\n  dataSets = 50,\r\n  dataSetBegin = 1,\r\n  dataSetEnd = 50\r\n}) => {\r\n  const result = [];\r\n  const begin = moment(\"2019-03-22\");\r\n  for (let i = 0; i < dataSets; i++) {\r\n    result.push({\r\n      time: begin.format(\"x\")\r\n    });\r\n    begin.add(1, \"hours\");\r\n  }\r\n  return result;\r\n};\r\n\r\nconst Generator = {\r\n  outside_temperature: () =>\r\n    RandomSerie({ from: -3, to: 10, wavePeriod: 0.5, waveScale: 5, rand: 0.5 }),\r\n  inside_temperature: () =>\r\n    RandomSerie({ from: 18, to: 20, wavePeriod: 6, waveScale: 0.5, rand: 0.2 }),\r\n  hot_water: () => RandomSerie({ from: 3667, to: 4223, rand: 8 }),\r\n  electricity: () => RandomSerie({ from: 4567.23, to: 4644.89, rand: 0.8 })\r\n};\r\n\r\nconst TestDataGenerator = (generator = Generator) => {\r\n  const result = DataSetLabel({});\r\n  Object.keys(generator).forEach(key => {\r\n    const data = generator[key]();\r\n    data.forEach((val, i) => {\r\n      result[i][key] = val;\r\n    });\r\n  });\r\n  return result;\r\n};\r\n\r\nexport default TestDataGenerator;\r\n","import React from \"react\";\r\n// imported elements\r\n// css\r\nimport \"../../css/Common/Upload.css\";\r\n// ant.design\r\nimport { Upload } from \"antd\";\r\n\r\nconst dummyRequest = ({ file, onSuccess, onError }, validator) => {\r\n  setTimeout(() => {\r\n    if (!validator || validator(file)) {\r\n      onSuccess(\"ok\");\r\n    } else {\r\n      onError(\"bad\");\r\n    }\r\n  }, 0);\r\n};\r\n\r\nconst CustomUpload = ({ validator, ...props }) => (\r\n  <Upload customRequest={arg => dummyRequest(arg, validator)} {...props} />\r\n);\r\n\r\nconst CustomDragger = ({ validator, ...props }) => (\r\n  <Upload.Dragger\r\n    customRequest={arg => dummyRequest(arg, validator)}\r\n    {...props}\r\n  />\r\n);\r\n\r\nexport default Object.assign(CustomUpload, {\r\n  Dragger: CustomDragger\r\n});\r\n","import React, { Component, PureComponent } from \"react\";\r\nimport moment from \"moment\";\r\nimport { filter } from \"lodash\";\r\nimport PropTypes from \"prop-types\";\r\n// imported elements\r\nimport TestDataGenerator, {\r\n  RandomSerie\r\n} from \"../../../../generators/TestDataGenerator\";\r\nimport Upload from \"../../../Common/Upload\";\r\n// ant.design\r\nimport {\r\n  Checkbox,\r\n  Form,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Tabs,\r\n  Icon,\r\n  Button,\r\n  Select,\r\n  DatePicker,\r\n  message\r\n} from \"antd\";\r\nconst { Option } = Select;\r\nconst { TabPane } = Tabs;\r\nconst { WeekPicker, MonthPicker, RangePicker } = DatePicker;\r\n\r\nfunction timeout(ms) {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\nconst filterOutAll = array => filter(array, e => e !== \"all\");\r\n\r\nconst filterOnlyDoneFiles = array => filter(array, e => e.status === \"done\");\r\n\r\nconst isDateAfter = date => moment().isBefore(date);\r\n\r\nconst periods = {\r\n  day: {\r\n    description: \"Dzienne\",\r\n    default: moment().subtract(1, \"day\"),\r\n    label: \"Wybór dnia\",\r\n    name: \"date-picker\",\r\n    rules: [{ required: true, message: \"Wybierz wartość\", type: \"object\" }],\r\n    element: ({ ...props }) => (\r\n      <DatePicker disabledDate={isDateAfter} {...props} />\r\n    ),\r\n    formatter: value => ({\r\n      from: value.startOf(\"day\").format(),\r\n      to: value.endOf(\"day\").format()\r\n    })\r\n  },\r\n  week: {\r\n    description: \"Tygodniowe\",\r\n    default: moment().subtract(1, \"week\"),\r\n    label: \"Wybór tygodnia\",\r\n    name: \"week-picker\",\r\n    rules: [{ required: true, message: \"Wybierz wartość\", type: \"object\" }],\r\n    element: ({ ...props }) => (\r\n      <WeekPicker\r\n        disabledDate={isDateAfter}\r\n        format=\"WW. [tydzień] YYYY\"\r\n        {...props}\r\n      />\r\n    ),\r\n    formatter: value => ({\r\n      from: value.startOf(\"week\").format(),\r\n      to: value.endOf(\"week\").format()\r\n    })\r\n  },\r\n  month: {\r\n    description: \"Miesięczne\",\r\n    default: moment().subtract(1, \"month\"),\r\n    label: \"Wybór miesiąca\",\r\n    name: \"month-picker\",\r\n    rules: [{ required: true, message: \"Wybierz wartość\", type: \"object\" }],\r\n    element: ({ ...props }) => (\r\n      <MonthPicker disabledDate={isDateAfter} {...props} />\r\n    ),\r\n    formatter: value => ({\r\n      from: value.startOf(\"month\").format(),\r\n      to: value.endOf(\"month\").format()\r\n    })\r\n  },\r\n  userDefined: {\r\n    description: \"Inny zakres\",\r\n    default: [moment().subtract(1, \"months\"), moment()],\r\n    label: \"Wybór zakresu dni\",\r\n    name: \"range-picker\",\r\n    rules: [{ required: true, message: \"Wybierz wartość\", type: \"array\" }],\r\n    element: ({ ...props }) => (\r\n      <RangePicker disabledDate={isDateAfter} {...props} />\r\n    ),\r\n    formatter: values => ({\r\n      from: values[0].startOf(\"day\").format(),\r\n      to: values[0].endOf(\"day\").format()\r\n    })\r\n  }\r\n};\r\n\r\nclass PeriodSelect extends Component {\r\n  render() {\r\n    return (\r\n      <Select placeholder=\"Rodzaj zakresu danych\" {...this.props}>\r\n        {Object.keys(periods).map(e => (\r\n          <Option key={e} value={e}>\r\n            {periods[e].description}\r\n          </Option>\r\n        ))}\r\n      </Select>\r\n    );\r\n  }\r\n}\r\n\r\nclass PossibleDataCheckBox extends Component {\r\n  render() {\r\n    const { possibleData, ...props } = this.props;\r\n    return (\r\n      <Checkbox.Group style={{ width: \"100%\" }} {...props}>\r\n        <Row>\r\n          <Col span={24}>\r\n            <Checkbox value=\"all\">Wybierz wszystkie</Checkbox>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          {possibleData.map(e => (\r\n            <Col key={e.key} span={8}>\r\n              <Checkbox value={e.key}>{e.description}</Checkbox>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      </Checkbox.Group>\r\n    );\r\n  }\r\n}\r\n\r\nclass CustomUpload extends Component {\r\n  render() {\r\n    const { onChange, disabled } = this.props;\r\n    return (\r\n      <Upload.Dragger\r\n        // can add validator={(file) => validatefileresult: boolean}\r\n        accept=\".txt,.csv,.xls,.xlsx\"\r\n        name=\"files\"\r\n        onChange={onChange}\r\n        disabled={disabled}\r\n      >\r\n        <p className=\"ant-upload-drag-icon\">\r\n          <Icon type=\"inbox\" />\r\n        </p>\r\n        <p className=\"ant-upload-text\">Kliknij lub przeciągnij plik z danymi</p>\r\n        <p className=\"ant-upload-hint\">\r\n          Wspiera przesłanie pojedynczego pliku.\r\n        </p>\r\n      </Upload.Dragger>\r\n    );\r\n  }\r\n}\r\n\r\nclass LoadedFiles extends PureComponent {\r\n  render() {\r\n    const { fileList } = this.props;\r\n    return (\r\n      <Upload\r\n        showUploadList={{ showRemoveIcon: false }}\r\n        defaultFileList={fileList.fileList}\r\n        disabled={true}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nclass LoadDataForm extends Component {\r\n  static propTypes = {\r\n    mode: PropTypes.oneOf([\"edit\", \"load\"]).isRequired,\r\n    editedData: PropTypes.object,\r\n    possibleData: PropTypes.array,\r\n    onClose: PropTypes.func,\r\n    loadData: PropTypes.func,\r\n    updateData: PropTypes.func\r\n  };\r\n\r\n  state = {\r\n    possibleData: this.props.possibleData || [],\r\n    uploadedFiles: 0\r\n  };\r\n\r\n  onUploadChange = info => {\r\n    if (info.file.status === \"done\") {\r\n      message.success(`${info.file.name} - Plik został załadowany poprawnie`);\r\n    } else if (info.file.status === \"error\") {\r\n      message.error(`${info.file.name} - Nie udało się załadować pliku.`);\r\n    }\r\n    this.setState({\r\n      uploadedFiles: filterOnlyDoneFiles(info.fileList)\r\n    });\r\n  };\r\n\r\n  changeDataSource = source => {\r\n    this.props.form.setFieldsValue({\r\n      dataSource: source\r\n    });\r\n  };\r\n\r\n  // TODO aktualnie zaslepka na strzal\r\n  loadDataFromApi = async fields => {\r\n    await timeout(2000);\r\n    const Generator = {};\r\n    fields.measurements.forEach(e => {\r\n      Generator[e] = () =>\r\n        RandomSerie({\r\n          from: 10 + 14 * Math.random(),\r\n          to: 20 + 6 * Math.random(),\r\n          waveScale: 0.3 * Math.random()\r\n        });\r\n    });\r\n    return TestDataGenerator(Generator);\r\n  };\r\n\r\n  getFieldsFromFlow = () => {\r\n    const requiredFields = [];\r\n    const formattedFields = [];\r\n    requiredFields.push(\"description\");\r\n    requiredFields.push(\"dataSource\");\r\n    if (this.props.form.getFieldValue(\"dataSource\") === \"db\") {\r\n      const currentPeriodValue = this.props.form.getFieldValue(\"selectPeriod\");\r\n      requiredFields.push(\"selectPeriod\");\r\n      requiredFields.push(periods[currentPeriodValue].name);\r\n      formattedFields.push({\r\n        name: periods[currentPeriodValue].name,\r\n        formatter: periods[currentPeriodValue].formatter\r\n      });\r\n      requiredFields.push(\"measurements\");\r\n      formattedFields.push({\r\n        name: \"measurements\",\r\n        formatter: filterOutAll\r\n      });\r\n    } else {\r\n      requiredFields.push(\"dropbox\");\r\n      formattedFields.push({\r\n        name: \"dropbox\",\r\n        formatter: value => filterOnlyDoneFiles(value.fileList)\r\n      });\r\n      requiredFields.push(\"saveOnDB\");\r\n      formattedFields.push({\r\n        name: \"saveOnDB\",\r\n        formatter: value => Boolean(value)\r\n      });\r\n    }\r\n    return { requiredFields, formattedFields };\r\n  };\r\n\r\n  getRequiredFields = requiredFields =>\r\n    requiredFields.reduce(\r\n      (prev, field) => ({\r\n        ...prev,\r\n        [field]: { value: this.props.form.getFieldValue(field) }\r\n      }),\r\n      {}\r\n    );\r\n\r\n  handleSubmit = async e => {\r\n    e.preventDefault();\r\n\r\n    const { requiredFields, formattedFields } = this.getFieldsFromFlow();\r\n\r\n    this.props.form.validateFields(\r\n      requiredFields,\r\n      {},\r\n      async (err, fieldsValue) => {\r\n        if (err) {\r\n          return;\r\n        }\r\n        const statusFieldsValue = { ...fieldsValue };\r\n        formattedFields.forEach(e => {\r\n          fieldsValue[e.name] = e.formatter(fieldsValue[e.name]);\r\n        });\r\n        if (this.props.mode === \"edit\") {\r\n          // TODO strzal / update info\r\n        } else {\r\n          const data =\r\n            statusFieldsValue[\"dataSource\"] === \"db\"\r\n              ? await this.loadDataFromApi(fieldsValue)\r\n              : {};\r\n          const loadedKeys =\r\n            statusFieldsValue[\"dataSource\"] === \"db\"\r\n              ? filter(this.state.possibleData, e =>\r\n                  statusFieldsValue[\"measurements\"].includes(e.key)\r\n                )\r\n              : [];\r\n          this.props.loadData({\r\n            fields: this.getRequiredFields(requiredFields),\r\n            data,\r\n            possibleData: this.state.possibleData,\r\n            loadedKeys\r\n          });\r\n          this.handleReset();\r\n          this.props.onClose();\r\n        }\r\n        return;\r\n      }\r\n    );\r\n  };\r\n\r\n  // TODO: fetch/mock\r\n  loadPossibleData = async () => {\r\n    await timeout(1000);\r\n    const result = [\r\n      {\r\n        key: \"temperature\",\r\n        description: \"Temperatura\"\r\n      },\r\n      {\r\n        key: \"co2\",\r\n        description: \"CO2\"\r\n      },\r\n      {\r\n        key: \"humidity\",\r\n        description: \"Wilgotność\"\r\n      }\r\n    ];\r\n    this.setState({\r\n      possibleData: result,\r\n      checkedList: [\"all\", ...result.map(e => e.key)]\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    console.log(\"did mount\", this.props, this.state);\r\n    if (this.props.mode === \"load\") {\r\n      this.loadPossibleData();\r\n    }\r\n  }\r\n\r\n  normalizeCheckBox = (value, prevValue = []) => {\r\n    if (!value) return [];\r\n    if (value.indexOf(\"all\") >= 0 && prevValue.indexOf(\"all\") < 0) {\r\n      return [\"all\", ...this.state.possibleData.map(e => e.key)];\r\n    }\r\n    if (value.indexOf(\"all\") < 0 && prevValue.indexOf(\"all\") >= 0) {\r\n      return [];\r\n    }\r\n    const filtered = filterOutAll(value);\r\n    if (filtered.length !== this.state.possibleData.length) {\r\n      return filtered;\r\n    } else {\r\n      return [\"all\", ...this.state.possibleData.map(e => e.key)];\r\n    }\r\n  };\r\n\r\n  handleReset = () => {\r\n    this.props.form.resetFields();\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator, getFieldValue } = this.props.form;\r\n    const initialPeriodValue = \"month\";\r\n    const currentPeriodValue =\r\n      getFieldValue(\"selectPeriod\") || initialPeriodValue;\r\n    const isEdit = this.props.mode === \"edit\";\r\n    return (\r\n      <Form\r\n        layout=\"vertical\"\r\n        onSubmit={this.handleSubmit}\r\n        hideRequiredMark={true}\r\n        style={{\r\n          height: \"100%\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\"\r\n        }}\r\n      >\r\n        <div className=\"LoadDataDialogInner\">\r\n          <Form.Item label=\"Nazwa zestawu\">\r\n            {getFieldDecorator(\"description\", {\r\n              validateTrigger: [\"onChange\", \"onBlur\"],\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"Proszę podać nazwę zestawu\"\r\n                },\r\n                {\r\n                  message: \"Wymagana nazwa o długości od 3 do 30 znaków\",\r\n                  whitespace: true,\r\n                  min: 3,\r\n                  max: 30\r\n                }\r\n              ]\r\n            })(<Input placeholder=\"Nazwa zestawu danych\" />)}\r\n          </Form.Item>\r\n          <Form.Item label=\"Źródło danych\">\r\n            {getFieldDecorator(\"dataSource\", {\r\n              valuePropName: \"activeKey\",\r\n              initialValue: \"db\"\r\n            })(\r\n              <Tabs onChange={this.changeDataSource}>\r\n                <TabPane\r\n                  tab={\r\n                    <span>\r\n                      <Icon type=\"database\" />\r\n                      Pobierz z bazy danych\r\n                    </span>\r\n                  }\r\n                  key=\"db\"\r\n                  disabled={isEdit && getFieldValue(\"dataSource\") !== \"db\"}\r\n                >\r\n                  <Form.Item label=\"Rodzaj zakresu danych\">\r\n                    {getFieldDecorator(\"selectPeriod\", {\r\n                      validateTrigger: [\"onChange\"],\r\n                      rules: [\r\n                        {\r\n                          required: true,\r\n                          message: \"Wybierz rodzaj zakresu czasu\"\r\n                        }\r\n                      ],\r\n                      initialValue: initialPeriodValue\r\n                    })(<PeriodSelect disabled={isEdit} />)}\r\n                  </Form.Item>\r\n                  <Form.Item label={periods[currentPeriodValue].label}>\r\n                    {getFieldDecorator(periods[currentPeriodValue].name, {\r\n                      validateTrigger: [\"onChange\"],\r\n                      rules: periods[currentPeriodValue].rules,\r\n                      initialValue: periods[currentPeriodValue].default\r\n                    })(\r\n                      periods[currentPeriodValue].element({\r\n                        disabled: isEdit\r\n                      })\r\n                    )}\r\n                  </Form.Item>\r\n                  {this.state.possibleData.length > 0 && (\r\n                    <Form.Item label=\"Pobierane pomiary\">\r\n                      {getFieldDecorator(\"measurements\", {\r\n                        initialValue: this.state.checkedList,\r\n                        normalize: this.normalizeCheckBox,\r\n                        rules: [\r\n                          {\r\n                            validator: (rule, value, callback) =>\r\n                              filterOutAll(value).length === 0\r\n                                ? callback(rule.message)\r\n                                : callback(),\r\n                            message:\r\n                              \"Potrzebny minimum jeden pomiar do pobrania\"\r\n                          }\r\n                        ]\r\n                      })(\r\n                        <PossibleDataCheckBox\r\n                          possibleData={this.state.possibleData}\r\n                        />\r\n                      )}\r\n                    </Form.Item>\r\n                  )}\r\n                </TabPane>\r\n                <TabPane\r\n                  tab={\r\n                    <span>\r\n                      <Icon type=\"upload\" />\r\n                      Wgraj z pliku\r\n                    </span>\r\n                  }\r\n                  key=\"file\"\r\n                  disabled={isEdit && getFieldValue(\"dataSource\") !== \"file\"}\r\n                >\r\n                  <Form.Item label=\"Wczytaj plik\">\r\n                    <div className=\"dropbox\">\r\n                      {getFieldDecorator(\"dropbox\", {\r\n                        valuePropName: \"fileList\",\r\n                        getValueFromEvent: this.normFile,\r\n                        rules: [\r\n                          {\r\n                            validator: (rule, value, callback) =>\r\n                              filterOnlyDoneFiles(value ? value.fileList : [])\r\n                                .length !== 1\r\n                                ? callback(rule.message)\r\n                                : callback(),\r\n                            message: \"Potrzebny poprawny plik do załadowania\"\r\n                          }\r\n                        ]\r\n                      })(\r\n                        isEdit ? (\r\n                          <LoadedFiles />\r\n                        ) : (\r\n                          <CustomUpload\r\n                            onChange={this.onUploadChange}\r\n                            disabled={this.state.uploadedFiles > 0}\r\n                          />\r\n                        )\r\n                      )}\r\n                    </div>\r\n                  </Form.Item>\r\n                  <Form.Item>\r\n                    {getFieldDecorator(\"saveOnDB\", {\r\n                      valuePropName: \"checked\"\r\n                    })(<Checkbox>Zapisz w bazie danych</Checkbox>)}\r\n                  </Form.Item>\r\n                </TabPane>\r\n              </Tabs>\r\n            )}\r\n          </Form.Item>\r\n        </div>\r\n        <div className=\"LoadDataDialogSubmit\">\r\n          {!isEdit && (\r\n            <Button onClick={this.handleReset} style={{ marginRight: 16 }}>\r\n              Zresetuj\r\n            </Button>\r\n          )}\r\n          <Button\r\n            type=\"primary\"\r\n            icon={isEdit ? \"redo\" : \"plus\"}\r\n            htmlType=\"submit\"\r\n            disabled={!(this.state.possibleData.length > 0)}\r\n          >\r\n            {isEdit ? \"Aktualizuj\" : \"Dodaj dane\"}\r\n          </Button>\r\n        </div>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst updateValidationRules = {\r\n  description: [value => value.length >= 3, value => value.length <= 30],\r\n  measurements: [value => filterOutAll(value).length !== 0]\r\n};\r\n\r\nconst validateField = (field, value) =>\r\n  !updateValidationRules[field] ||\r\n  updateValidationRules[field].reduce(\r\n    (result, rule) => result && rule(value),\r\n    true\r\n  );\r\n\r\nconst validateFields = fields =>\r\n  Object.keys(fields).reduce(\r\n    (prev, field) => prev && validateField(field, fields[field].value),\r\n    true\r\n  );\r\n\r\nconst WrappedLoadDataForm = Form.create({ name: \"load_data_form\" })(\r\n  LoadDataForm\r\n);\r\nconst WrappedEditDataForm = Form.create({\r\n  name: \"edit_data_form\",\r\n  onFieldsChange(props, changedFields) {\r\n    if (!validateFields(changedFields)) {\r\n      return console.warn(\"Form not valid, abort update\");\r\n    }\r\n    props.onChange(changedFields);\r\n  },\r\n  mapPropsToFields(props) {\r\n    return Object.keys(props.editedData).reduce(\r\n      (prev, key) => ({\r\n        ...prev,\r\n        [key]: Form.createFormField({ ...props.editedData[key] })\r\n      }),\r\n      {}\r\n    );\r\n  }\r\n})(LoadDataForm);\r\n\r\nclass LoadDataDialog extends Component {\r\n  static propTypes = {\r\n    mode: PropTypes.string,\r\n    editedData: PropTypes.object,\r\n    onClose: PropTypes.func,\r\n    loadData: PropTypes.func,\r\n    updateData: PropTypes.func\r\n  };\r\n\r\n  onUpdateFields = changedFields => {\r\n    const { editedData, updateData } = this.props;\r\n    if (changedFields !== editedData.fields) {\r\n      console.log({\r\n        ...editedData,\r\n        fields: { ...editedData.fields, ...changedFields }\r\n      });\r\n      updateData({\r\n        ...editedData,\r\n        fields: { ...editedData.fields, ...changedFields }\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { mode, editedData, onClose, loadData, updateData } = this.props;\r\n\r\n    return (\r\n      <div className=\"LoadDataDialog\">\r\n        {mode === \"edit\" ? (\r\n          <WrappedEditDataForm\r\n            mode=\"edit\"\r\n            onClose={onClose}\r\n            updateData={updateData}\r\n            editedData={editedData.fields}\r\n            possibleData={editedData.possibleData}\r\n            onChange={this.onUpdateFields}\r\n          />\r\n        ) : (\r\n          <WrappedLoadDataForm\r\n            mode=\"load\"\r\n            onClose={onClose}\r\n            loadData={loadData}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoadDataDialog;\r\n","export const MODES = Object.freeze({\r\n  EDIT: \"edit\",\r\n  LOAD: \"load\"\r\n});\r\n\r\nexport const extractDataSource = path => {\r\n  const tab = path.split(\"-\");\r\n  return tab[0];\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { find } from \"lodash\";\r\n// imported elements\r\nimport DeleteConfirm from \"../../Common/DeleteConfirm\";\r\nimport LoadDataDialog from \"./Dialogs/LoadDataDialog\";\r\nimport { extractDataSource } from \"./common\";\r\n// ant.design\r\nimport { Button, Col, Drawer, Row, Tooltip } from \"antd\";\r\n\r\nconst MiddleWrapper = ({ ...props }) => (\r\n  <div className=\"MiddleWrapper\" {...props} />\r\n);\r\n\r\nclass LoadData extends Component {\r\n  static propTypes = {\r\n    data: PropTypes.object.isRequired,\r\n    usedData: PropTypes.object.isRequired,\r\n    update: PropTypes.func.isRequired\r\n  };\r\n\r\n  state = {\r\n    openedDialogLoad: false,\r\n    openedDialogEdit: false,\r\n    editedData: null\r\n  };\r\n\r\n  onCloseDialogLoad = () => {\r\n    this.setState({ openedDialogLoad: false });\r\n  };\r\n  onCloseDialogEdit = () => {\r\n    this.setState({\r\n      openedDialogEdit: false,\r\n      editedData: null\r\n    });\r\n  };\r\n  openDialogLoad = () => {\r\n    this.setState({ openedDialogLoad: true });\r\n  };\r\n  openDialogEdit = key => {\r\n    this.setState({\r\n      openedDialogEdit: true,\r\n      editedData: key\r\n    });\r\n  };\r\n\r\n  newIndex = () =>\r\n    Object.keys(this.props.data).reduce(\r\n      (prev, curr) => Math.max(prev, curr),\r\n      -1\r\n    ) + 1;\r\n\r\n  loadData = newData => {\r\n    const { data, update } = this.props;\r\n    update({ ...data, [this.newIndex()]: newData });\r\n  };\r\n\r\n  canRemove = key =>\r\n    !find(\r\n      Object.keys(this.props.usedData),\r\n      i =>\r\n        extractDataSource(this.props.usedData[i].fields.dataSource.value) ===\r\n        key\r\n    );\r\n\r\n  removeData = key => {\r\n    const { data, update } = this.props;\r\n    const newValue = { ...data };\r\n    delete newValue[key];\r\n    update(newValue);\r\n  };\r\n\r\n  updateData = (key, value) => {\r\n    const { data, update } = this.props;\r\n    update({ ...data, [key]: value });\r\n  };\r\n\r\n  render() {\r\n    const { data } = this.props;\r\n    return (\r\n      <div className=\"LoadData\">\r\n        {Object.keys(data).map(key => (\r\n          <Row type=\"flex\" align=\"middle\" key={key}>\r\n            <Col span={16}>{data[key].fields.description.value}</Col>\r\n            <Col span={4}>\r\n              <MiddleWrapper>\r\n                <Tooltip placement=\"top\" title=\"Ustawienia\">\r\n                  <Button\r\n                    shape=\"circle\"\r\n                    icon=\"setting\"\r\n                    onClick={() => this.openDialogEdit(key)}\r\n                  />\r\n                </Tooltip>\r\n              </MiddleWrapper>\r\n            </Col>\r\n            <Col span={4}>\r\n              <MiddleWrapper>\r\n                <DeleteConfirm\r\n                  title=\"Czy chcesz usunąć załadowane dane?\"\r\n                  remove=\"Usuń załadowane dane\"\r\n                  canRemove={this.canRemove(key)}\r\n                  reason=\"Nie można usunąć, dane są w użyciu.\"\r\n                  onConfirm={() => this.removeData(key)}\r\n                >\r\n                  <Button\r\n                    disabled={!this.canRemove(key)}\r\n                    shape=\"circle\"\r\n                    icon=\"delete\"\r\n                  />\r\n                </DeleteConfirm>\r\n              </MiddleWrapper>\r\n            </Col>\r\n          </Row>\r\n        ))}\r\n        <Row type=\"flex\" align=\"middle\">\r\n          <Col span={16}>Nowy zestaw danych</Col>\r\n          <Col span={4} />\r\n          <Col span={4}>\r\n            <MiddleWrapper>\r\n              <Tooltip placement=\"bottom\" title=\"Dodaj zestaw danych\">\r\n                <Button\r\n                  type=\"primary\"\r\n                  shape=\"circle\"\r\n                  icon=\"plus\"\r\n                  onClick={this.openDialogLoad}\r\n                />\r\n              </Tooltip>\r\n            </MiddleWrapper>\r\n          </Col>\r\n        </Row>\r\n        <Drawer\r\n          title=\"Dodaj nowy zestaw danych\"\r\n          placement=\"left\"\r\n          onClose={this.onCloseDialogLoad}\r\n          visible={this.state.openedDialogLoad}\r\n          width={480}\r\n          bodyStyle={{\r\n            flex: 1\r\n          }}\r\n        >\r\n          <LoadDataDialog\r\n            mode=\"load\"\r\n            onClose={this.onCloseDialogLoad}\r\n            loadData={this.loadData}\r\n          />\r\n        </Drawer>\r\n        {this.state.editedData !== null && (\r\n          <Drawer\r\n            title=\"Edycja zestawu danych\"\r\n            placement=\"left\"\r\n            onClose={this.onCloseDialogEdit}\r\n            visible={this.state.openedDialogEdit}\r\n            width={480}\r\n            bodyStyle={{\r\n              flex: 1\r\n            }}\r\n          >\r\n            <LoadDataDialog\r\n              mode=\"edit\"\r\n              onClose={this.onCloseDialogEdit}\r\n              editedData={data[this.state.editedData]}\r\n              updateData={value =>\r\n                this.updateData(this.state.editedData, value)\r\n              }\r\n            />\r\n          </Drawer>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoadData;\r\n","import React, { Component } from \"react\";\r\n// imported elements\r\n// css\r\nimport \"../../css/Common/ColorSelect.css\";\r\n// ant.design\r\nimport { Select } from \"antd\";\r\nconst { Option } = Select;\r\n\r\nconst colors = [\r\n  {\r\n    description: \"Czarny\",\r\n    color: \"black\"\r\n  },\r\n  {\r\n    description: \"Niebieski\",\r\n    color: \"blue\"\r\n  },\r\n  {\r\n    description: \"Czerwony\",\r\n    color: \"red\"\r\n  }\r\n];\r\n\r\nexport default class ColorSelect extends Component {\r\n  render() {\r\n    return (\r\n      <Select placeholder=\"Kolor linii\" {...this.props}>\r\n        {colors.map((e, i) => (\r\n          <Option key={i} value={e.color}>\r\n            <div>\r\n              <div\r\n                className=\"ColorSelectColor\"\r\n                style={{ background: e.color }}\r\n              />\r\n              <span>{e.description}</span>\r\n            </div>\r\n          </Option>\r\n        ))}\r\n      </Select>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n// imported elements\r\n// css\r\nimport \"../../css/Common/VisibilitySwitch.css\";\r\n// ant.design\r\n\r\nconst VisibilitySwitch = ({ visible, ...props }) => (\r\n  <div className={visible ? \"Visible\" : \"Hidden\"} {...props} />\r\n);\r\n\r\nexport default VisibilitySwitch;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { head } from \"lodash\";\r\n// imported elements\r\nimport ColorSelect from \"../../../Common/ColorSelect\";\r\nimport VisibilitySwitch from \"../../../Common/VisibilitySwitch\";\r\n// ant.design\r\nimport {\r\n  Checkbox,\r\n  Form,\r\n  Input,\r\n  InputNumber,\r\n  Row,\r\n  Col,\r\n  TreeSelect,\r\n  Button,\r\n  Select\r\n} from \"antd\";\r\nconst { Option } = Select;\r\n\r\n// TODO zastosowac MODES\r\n\r\nclass PathSelect extends Component {\r\n  static propTypes = {\r\n    loadedData: PropTypes.object.isRequired\r\n  };\r\n\r\n  genTreeData = () => {\r\n    const data = this.props.loadedData;\r\n    return Object.keys(data).map(e => ({\r\n      title: data[e].fields.description.value,\r\n      value: `${e}`,\r\n      selectable: false,\r\n      key: `${e}`,\r\n      children: data[e].loadedKeys.map(set => ({\r\n        title: `${data[e].fields.description.value}: ${set.description}`,\r\n        value: `${e}-${set.key}`,\r\n        key: `${e}-${set.key}`\r\n      }))\r\n    }));\r\n  };\r\n  render() {\r\n    return (\r\n      <TreeSelect\r\n        dropdownStyle={{ maxHeight: 400, overflow: \"auto\" }}\r\n        treeData={this.genTreeData()}\r\n        placeholder=\"Wybierz załadowane dane\"\r\n        treeDefaultExpandAll\r\n        {...this.props}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nclass AxisSelect extends Component {\r\n  static propTypes = {\r\n    data: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        description: PropTypes.string.isRequired\r\n      })\r\n    )\r\n  };\r\n  render() {\r\n    const { data } = this.props;\r\n    return (\r\n      <Select {...this.props}>\r\n        {data.map(({ id, description }) => (\r\n          <Option key={id} value={id}>\r\n            {description}\r\n          </Option>\r\n        ))}\r\n      </Select>\r\n    );\r\n  }\r\n}\r\n\r\nclass UseDataForm extends Component {\r\n  static propTypes = {\r\n    mode: PropTypes.oneOf([\"edit\", \"load\"]).isRequired,\r\n    editedData: PropTypes.object,\r\n    loadedData: PropTypes.object,\r\n    onClose: PropTypes.func,\r\n    loadData: PropTypes.func,\r\n    config: PropTypes.object.isRequired,\r\n    updateData: PropTypes.func\r\n  };\r\n\r\n  handleSubmit = async e => {\r\n    e.preventDefault();\r\n\r\n    this.props.form.validateFields((err, fieldsValue) => {\r\n      if (err) {\r\n        return;\r\n      }\r\n      if (this.props.mode === \"edit\") {\r\n        this.props.onClose();\r\n      } else {\r\n        this.props.loadData({\r\n          fields: Object.keys(fieldsValue).reduce(\r\n            (prev, field) => ({\r\n              ...prev,\r\n              [field]: {\r\n                value: fieldsValue[field]\r\n              }\r\n            }),\r\n            {}\r\n          )\r\n        });\r\n        this.handleReset();\r\n        this.props.onClose();\r\n      }\r\n    });\r\n  };\r\n\r\n  handleReset = () => {\r\n    this.props.form.resetFields();\r\n  };\r\n\r\n  handleAxisData = () => {\r\n    const { config } = this.props;\r\n    console.log(\"handleAxisData\", this.props);\r\n    const axisData = Object.keys(config.yAxises).map(key => ({\r\n      id: key,\r\n      description: config.yAxises[key].description.value\r\n    }));\r\n    return {\r\n      axisData,\r\n      defaultAxisData: axisData[0].id\r\n    };\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator, getFieldValue } = this.props.form;\r\n    const isEdit = this.props.mode === \"edit\";\r\n    const { axisData, defaultAxisData } = this.handleAxisData();\r\n    return (\r\n      <Form\r\n        layout=\"vertical\"\r\n        onSubmit={this.handleSubmit}\r\n        hideRequiredMark={true}\r\n        style={{\r\n          height: \"100%\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\"\r\n        }}\r\n      >\r\n        <div className=\"LoadDataDialogInner\">\r\n          <Form.Item label=\"Opis danych\">\r\n            {getFieldDecorator(\"description\", {\r\n              validateTrigger: [\"onChange\", \"onBlur\"],\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"Proszę podać opis zestawu\"\r\n                },\r\n                {\r\n                  message: \"Wymagana nazwa o długości od 3 do 30 znaków\",\r\n                  whitespace: true,\r\n                  min: 3,\r\n                  max: 30\r\n                }\r\n              ]\r\n            })(<Input placeholder=\"Nazwa zestawu danych\" />)}\r\n          </Form.Item>\r\n          <Form.Item label=\"Wybór danych\">\r\n            {getFieldDecorator(\"dataSource\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"Proszę wybrać załadowane dane\"\r\n                }\r\n              ]\r\n            })(<PathSelect loadedData={this.props.loadedData} />)}\r\n          </Form.Item>\r\n          <Form.Item label=\"Oś odniesienia\">\r\n            {getFieldDecorator(\"axis\", {\r\n              validateTrigger: [\"onChange\"],\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"Wybierz rodzaj zakresu czasu\"\r\n                }\r\n              ],\r\n              initialValue: defaultAxisData\r\n            })(<AxisSelect data={axisData} />)}\r\n          </Form.Item>\r\n          <Form.Item>\r\n            {getFieldDecorator(\"showRegresion\", {\r\n              initialValue: false,\r\n              valuePropName: \"checked\"\r\n            })(<Checkbox>Pokaż linię regresji</Checkbox>)}\r\n          </Form.Item>\r\n          <Row gutter={24}>\r\n            <Col span={12}>\r\n              <Form.Item label=\"Grubość linii\">\r\n                {getFieldDecorator(\"lineWidth\", {\r\n                  initialValue: 2,\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      type: \"number\",\r\n                      min: 1,\r\n                      max: 6,\r\n                      message: \"Wybierz liczbę z zakresu od 1 do 6\"\r\n                    }\r\n                  ]\r\n                })(\r\n                  <InputNumber\r\n                    className=\"AutoInputNumber\"\r\n                    min={1}\r\n                    max={6}\r\n                    step={1}\r\n                    precision={0}\r\n                  />\r\n                )}\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item label=\"Kolor linii\">\r\n                {getFieldDecorator(\"lineColor\", {\r\n                  initialValue: \"black\",\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"Wybierz kolor linii\"\r\n                    }\r\n                  ]\r\n                })(<ColorSelect />)}\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Form.Item>\r\n            {getFieldDecorator(\"dashed\", {\r\n              initialValue: false,\r\n              valuePropName: \"checked\"\r\n            })(<Checkbox>Użyj przerywanej linii</Checkbox>)}\r\n          </Form.Item>\r\n          <VisibilitySwitch visible={getFieldValue(\"dashed\")}>\r\n            <Row gutter={24}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Długość kreski\">\r\n                  {getFieldDecorator(\"dashLength\", {\r\n                    initialValue: 5,\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        type: \"number\",\r\n                        min: 4,\r\n                        max: 15,\r\n                        message: \"Wybierz liczbę z zakresu od 4 do 15\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <InputNumber\r\n                      className=\"AutoInputNumber\"\r\n                      min={4}\r\n                      max={15}\r\n                      step={1}\r\n                      precision={0}\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Długość przerwy\">\r\n                  {getFieldDecorator(\"dashSpacing\", {\r\n                    initialValue: 5,\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        type: \"number\",\r\n                        min: 4,\r\n                        max: 15,\r\n                        message: \"Wybierz liczbę z zakresu od 4 do 15\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <InputNumber\r\n                      className=\"AutoInputNumber\"\r\n                      min={4}\r\n                      max={15}\r\n                      step={1}\r\n                      precision={0}\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n          </VisibilitySwitch>\r\n        </div>\r\n        <div className=\"LoadDataDialogSubmit\">\r\n          {!isEdit && (\r\n            <Button onClick={this.handleReset} style={{ marginRight: 16 }}>\r\n              Zresetuj\r\n            </Button>\r\n          )}\r\n          <Button\r\n            type=\"primary\"\r\n            icon={isEdit ? \"redo\" : \"plus\"}\r\n            htmlType=\"submit\"\r\n          >\r\n            {isEdit ? \"Aktualizuj\" : \"Dodaj dane\"}\r\n          </Button>\r\n        </div>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst updateValidationRules = {\r\n  description: [value => value.length >= 3, value => value.length <= 30],\r\n  lineWidth: [value => value >= 1, value => value <= 6],\r\n  dashLength: [value => value >= 4, value => value <= 15],\r\n  dashSpacing: [value => value >= 4, value => value <= 15]\r\n};\r\n\r\nconst validateField = (field, value) =>\r\n  !updateValidationRules[field] ||\r\n  updateValidationRules[field].reduce(\r\n    (result, rule) => result && rule(value),\r\n    true\r\n  );\r\n\r\nconst validateFields = fields =>\r\n  Object.keys(fields).reduce(\r\n    (prev, field) => prev && validateField(field, fields[field].value),\r\n    true\r\n  );\r\n\r\nconst WrappedUseDataForm = Form.create({ name: \"use_data_form\" })(UseDataForm);\r\nconst WrappedEditUseDataForm = Form.create({\r\n  name: \"edit_use_data_form\",\r\n  onFieldsChange: (props, changedFields) => {\r\n    if (!validateFields(changedFields)) {\r\n      return console.warn(\"Form not valid, abort update\");\r\n    }\r\n    props.onChange(changedFields);\r\n  },\r\n  mapPropsToFields(props) {\r\n    return Object.keys(props.editedData).reduce(\r\n      (prev, key) => ({\r\n        ...prev,\r\n        [key]: Form.createFormField({ ...props.editedData[key] })\r\n      }),\r\n      {}\r\n    );\r\n  }\r\n})(UseDataForm);\r\n\r\nclass UseDataDialog extends Component {\r\n  static propTypes = {\r\n    mode: PropTypes.string,\r\n    editedData: PropTypes.object,\r\n    loadedData: PropTypes.object,\r\n    config: PropTypes.object,\r\n    onClose: PropTypes.func,\r\n    loadData: PropTypes.func,\r\n    updateData: PropTypes.func\r\n  };\r\n\r\n  onUpdateFields = changedFields => {\r\n    // TODO validacja - przez async wymaga recznego napisania\r\n    const { editedData, updateData } = this.props;\r\n    if (changedFields !== editedData.fields) {\r\n      console.log({\r\n        ...editedData,\r\n        fields: { ...editedData.fields, ...changedFields }\r\n      });\r\n      updateData({\r\n        ...editedData,\r\n        fields: { ...editedData.fields, ...changedFields }\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      mode,\r\n      editedData,\r\n      loadedData,\r\n      onClose,\r\n      loadData,\r\n      config,\r\n      updateData\r\n    } = this.props;\r\n    return (\r\n      <div className=\"LoadDataDialog\">\r\n        {mode === \"edit\" ? (\r\n          <WrappedEditUseDataForm\r\n            mode=\"edit\"\r\n            onClose={onClose}\r\n            updateData={updateData}\r\n            editedData={editedData.fields}\r\n            loadedData={loadedData}\r\n            config={config}\r\n            onChange={this.onUpdateFields}\r\n          />\r\n        ) : (\r\n          <WrappedUseDataForm\r\n            mode=\"load\"\r\n            onClose={onClose}\r\n            config={config}\r\n            loadData={loadData}\r\n            loadedData={loadedData}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UseDataDialog;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// imported elements\r\nimport DeleteConfirm from \"../../Common/DeleteConfirm\";\r\nimport UseDataDialog from \"./Dialogs/UseDataDialog\";\r\n// ant.design\r\nimport { Button, Col, Drawer, Row, Tooltip } from \"antd\";\r\n\r\nconst MiddleWrapper = ({ ...props }) => (\r\n  <div className=\"MiddleWrapper\" {...props} />\r\n);\r\n\r\nclass UseData extends Component {\r\n  static propTypes = {\r\n    data: PropTypes.object.isRequired,\r\n    loadedData: PropTypes.object.isRequired,\r\n    config: PropTypes.object.isRequired,\r\n    update: PropTypes.func.isRequired\r\n  };\r\n\r\n  state = {\r\n    openedDialogLoad: false,\r\n    openedDialogEdit: false,\r\n    editedData: null\r\n  };\r\n\r\n  onCloseDialogLoad = () => {\r\n    this.setState({ openedDialogLoad: false });\r\n  };\r\n  onCloseDialogEdit = () => {\r\n    this.setState({\r\n      openedDialogEdit: false,\r\n      editedData: null\r\n    });\r\n  };\r\n  openDialogLoad = () => {\r\n    this.setState({ openedDialogLoad: true });\r\n  };\r\n  openDialogEdit = key => {\r\n    this.setState({\r\n      openedDialogEdit: true,\r\n      editedData: key\r\n    });\r\n  };\r\n\r\n  newIndex = () =>\r\n    Object.keys(this.props.data).reduce(\r\n      (prev, curr) => Math.max(prev, curr),\r\n      -1\r\n    ) + 1;\r\n\r\n  loadData = newData => {\r\n    const { data, update } = this.props;\r\n    update({ ...data, [this.newIndex()]: newData });\r\n  };\r\n\r\n  removeData = key => {\r\n    const { data, update } = this.props;\r\n    const newValue = { ...data };\r\n    delete newValue[key];\r\n    update(newValue);\r\n  };\r\n\r\n  updateData = (key, value) => {\r\n    const { data, update } = this.props;\r\n    update({ ...data, [key]: value });\r\n  };\r\n\r\n  render() {\r\n    const { data, loadedData, config } = this.props;\r\n    return (\r\n      <div className=\"LoadData\">\r\n        {Object.keys(data).map(key => (\r\n          <Row type=\"flex\" align=\"middle\" key={key}>\r\n            <Col span={16}>{data[key].fields.description.value}</Col>\r\n            <Col span={4}>\r\n              <MiddleWrapper>\r\n                <Tooltip placement=\"top\" title=\"Ustawienia\">\r\n                  <Button\r\n                    shape=\"circle\"\r\n                    icon=\"setting\"\r\n                    onClick={() => this.openDialogEdit(key)}\r\n                  />\r\n                </Tooltip>\r\n              </MiddleWrapper>\r\n            </Col>\r\n            <Col span={4}>\r\n              <MiddleWrapper>\r\n                <DeleteConfirm\r\n                  title=\"Usuń dane z wykresu\"\r\n                  remove=\"Usuń z wykresu\"\r\n                  canRemove={true}\r\n                  onConfirm={() => this.removeData(key)}\r\n                >\r\n                  <Button shape=\"circle\" icon=\"delete\" />\r\n                </DeleteConfirm>\r\n              </MiddleWrapper>\r\n            </Col>\r\n          </Row>\r\n        ))}\r\n        <Row type=\"flex\" align=\"middle\">\r\n          <Col span={16}>Nowe dane na wykresie</Col>\r\n          <Col span={4} />\r\n          <Col span={4}>\r\n            <MiddleWrapper>\r\n              <Tooltip placement=\"bottom\" title=\"Dodaj dane do wykresu\">\r\n                <Button\r\n                  type=\"primary\"\r\n                  shape=\"circle\"\r\n                  icon=\"plus\"\r\n                  onClick={this.openDialogLoad}\r\n                />\r\n              </Tooltip>\r\n            </MiddleWrapper>\r\n          </Col>\r\n        </Row>\r\n        <Drawer\r\n          title=\"Dodaj nowe dane do wykresu\"\r\n          placement=\"left\"\r\n          onClose={this.onCloseDialogLoad}\r\n          visible={this.state.openedDialogLoad}\r\n          width={480}\r\n          bodyStyle={{\r\n            flex: 1\r\n          }}\r\n        >\r\n          <UseDataDialog\r\n            mode=\"load\"\r\n            config={config}\r\n            onClose={this.onCloseDialogLoad}\r\n            loadData={this.loadData}\r\n            loadedData={loadedData}\r\n          />\r\n        </Drawer>\r\n        {this.state.editedData !== null && (\r\n          <Drawer\r\n            title=\"Edycja wyświetlanych danych\"\r\n            placement=\"left\"\r\n            onClose={this.onCloseDialogEdit}\r\n            visible={this.state.openedDialogEdit}\r\n            width={480}\r\n            bodyStyle={{\r\n              flex: 1\r\n            }}\r\n          >\r\n            <UseDataDialog\r\n              mode=\"edit\"\r\n              onClose={this.onCloseDialogEdit}\r\n              editedData={data[this.state.editedData]}\r\n              loadedData={loadedData}\r\n              config={config}\r\n              updateData={value =>\r\n                this.updateData(this.state.editedData, value)\r\n              }\r\n            />\r\n          </Drawer>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UseData;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// imported elements\r\nimport ColorSelect from \"../../../Common/ColorSelect\";\r\nimport { MODES } from \"../common\";\r\n// ant.design\r\nimport { Checkbox, Form, Row, Col, Input, Button, Select } from \"antd\";\r\nconst { Option } = Select;\r\n\r\nclass AxisSideSelect extends Component {\r\n  render() {\r\n    return (\r\n      <Select placeholder=\"Pozycja na wykresie\" {...this.props}>\r\n        <Option key=\"left\" value=\"left\">\r\n          Po lewej stronie\r\n        </Option>\r\n        <Option key=\"right\" value=\"right\">\r\n          Po prawej stronie\r\n        </Option>\r\n      </Select>\r\n    );\r\n  }\r\n}\r\n\r\nclass AxisForm extends Component {\r\n  static propTypes = {\r\n    mode: PropTypes.oneOf([MODES.EDIT, MODES.LOAD]).isRequired,\r\n    editedAxis: PropTypes.object,\r\n    onClose: PropTypes.func,\r\n    loadData: PropTypes.func,\r\n    updateData: PropTypes.func\r\n  };\r\n\r\n  handleReset = () => {\r\n    this.props.form.resetFields();\r\n  };\r\n\r\n  handleSubmit = async e => {\r\n    e.preventDefault();\r\n\r\n    this.props.form.validateFields((err, fieldsValue) => {\r\n      if (err) {\r\n        return;\r\n      }\r\n      ({\r\n        [MODES.LOAD]: () => {\r\n          this.props.loadData(\r\n            Object.keys(fieldsValue).reduce(\r\n              (prev, field) => ({\r\n                ...prev,\r\n                [field]: {\r\n                  value: fieldsValue[field]\r\n                }\r\n              }),\r\n              {}\r\n            )\r\n          );\r\n          this.handleReset();\r\n          this.props.onClose();\r\n        },\r\n        [MODES.EDIT]: () => {\r\n          this.props.onClose();\r\n        }\r\n      }[this.props.mode]());\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <Form\r\n        layout=\"vertical\"\r\n        onSubmit={this.handleSubmit}\r\n        hideRequiredMark={true}\r\n        style={{\r\n          height: \"100%\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\"\r\n        }}\r\n      >\r\n        <div className=\"LoadDataDialogInner\">\r\n          <Form.Item>\r\n            {getFieldDecorator(\"showAxis\", {\r\n              initialValue: true,\r\n              valuePropName: \"checked\"\r\n            })(<Checkbox>Pokaż oś na wykresie</Checkbox>)}\r\n          </Form.Item>\r\n          <Form.Item label=\"Opis osi\">\r\n            {getFieldDecorator(\"description\", {\r\n              validateTrigger: [\"onChange\", \"onBlur\"],\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message:\r\n                    \"Proszę podać nazwę osi, która pozwoli na identyfikację\"\r\n                },\r\n                {\r\n                  message: \"Wymagana nazwa o długości od 2 do 20 znaków\",\r\n                  whitespace: true,\r\n                  min: 2,\r\n                  max: 20\r\n                }\r\n              ]\r\n            })(<Input placeholder=\"Opis osi\" />)}\r\n          </Form.Item>\r\n          <Form.Item>\r\n            {getFieldDecorator(\"showDescription\", {\r\n              initialValue: true,\r\n              valuePropName: \"checked\"\r\n            })(<Checkbox>Pokaż nazwę osi na wykresie</Checkbox>)}\r\n          </Form.Item>\r\n          <Form.Item label=\"Jednostka\">\r\n            {getFieldDecorator(\"unit\", {\r\n              initialValue: \"\",\r\n              rules: [\r\n                {\r\n                  message: \"Maksymalna długość to 10 znaków\",\r\n                  whitespace: true,\r\n                  max: 10\r\n                }\r\n              ]\r\n            })(<Input placeholder=\"Jednostka\" />)}\r\n          </Form.Item>\r\n          <Row gutter={24}>\r\n            <Col span={12}>\r\n              <Form.Item label=\"Miejsce wyświetlania\">\r\n                {getFieldDecorator(\"side\", {\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"Wybierz miejsce wyświetlania\"\r\n                    }\r\n                  ],\r\n                  initialValue: \"left\"\r\n                })(<AxisSideSelect />)}\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item label=\"Kolor osi\">\r\n                {getFieldDecorator(\"color\", {\r\n                  validateTrigger: [\"onChange\"],\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"Wybierz kolor osi\"\r\n                    }\r\n                  ],\r\n                  initialValue: \"black\"\r\n                })(<ColorSelect />)}\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Form.Item\r\n            label=\"Zarządzanie zakresem danych\"\r\n            help=\"Aby ustawić automatyczne wyliczanie, wpisz auto\"\r\n          >\r\n            <Row gutter={24}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Od\">\r\n                  {getFieldDecorator(\"rangeFrom\", {\r\n                    initialValue: \"auto\",\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: \"Proszę podać początek zakresu\"\r\n                      }\r\n                    ]\r\n                  })(<Input placeholder=\"Początek zakresu\" />)}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Do\">\r\n                  {getFieldDecorator(\"rangeTo\", {\r\n                    initialValue: \"auto\",\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: \"Proszę podać koniec zakresu\"\r\n                      }\r\n                    ]\r\n                  })(<Input placeholder=\"Początek zakresu\" />)}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Krok\">\r\n                  {getFieldDecorator(\"rangeSpan\", {\r\n                    initialValue: \"auto\",\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message:\r\n                          \"Proszę podać krok pomiędzy punktami odniesienia\"\r\n                      }\r\n                    ]\r\n                  })(<Input placeholder=\"Krok\" />)}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n          </Form.Item>\r\n        </div>\r\n        <div className=\"LoadDataDialogSubmit\">\r\n          {\r\n            {\r\n              [MODES.LOAD]: (\r\n                <Fragment>\r\n                  <Button\r\n                    className=\"ResetFormButton\"\r\n                    onClick={this.handleReset}\r\n                  >\r\n                    Zresetuj\r\n                  </Button>\r\n                  <Button type=\"primary\" icon=\"plus\" htmlType=\"submit\">\r\n                    Dodaj\r\n                  </Button>\r\n                </Fragment>\r\n              ),\r\n              [MODES.EDIT]: (\r\n                <Button type=\"primary\" icon=\"redo\" htmlType=\"submit\">\r\n                  Aktualizuj\r\n                </Button>\r\n              )\r\n            }[this.props.mode]\r\n          }\r\n        </div>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst updateValidationRules = {\r\n  description: [value => value.length >= 2, value => value.length <= 20],\r\n  unit: [value => value.length <= 10]\r\n};\r\n\r\nconst validateField = (field, value) =>\r\n  !updateValidationRules[field] ||\r\n  updateValidationRules[field].reduce(\r\n    (result, rule) => result && rule(value),\r\n    true\r\n  );\r\n\r\nconst validateFields = fields =>\r\n  Object.keys(fields).reduce(\r\n    (prev, field) => prev && validateField(field, fields[field].value),\r\n    true\r\n  );\r\n\r\nconst WrappedEditAxisForm = Form.create({\r\n  name: \"edit_axis_form\",\r\n  onFieldsChange(props, changedFields) {\r\n    if (!validateFields(changedFields)) {\r\n      return console.warn(\"Form not valid, abort update\");\r\n    }\r\n    props.onChange(changedFields);\r\n  },\r\n  mapPropsToFields(props) {\r\n    return Object.keys(props.editedAxis).reduce(\r\n      (prev, key) => ({\r\n        ...prev,\r\n        [key]: Form.createFormField({ ...props.editedAxis[key] })\r\n      }),\r\n      {}\r\n    );\r\n  }\r\n})(AxisForm);\r\n\r\nconst WrappedLoadAxisForm = Form.create({\r\n  name: \"load_axis_form\"\r\n})(AxisForm);\r\n\r\nclass AxisDialog extends Component {\r\n  static propTypes = {\r\n    mode: PropTypes.oneOf([\"load\", \"edit\"]).isRequired,\r\n    editedAxis: PropTypes.object,\r\n    onClose: PropTypes.func,\r\n    loadData: PropTypes.func,\r\n    updateData: PropTypes.func\r\n  };\r\n\r\n  onUpdateFields = changedFields => {\r\n    const { editedAxis, updateData } = this.props;\r\n    if (changedFields !== editedAxis) {\r\n      console.log({\r\n        ...editedAxis,\r\n        ...changedFields\r\n      });\r\n      updateData({\r\n        ...editedAxis,\r\n        ...changedFields\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { mode, editedAxis, loadData, updateData, onClose } = this.props;\r\n    return (\r\n      <div className=\"LoadDataDialog\">\r\n        {mode === \"edit\" ? (\r\n          <WrappedEditAxisForm\r\n            mode={mode}\r\n            onClose={onClose}\r\n            updateData={updateData}\r\n            editedAxis={editedAxis}\r\n            onChange={this.onUpdateFields}\r\n          />\r\n        ) : (\r\n          <WrappedLoadAxisForm\r\n            mode={mode}\r\n            onClose={onClose}\r\n            loadData={loadData}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AxisDialog;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// imported elements\r\nimport ColorSelect from \"../../../Common/ColorSelect\";\r\n// ant.design\r\nimport { Checkbox, Form, Row, Col, Input, InputNumber, Button } from \"antd\";\r\n\r\nclass XAxisForm extends Component {\r\n  static propTypes = {\r\n    editedAxis: PropTypes.object,\r\n    onClose: PropTypes.func,\r\n    updateData: PropTypes.func\r\n  };\r\n\r\n  render() {\r\n    const { onClose } = this.props;\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <Form\r\n        layout=\"vertical\"\r\n        onSubmit={this.handleSubmit}\r\n        hideRequiredMark={true}\r\n        style={{\r\n          height: \"100%\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\"\r\n        }}\r\n      >\r\n        <div className=\"LoadDataDialogInner\">\r\n          <Form.Item label=\"Opis osi\">\r\n            {getFieldDecorator(\"description\", {\r\n              validateTrigger: [\"onChange\", \"onBlur\"],\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message:\r\n                    \"Proszę podać nazwę osi, która pozwoli na identyfikację\"\r\n                },\r\n                {\r\n                  message: \"Wymagana nazwa o długości od 2 do 20 znaków\",\r\n                  whitespace: true,\r\n                  min: 2,\r\n                  max: 20\r\n                }\r\n              ],\r\n              initialValue: \"Czas\"\r\n            })(<Input placeholder=\"Opis osi\" />)}\r\n          </Form.Item>\r\n          <Form.Item>\r\n            {getFieldDecorator(\"showDescription\", {\r\n              initialValue: true,\r\n              valuePropName: \"checked\"\r\n            })(<Checkbox>Pokaż nazwę osi na wykresie</Checkbox>)}\r\n          </Form.Item>\r\n          <Row gutter={24}>\r\n            <Col span={12}>\r\n              <Form.Item label=\"Kolor osi\">\r\n                {getFieldDecorator(\"color\", {\r\n                  validateTrigger: [\"onChange\"],\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"Wybierz kolor osi\"\r\n                    }\r\n                  ],\r\n                  initialValue: \"black\"\r\n                })(<ColorSelect />)}\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Form.Item label=\"Zarządzanie zakresem czasu\">\r\n            <Row gutter={24}>\r\n              <Col span={12}>\r\n                <Form.Item\r\n                  label=\"Minimalna ilość dat na osi\"\r\n                  help=\"Wyświetlna liczba może być mniejsza dla krótkich okresów\"\r\n                >\r\n                  {getFieldDecorator(\"datesNumber\", {\r\n                    initialValue: 5,\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        type: \"number\",\r\n                        min: 2,\r\n                        max: 8,\r\n                        message: \"Wybierz liczbę z zakresu od 2 do 8\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <InputNumber\r\n                      className=\"AutoInputNumber\"\r\n                      min={2}\r\n                      max={8}\r\n                      step={1}\r\n                      precision={0}\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item>\r\n                  {getFieldDecorator(\"withTime\", {\r\n                    initialValue: false,\r\n                    valuePropName: \"checked\"\r\n                  })(<Checkbox>Pokaż godzinę</Checkbox>)}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n          </Form.Item>\r\n        </div>\r\n        <div className=\"LoadDataDialogSubmit\">\r\n          <Button type=\"primary\" icon=\"redo\" onClick={onClose}>\r\n            Aktualizuj\r\n          </Button>\r\n        </div>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst updateValidationRules = {\r\n  description: [value => value.length >= 2, value => value.length <= 20],\r\n  datesNumber: [value => value >= 2, value => value <= 8]\r\n};\r\n\r\nconst validateField = (field, value) =>\r\n  !updateValidationRules[field] ||\r\n  updateValidationRules[field].reduce(\r\n    (result, rule) => result && rule(value),\r\n    true\r\n  );\r\n\r\nconst validateFields = fields =>\r\n  Object.keys(fields).reduce(\r\n    (prev, field) => prev && validateField(field, fields[field].value),\r\n    true\r\n  );\r\n\r\nconst WrappedXAxisForm = Form.create({\r\n  name: \"edit_xaxis_form\",\r\n  onFieldsChange(props, changedFields) {\r\n    if (!validateFields(changedFields)) {\r\n      return console.warn(\"Form not valid, abort update\");\r\n    }\r\n    props.onChange(changedFields);\r\n  },\r\n  mapPropsToFields(props) {\r\n    return Object.keys(props.editedAxis).reduce(\r\n      (prev, key) => ({\r\n        ...prev,\r\n        [key]: Form.createFormField({ ...props.editedAxis[key] })\r\n      }),\r\n      {}\r\n    );\r\n  }\r\n})(XAxisForm);\r\n\r\nclass XAxisDialog extends Component {\r\n  static propTypes = {\r\n    editedAxis: PropTypes.object,\r\n    onClose: PropTypes.func,\r\n    updateData: PropTypes.func\r\n  };\r\n\r\n  onUpdateFields = changedFields => {\r\n    const { editedAxis, updateData } = this.props;\r\n    if (changedFields !== editedAxis) {\r\n      console.log({\r\n        ...editedAxis,\r\n        ...changedFields\r\n      });\r\n      updateData({\r\n        ...editedAxis,\r\n        ...changedFields\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { editedAxis, updateData, onClose } = this.props;\r\n    return (\r\n      <div className=\"LoadDataDialog\">\r\n        <WrappedXAxisForm\r\n          editedAxis={editedAxis}\r\n          onClose={onClose}\r\n          updateData={updateData}\r\n          onChange={this.onUpdateFields}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default XAxisDialog;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// imported elements\r\n// ant.design\r\nimport { Checkbox, Form, Input, Button, Slider } from \"antd\";\r\n\r\nclass EditSettingsForm extends Component {\r\n  static propTypes = {\r\n    settings: PropTypes.object.isRequired,\r\n    onClose: PropTypes.func\r\n  };\r\n\r\n  handleReset = () => {\r\n    this.props.form.resetFields();\r\n    this.props.form.validateFields();\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator, getFieldValue } = this.props.form;\r\n    return (\r\n      <Form\r\n        layout=\"vertical\"\r\n        hideRequiredMark={true}\r\n        style={{\r\n          height: \"100%\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\"\r\n        }}\r\n      >\r\n        <div className=\"LoadDataDialogInner\">\r\n          <Form.Item label=\"Tytuł wykresu\">\r\n            {getFieldDecorator(\"title\", {\r\n              initialValue: \"\"\r\n            })(<Input placeholder=\"Tytuł wykresu\" />)}\r\n          </Form.Item>\r\n          <Form.Item>\r\n            {getFieldDecorator(\"showTitle\", {\r\n              initialValue: false,\r\n              valuePropName: \"checked\"\r\n            })(<Checkbox>Pokaż tytuł na wykresie</Checkbox>)}\r\n          </Form.Item>\r\n          <Form.Item>\r\n            {getFieldDecorator(\"showLegend\", {\r\n              initialValue: false,\r\n              valuePropName: \"checked\"\r\n            })(<Checkbox>Pokaż legendę na wykresie</Checkbox>)}\r\n          </Form.Item>\r\n          <Form.Item label={`Szerokość (${getFieldValue(\"width\")}%)`}>\r\n            {getFieldDecorator(\"width\", {\r\n              initialValue: 100,\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  type: \"number\",\r\n                  min: 10,\r\n                  max: 100,\r\n                  message: \"Wybierz liczbę z zakresu od 10 do 100\"\r\n                }\r\n              ]\r\n            })(<Slider step={5} min={10} max={100} />)}\r\n          </Form.Item>\r\n          <Form.Item label={`Wysokość (${getFieldValue(\"height\")}%)`}>\r\n            {getFieldDecorator(\"height\", {\r\n              initialValue: 60,\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  type: \"number\",\r\n                  min: 10,\r\n                  step: 5,\r\n                  max: 100,\r\n                  message: \"Wybierz liczbę z zakresu od 10 do 100\"\r\n                }\r\n              ]\r\n            })(<Slider step={5} min={10} max={100} />)}\r\n          </Form.Item>\r\n        </div>\r\n        <div className=\"LoadDataDialogSubmit\">\r\n          <Button onClick={this.handleReset} style={{ marginRight: 16 }}>\r\n            Zresetuj\r\n          </Button>\r\n          <Button type=\"primary\" onClick={this.props.onClose}>\r\n            Zakończ\r\n          </Button>\r\n        </div>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst updateValidationRules = {\r\n  width: [value => value >= 10, value => value <= 100],\r\n  height: [value => value >= 10, value => value <= 100]\r\n};\r\n\r\nconst validateField = (field, value) =>\r\n  !updateValidationRules[field] ||\r\n  updateValidationRules[field].reduce(\r\n    (result, rule) => result && rule(value),\r\n    true\r\n  );\r\n\r\nconst validateFields = fields =>\r\n  Object.keys(fields).reduce(\r\n    (prev, field) => prev && validateField(field, fields[field].value),\r\n    true\r\n  );\r\n\r\nconst WrappedEditSettingsForm = Form.create({\r\n  name: \"edit_settings_form\",\r\n  onFieldsChange(props, changedFields) {\r\n    if (!validateFields(changedFields)) {\r\n      return console.warn(\"Form not valid, abort update\");\r\n    }\r\n    props.onChange(changedFields);\r\n  },\r\n  mapPropsToFields(props) {\r\n    return Object.keys(props.settings).reduce(\r\n      (prev, key) => ({\r\n        ...prev,\r\n        [key]: Form.createFormField({ ...props.settings[key] })\r\n      }),\r\n      {}\r\n    );\r\n  }\r\n})(EditSettingsForm);\r\n\r\nclass EditSettingsDialog extends Component {\r\n  static propTypes = {\r\n    settings: PropTypes.object,\r\n    onClose: PropTypes.func,\r\n    updateData: PropTypes.func\r\n  };\r\n\r\n  onUpdateFields = changedFields => {\r\n    const { settings, updateData } = this.props;\r\n    if (changedFields !== settings) {\r\n      console.log({\r\n        ...settings,\r\n        ...changedFields\r\n      });\r\n      updateData({\r\n        ...settings,\r\n        ...changedFields\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { settings, onClose } = this.props;\r\n    return (\r\n      <div className=\"LoadDataDialog\">\r\n        <WrappedEditSettingsForm\r\n          onClose={onClose}\r\n          settings={settings}\r\n          onChange={this.onUpdateFields}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditSettingsDialog;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { find } from \"lodash\";\r\n// imported elements\r\nimport AxisDialog from \"./Dialogs/AxisDialog\";\r\nimport XAxisDialog from \"./Dialogs/XAxisDialog\";\r\nimport DeleteConfirm from \"../../Common/DeleteConfirm\";\r\n// ant.design\r\nimport { Button, Col, Drawer, Row, Tooltip } from \"antd\";\r\nimport EditSettingsDialog from \"./Dialogs/EditSettingsDialog\";\r\n\r\nconst MiddleWrapper = ({ ...props }) => (\r\n  <div className=\"MiddleWrapper\" {...props} />\r\n);\r\n\r\nclass ConfigChart extends Component {\r\n  static propTypes = {\r\n    config: PropTypes.shape({\r\n      settings: PropTypes.object,\r\n      xAxis: PropTypes.object,\r\n      yAxises: PropTypes.object\r\n    }).isRequired,\r\n    usedData: PropTypes.object.isRequired,\r\n    update: PropTypes.func.isRequired\r\n  };\r\n\r\n  state = {\r\n    openedDialogSettings: false,\r\n    openedDialogXAxis: false,\r\n    openedDialogAddAxis: false,\r\n    openedDialogEditAxis: false,\r\n    editedAxis: null\r\n  };\r\n\r\n  onCloseDialogSettings = () => {\r\n    this.setState({ openedDialogSettings: false });\r\n  };\r\n  onCloseDialogXAxis = () => {\r\n    this.setState({ openedDialogXAxis: false });\r\n  };\r\n  onCloseDialogAddAxis = () => {\r\n    this.setState({ openedDialogAddAxis: false });\r\n  };\r\n  onCloseDialogEditAxis = () => {\r\n    this.setState({\r\n      openedDialogEditAxis: false,\r\n      editedAxis: null\r\n    });\r\n  };\r\n  openDialogSettings = () => {\r\n    this.setState({ openedDialogSettings: true });\r\n  };\r\n  openDialogXAxis = () => {\r\n    this.setState({ openedDialogXAxis: true });\r\n  };\r\n  openDialogAddAxis = () => {\r\n    this.setState({ openedDialogAddAxis: true });\r\n  };\r\n  openDialogEditAxis = axis => {\r\n    this.setState({\r\n      openedDialogEditAxis: true,\r\n      editedAxis: axis\r\n    });\r\n  };\r\n  newIndex = () =>\r\n    Object.keys(this.props.config.yAxises).reduce(\r\n      (prev, curr) => Math.max(prev, curr),\r\n      -1\r\n    ) + 1;\r\n\r\n  addAxis = newAxis => {\r\n    const { config, update } = this.props;\r\n    const ncofig = { ...config };\r\n    ncofig.yAxises = { ...ncofig.yAxises, [this.newIndex()]: newAxis };\r\n    update(ncofig);\r\n  };\r\n\r\n  updateAxis = (newAxis, key) => {\r\n    const { config, update } = this.props;\r\n    const ncofig = { ...config };\r\n    ncofig.yAxises[key] = { ...ncofig.yAxises[key], ...newAxis };\r\n    update(ncofig);\r\n  };\r\n\r\n  canRemove = key =>\r\n    !find(\r\n      Object.keys(this.props.usedData),\r\n      i => this.props.usedData[i].fields.axis.value === key\r\n    );\r\n\r\n  removeAxis = axisId => {\r\n    const { config, update } = this.props;\r\n    const ncofig = { ...config };\r\n    delete ncofig.yAxises[axisId];\r\n    update(ncofig);\r\n  };\r\n\r\n  updateSettings = newSettings => {\r\n    const { config, update } = this.props;\r\n    const ncofig = { ...config };\r\n    ncofig.settings = { ...ncofig.settings, ...newSettings };\r\n    update(ncofig);\r\n  };\r\n\r\n  updateXAxis = newAxis => {\r\n    const { config, update } = this.props;\r\n    const ncofig = { ...config };\r\n    ncofig.xAxis = { ...ncofig.xAxis, ...newAxis };\r\n    update(ncofig);\r\n  };\r\n\r\n  render() {\r\n    const { config } = this.props;\r\n    const { editedAxis } = this.state;\r\n    return (\r\n      <div className=\"LoadData\">\r\n        <Row type=\"flex\" align=\"middle\">\r\n          <Col span={16}>Konfiguracja ogólna wykresu</Col>\r\n          <Col span={4}>\r\n            <MiddleWrapper>\r\n              <Tooltip placement=\"top\" title=\"Edytuj wygląd wykresu\">\r\n                <Button\r\n                  type=\"primary\"\r\n                  shape=\"circle\"\r\n                  icon=\"setting\"\r\n                  onClick={this.openDialogSettings}\r\n                />\r\n              </Tooltip>\r\n            </MiddleWrapper>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <div className=\"ConfigChartSection\">Oś pozioma</div>\r\n        </Row>\r\n        <Row type=\"flex\" align=\"middle\">\r\n          <Col span={16}>Oś pozioma (czasu)</Col>\r\n          <Col span={4}>\r\n            <MiddleWrapper>\r\n              <Tooltip placement=\"top\" title=\"Edytuj oś czasu\">\r\n                <Button\r\n                  shape=\"circle\"\r\n                  icon=\"setting\"\r\n                  onClick={this.openDialogXAxis}\r\n                />\r\n              </Tooltip>\r\n            </MiddleWrapper>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <div className=\"ConfigChartSection\">Osie pionowe</div>\r\n        </Row>\r\n        {Object.keys(config.yAxises).map((key, i, axes) => (\r\n          <Row key={key} type=\"flex\" align=\"middle\">\r\n            <Col span={16}>{config.yAxises[key].description.value}</Col>\r\n            <Col span={4}>\r\n              <MiddleWrapper>\r\n                <Tooltip placement=\"top\" title=\"Ustawienia\">\r\n                  <Button\r\n                    shape=\"circle\"\r\n                    icon=\"setting\"\r\n                    onClick={() => this.openDialogEditAxis(key)}\r\n                  />\r\n                </Tooltip>\r\n              </MiddleWrapper>\r\n            </Col>\r\n            <Col span={4}>\r\n              <MiddleWrapper>\r\n                <DeleteConfirm\r\n                  title=\"Czy chcesz usunąć oś odniesienia?\"\r\n                  remove=\"Usuń oś\"\r\n                  reason=\"Nie można usunąć, oś jest używana.\"\r\n                  canRemove={this.canRemove(key)}\r\n                  onConfirm={() => this.removeAxis(key)}\r\n                >\r\n                  <Button\r\n                    disabled={!this.canRemove(key)}\r\n                    shape=\"circle\"\r\n                    icon=\"delete\"\r\n                  />\r\n                </DeleteConfirm>\r\n              </MiddleWrapper>\r\n            </Col>\r\n          </Row>\r\n        ))}\r\n        <Row type=\"flex\" align=\"middle\">\r\n          <Col span={16}>Dodaj oś odniesienia</Col>\r\n          <Col span={4} />\r\n          <Col span={4}>\r\n            <MiddleWrapper>\r\n              <Tooltip placement=\"bottom\" title=\"Dodaj oś odniesienia\">\r\n                <Button\r\n                  type=\"primary\"\r\n                  shape=\"circle\"\r\n                  icon=\"plus\"\r\n                  onClick={this.openDialogAddAxis}\r\n                />\r\n              </Tooltip>\r\n            </MiddleWrapper>\r\n          </Col>\r\n        </Row>\r\n        <Drawer\r\n          title=\"Edytuj sposób prezentacji wykresu\"\r\n          placement=\"left\"\r\n          onClose={this.onCloseDialogSettings}\r\n          visible={this.state.openedDialogSettings}\r\n          width={480}\r\n          bodyStyle={{\r\n            flex: 1\r\n          }}\r\n        >\r\n          <EditSettingsDialog\r\n            onClose={this.onCloseDialogSettings}\r\n            settings={config.settings}\r\n            updateData={this.updateSettings}\r\n          />\r\n        </Drawer>\r\n        <Drawer\r\n          title=\"Edytuj oś czasu\"\r\n          placement=\"left\"\r\n          onClose={this.onCloseDialogXAxis}\r\n          visible={this.state.openedDialogXAxis}\r\n          width={480}\r\n          bodyStyle={{\r\n            flex: 1\r\n          }}\r\n        >\r\n          <XAxisDialog\r\n            onClose={this.onCloseDialogXAxis}\r\n            editedAxis={config.xAxis}\r\n            updateData={this.updateXAxis}\r\n          />\r\n        </Drawer>\r\n        <Drawer\r\n          title=\"Dodaj nową oś\"\r\n          placement=\"left\"\r\n          onClose={this.onCloseDialogAddAxis}\r\n          visible={this.state.openedDialogAddAxis}\r\n          width={480}\r\n          bodyStyle={{\r\n            flex: 1\r\n          }}\r\n        >\r\n          <AxisDialog\r\n            mode=\"load\"\r\n            onClose={this.onCloseDialogAddAxis}\r\n            settings={config.settings}\r\n            loadData={this.addAxis}\r\n          />\r\n        </Drawer>\r\n        {this.state.editedAxis !== null && (\r\n          <Drawer\r\n            title=\"Edytuj ustawienia osi\"\r\n            placement=\"left\"\r\n            onClose={this.onCloseDialogEditAxis}\r\n            visible={this.state.openedDialogEditAxis}\r\n            width={480}\r\n            bodyStyle={{\r\n              flex: 1\r\n            }}\r\n          >\r\n            <AxisDialog\r\n              mode=\"edit\"\r\n              onClose={this.onCloseDialogEditAxis}\r\n              updateData={newAxis => this.updateAxis(newAxis, editedAxis)}\r\n              editedAxis={config.yAxises[editedAxis]}\r\n            />\r\n          </Drawer>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ConfigChart;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport _ from \"lodash\";\r\n// imported elements\r\nimport LoadData from \"./LoadData\";\r\nimport UseData from \"./UseData\";\r\nimport ConfigChart from \"./ConfigChart\";\r\n// ant.design\r\nimport { Collapse } from \"antd\";\r\nconst Panel = Collapse.Panel;\r\n\r\nconst getActiveStatus = ({ loadedData, usedData }) => {\r\n  const isActiveUsedData = Object.getOwnPropertyNames(loadedData).length !== 0;\r\n  const isActiveChartConfig =\r\n    isActiveUsedData && Object.getOwnPropertyNames(usedData).length !== 0;\r\n  return {\r\n    isActiveUsedData,\r\n    isActiveChartConfig\r\n  };\r\n};\r\n\r\nclass ChartSetup extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { isActiveUsedData, isActiveChartConfig } = getActiveStatus(props);\r\n    const activeKey = [\"loadedData\"];\r\n    if (isActiveUsedData) {\r\n      activeKey.push(\"usedData\");\r\n    }\r\n    if (isActiveChartConfig) {\r\n      activeKey.push(\"chartConfig\");\r\n    }\r\n    this.state = {\r\n      activeKey: activeKey\r\n    };\r\n  }\r\n  static propTypes = {\r\n    update: PropTypes.func.isRequired,\r\n    loadedData: PropTypes.object.isRequired,\r\n    usedData: PropTypes.object.isRequired,\r\n    chartConfig: PropTypes.object.isRequired\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const updateActiveKeys = [];\r\n    const removeActiveKeys = [];\r\n    const activeStatus = getActiveStatus(this.props);\r\n    const prevActiveStatus = getActiveStatus(prevProps);\r\n    if (!prevActiveStatus.isActiveUsedData && activeStatus.isActiveUsedData) {\r\n      updateActiveKeys.push(\"usedData\");\r\n    }\r\n    if (prevActiveStatus.isActiveUsedData && !activeStatus.isActiveUsedData) {\r\n      removeActiveKeys.push(\"usedData\");\r\n    }\r\n    if (\r\n      !prevActiveStatus.isActiveChartConfig &&\r\n      activeStatus.isActiveChartConfig\r\n    ) {\r\n      updateActiveKeys.push(\"chartConfig\");\r\n    }\r\n    if (\r\n      prevActiveStatus.isActiveChartConfig &&\r\n      !activeStatus.isActiveChartConfig\r\n    ) {\r\n      removeActiveKeys.push(\"chartConfig\");\r\n    }\r\n    if (updateActiveKeys.length + removeActiveKeys.length > 0) {\r\n      const result = _.union([...this.state.activeKey], updateActiveKeys);\r\n      this.setState({\r\n        activeKey: _.filter(result, e => !removeActiveKeys.includes(e))\r\n      });\r\n    }\r\n  }\r\n\r\n  changeActiveKey = newActiveKey => {\r\n    this.setState({\r\n      activeKey: newActiveKey\r\n    });\r\n  };\r\n\r\n  update = (key, newValue) => {\r\n    this.setState({\r\n      [key]: newValue\r\n    });\r\n  };\r\n\r\n  updateLoadedData = newValue => this.props.update(\"loadedData\", newValue);\r\n  updateUsedData = newValue => this.props.update(\"usedData\", newValue);\r\n  updateChartConfig = newValue => this.props.update(\"chartConfig\", newValue);\r\n\r\n  render() {\r\n    const { loadedData, usedData, chartConfig } = this.props;\r\n    const { isActiveUsedData, isActiveChartConfig } = getActiveStatus(\r\n      this.props\r\n    );\r\n    return (\r\n      <div className=\"ChartSetup\">\r\n        <Collapse\r\n          activeKey={this.state.activeKey}\r\n          onChange={this.changeActiveKey}\r\n          bordered={false}\r\n        >\r\n          <Panel header=\"Pobranie danych\" key=\"loadedData\">\r\n            <LoadData\r\n              update={this.updateLoadedData}\r\n              usedData={usedData}\r\n              data={loadedData}\r\n            />\r\n          </Panel>\r\n          <Panel\r\n            disabled={!isActiveUsedData}\r\n            header=\"Wybór wyświetlanych danych\"\r\n            key=\"usedData\"\r\n          >\r\n            <UseData\r\n              update={this.updateUsedData}\r\n              data={usedData}\r\n              loadedData={loadedData}\r\n              config={chartConfig}\r\n            />\r\n          </Panel>\r\n          <Panel\r\n            disabled={!isActiveChartConfig}\r\n            header=\"Konfiguracja wykresu\"\r\n            key=\"chartConfig\"\r\n          >\r\n            <ConfigChart\r\n              update={this.updateChartConfig}\r\n              usedData={usedData}\r\n              config={chartConfig}\r\n            />\r\n          </Panel>\r\n        </Collapse>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChartSetup;\r\n","import { range } from \"lodash\";\r\nimport moment from \"moment\";\r\n\r\nconst AUTO = \"auto\";\r\n\r\nconst autoRanges = [\r\n  {\r\n    limit: 2,\r\n    span: 0.5\r\n  },\r\n  {\r\n    limit: 4,\r\n    span: 1\r\n  },\r\n  {\r\n    limit: 7.5,\r\n    span: 2\r\n  },\r\n  {\r\n    limit: 10,\r\n    span: 2.5\r\n  }\r\n];\r\nconst minPower = -1;\r\n\r\nconst calculatePower = ({ min, max }) => {\r\n  const range = max - min;\r\n  const logRange = Math.max(Math.floor(Math.log10(range)), minPower);\r\n  return Math.pow(10, logRange);\r\n};\r\n\r\nconst calculateSpan = ({ min, max }) => {\r\n  const power = calculatePower({ min, max });\r\n  const digit = (max - min) / power;\r\n  let i = 0;\r\n  while (digit > autoRanges[i].limit && i + 1 < autoRanges.length) {\r\n    i++;\r\n  }\r\n  return power * autoRanges[i].span;\r\n};\r\n\r\nconst minTick = ({ min }, span) => span * Math.floor(min / span);\r\nconst maxTick = ({ max }, span) => span * Math.ceil(max / span);\r\nconst minValue = minTick;\r\nconst maxValue = maxTick;\r\n\r\nconst formatRange = (range, auto) =>\r\n  range === AUTO ? auto : Number.parseFloat(range);\r\n\r\nconst getRangeFromData = values => ({\r\n  min: Math.min(...values),\r\n  max: Math.max(...values)\r\n});\r\n\r\nconst getTicks = ({ min, max }, span) => range(min, max + span / 2, span);\r\n\r\nexport const dateTicks = ({ dateFrom, dateTo }, datesNumber, withTime) => {\r\n  const start = moment.unix(dateFrom / 1000);\r\n  const end = moment.unix(dateTo / 1000);\r\n  const duration = moment.duration(end.diff(start));\r\n  const periods = withTime ? duration.asHours() : duration.asDays();\r\n  const number = Math.min(periods, datesNumber - 1);\r\n  const span = Math.floor(periods / number);\r\n  const result = [];\r\n  const iter = moment(start);\r\n  while (!iter.isAfter(end)) {\r\n    result.push(iter.format(\"x\"));\r\n    iter.add(span, withTime ? \"hours\" : \"day\");\r\n  }\r\n  return result;\r\n};\r\n\r\nexport const chartRangesFromConfig = (\r\n  values,\r\n  { rangeFrom, rangeTo, rangeSpan }\r\n) => {\r\n  const { min, max } = getRangeFromData(values);\r\n  const from = formatRange(rangeFrom, min);\r\n  const to = formatRange(rangeTo, max);\r\n  const range = {\r\n    min: from,\r\n    max: to\r\n  };\r\n  const span = formatRange(rangeSpan, calculateSpan(range));\r\n  return {\r\n    domainMin: formatRange(rangeFrom, minValue(range, span)),\r\n    domainMax: formatRange(rangeTo, maxValue(range, span)),\r\n    ticks: getTicks(\r\n      {\r\n        min: minTick(range, span),\r\n        max: maxTick(range, span)\r\n      },\r\n      span\r\n    )\r\n  };\r\n};\r\n\r\nconst regresionData = (xData, yData) =>\r\n  xData.reduce(\r\n    ({ sx2, sx, sxy, sy }, x, i) => ({\r\n      sx2: sx2 + x * x,\r\n      sx: sx + x,\r\n      sxy: sxy + yData[i] * x,\r\n      sy: sy + yData[i]\r\n    }),\r\n    {\r\n      sx2: 0,\r\n      sx: 0,\r\n      sxy: 0,\r\n      sy: 0\r\n    }\r\n  );\r\n\r\nexport const regresion = (xData, yData) => {\r\n  const { sx, sy, sxy, sx2 } = regresionData(xData, yData);\r\n  const n = xData.length;\r\n  const a = (sxy * n - sx * sy) / (sx2 * n - sx * sx);\r\n  return {\r\n    a,\r\n    b: (sy - a * sx) / n\r\n  };\r\n};\r\n","import React, { Component, PureComponent } from \"react\";\r\nimport {\r\n  LineChart,\r\n  XAxis,\r\n  YAxis,\r\n  Line,\r\n  CartesianGrid,\r\n  Label,\r\n  Legend,\r\n  Tooltip,\r\n  ResponsiveContainer\r\n} from \"recharts\";\r\nimport PropTypes from \"prop-types\";\r\nimport { find, filter } from \"lodash\";\r\nimport moment from \"moment\";\r\n// imports\r\nimport { chartRangesFromConfig, dateTicks, regresion } from \"./calculate\";\r\n// ant.design\r\nimport { Row, Col } from \"antd\";\r\n// css\r\nimport \"../../css/Charts/LineChart.css\";\r\n\r\nconst settingsType = {\r\n  height: PropTypes.number.isRequired,\r\n  width: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  showTitle: PropTypes.bool.isRequired,\r\n  showLegend: PropTypes.bool.isRequired\r\n};\r\n\r\nconst withDescriptionType = {\r\n  description: PropTypes.string.isRequired,\r\n  showDescription: PropTypes.bool.isRequired\r\n};\r\nconst withIdType = {\r\n  id: PropTypes.string.isRequired\r\n};\r\n\r\nconst xAxisType = {\r\n  ...withDescriptionType,\r\n  withTime: PropTypes.bool.isRequired,\r\n  color: PropTypes.string.isRequired,\r\n  datesNumber: PropTypes.number.isRequired\r\n};\r\n\r\nconst yAxisType = {\r\n  ...withDescriptionType,\r\n  ...withIdType,\r\n  color: PropTypes.string.isRequired,\r\n  showAxis: PropTypes.bool.isRequired,\r\n  side: PropTypes.oneOf([\"left\", \"right\"]),\r\n  unit: PropTypes.string.isRequired,\r\n  rangeFrom: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\r\n    .isRequired,\r\n  rangeTo: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\r\n  rangeSpan: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\r\n    .isRequired\r\n};\r\n\r\nconst usedDataType = {\r\n  description: PropTypes.string.isRequired,\r\n  ...withIdType,\r\n  axis: PropTypes.string.isRequired,\r\n  dashed: PropTypes.bool.isRequired,\r\n  dashSpacing: PropTypes.number,\r\n  dashLength: PropTypes.number,\r\n  dataSource: PropTypes.string.isRequired,\r\n  lineColor: PropTypes.string.isRequired,\r\n  lineWidth: PropTypes.number.isRequired\r\n};\r\n\r\nconst dataType = {\r\n  ...withIdType,\r\n  data: PropTypes.array.isRequired\r\n};\r\n\r\nconst chartConfigType = {\r\n  settings: PropTypes.shape(settingsType).isRequired,\r\n  xAxis: PropTypes.shape(xAxisType).isRequired,\r\n  yAxises: PropTypes.arrayOf(PropTypes.shape(yAxisType).isRequired).isRequired\r\n};\r\n\r\nconst CustomYAxis = ({\r\n  description,\r\n  showDescription,\r\n  dataSpread,\r\n  id,\r\n  color,\r\n  showAxis,\r\n  side,\r\n  unit,\r\n  rangeFrom,\r\n  rangeTo,\r\n  rangeSpan,\r\n  ...props\r\n}) => {\r\n  const { domainMin, domainMax, ticks } = chartRangesFromConfig(dataSpread, {\r\n    rangeFrom,\r\n    rangeTo,\r\n    rangeSpan\r\n  });\r\n  return (\r\n    <YAxis\r\n      allowDataOverflow={true}\r\n      yAxisId={id}\r\n      hide={!showAxis}\r\n      orientation={side}\r\n      stroke={color}\r\n      type=\"number\"\r\n      width={showDescription ? 60 : 45}\r\n      domain={[domainMin, domainMax]}\r\n      ticks={ticks}\r\n      label={\r\n        showDescription\r\n          ? props => (\r\n              <CustomYLabel\r\n                description={description}\r\n                color={color}\r\n                unit={unit}\r\n                side={side}\r\n                {...props}\r\n              />\r\n            )\r\n          : undefined\r\n      }\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nconst CustomYLabel = ({ description, side, unit, color, ...props }) => {\r\n  const { x, y, height, width } = props.viewBox;\r\n  const customWidth = 20;\r\n  const nx = side === \"right\" ? x + width - customWidth : x;\r\n  return (\r\n    <g transform={`translate(${nx}, ${y})`}>\r\n      <foreignObject width={customWidth} height={height}>\r\n        <div className=\"CustomLabel\" style={{ color }}>\r\n          <div className=\"CustomLabelInner\">\r\n            <div className=\"CustomLabelRotate\">\r\n              {description}\r\n              {unit && ` [${unit}]`}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </foreignObject>\r\n    </g>\r\n  );\r\n};\r\nconst CustomXLabel = ({ description, color, ...props }) => {\r\n  const { x, y, height, width } = props.viewBox;\r\n  const customHeight = 20;\r\n  const ny = y + height - customHeight;\r\n  return (\r\n    <g transform={`translate(${x}, ${ny})`}>\r\n      <foreignObject height={customHeight} width={width}>\r\n        <div className=\"CustomLabel\" style={{ color }}>\r\n          <div className=\"CustomLabelInner\">\r\n            <div className=\"CustomLabelTransform\">{description}</div>\r\n          </div>\r\n        </div>\r\n      </foreignObject>\r\n    </g>\r\n  );\r\n};\r\n\r\nconst formatDate = timestamp =>\r\n  moment.unix(timestamp / 1000).format(\"YYYY-MM-DD\");\r\nconst formatHour = timestamp => moment.unix(timestamp / 1000).format(\"HH:mm\");\r\n\r\nclass CustomizedXAxisTick extends PureComponent {\r\n  render() {\r\n    const { x, y, payload, withTime } = this.props;\r\n\r\n    return (\r\n      <g transform={`translate(${x},${y})`}>\r\n        <text x={0} y={0} dy={16} textAnchor=\"middle\" fill=\"#666\">\r\n          {formatDate(payload.value)}\r\n        </text>\r\n        {withTime && (\r\n          <text x={0} y={16} dy={16} textAnchor=\"middle\" fill=\"#666\">\r\n            {formatHour(payload.value)}\r\n          </text>\r\n        )}\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nconst xAxisHeight = (showDescription, withTime) =>\r\n  30 + (showDescription ? 20 : 0) + (withTime ? 16 : 0);\r\n\r\nconst CustomXAxis = ({\r\n  description,\r\n  showDescription,\r\n  color,\r\n  withTime,\r\n  datesNumber,\r\n  timeSpread,\r\n  ...props\r\n}) => (\r\n  <XAxis\r\n    allowDataOverflow={true}\r\n    padding={{\r\n      left: 10,\r\n      right: 30\r\n    }}\r\n    tick={<CustomizedXAxisTick withTime={withTime} />}\r\n    interval={0}\r\n    dataKey=\"time\"\r\n    type=\"number\"\r\n    stroke={color}\r\n    height={xAxisHeight(showDescription, withTime)}\r\n    domain={[\"dataMin\", \"dataMax\"]}\r\n    ticks={dateTicks(\r\n      {\r\n        dateFrom: Math.min(...timeSpread),\r\n        dateTo: Math.max(...timeSpread)\r\n      },\r\n      datesNumber,\r\n      withTime\r\n    )}\r\n    label={\r\n      showDescription\r\n        ? props => (\r\n            <CustomXLabel description={description} color={color} {...props} />\r\n          )\r\n        : undefined\r\n    }\r\n    {...props}\r\n  />\r\n);\r\n\r\nconst extractDataSource = path => {\r\n  const tab = path.split(\"-\");\r\n  return tab[0];\r\n};\r\n\r\nconst generateRegresionKey = (path, id) => `REG_${id}_${extractDataKey(path)}`;\r\n\r\nconst generateRegresionPath = (path, id) =>\r\n  `${extractDataSource(path)}-${generateRegresionKey(path, id)}`;\r\n\r\nconst extractDataFromPath = (data, path) => {\r\n  const sourceId = extractDataSource(path);\r\n  return find(data, e => e.id === sourceId).data;\r\n};\r\n\r\nconst extractDataKey = path => {\r\n  const tab = path.split(\"-\");\r\n  return tab.pop();\r\n};\r\n\r\nconst regresionSettings = {\r\n  activeDot: false,\r\n  lineWidth: 1,\r\n  dashed: true,\r\n  dashSpacing: 5,\r\n  dashLength: 5\r\n};\r\n\r\nconst CustomLine = ({\r\n  yAxises,\r\n  dataSet,\r\n  description,\r\n  showDescription,\r\n  lineId,\r\n  axis,\r\n  dashed,\r\n  dashSpacing,\r\n  dashLength,\r\n  dataSource,\r\n  lineColor,\r\n  lineWidth,\r\n  ...props\r\n}) => (\r\n  <Line\r\n    unit={(e => e && e.unit)(find(yAxises, e => e.id === axis))}\r\n    name={description}\r\n    lineId={lineId}\r\n    isAnimationActive={false}\r\n    strokeDasharray={dashed ? `${dashLength} ${dashSpacing}` : undefined}\r\n    strokeWidth={lineWidth}\r\n    type=\"monotone\"\r\n    stroke={lineColor}\r\n    dot={false}\r\n    activeDot={true}\r\n    data={extractDataFromPath(dataSet, dataSource)}\r\n    dataKey={extractDataKey(dataSource)}\r\n    yAxisId={axis}\r\n    {...props}\r\n  />\r\n);\r\n\r\nconst CustomTooltip = ({ active, payload, label, withTime, ...props }) => {\r\n  if (active) {\r\n    return (\r\n      <div className=\"CustomTooltip\">\r\n        <div className=\"CTTime\">\r\n          {`${formatDate(label)} ${withTime ? `${formatHour(label)}` : \"\"}`}\r\n        </div>\r\n        {filter(payload, e => !e.dataKey.startsWith(\"REG_\")).map((e, i) => (\r\n          <div className=\"CTProperty\" key={i}>\r\n            <div className=\"CTFeature\">{e.name}</div>\r\n            <div className=\"CTValue\">{`${e.payload[e.dataKey]} ${e.unit}`}</div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nconst dataFromAxis = (data, usedData, axis) =>\r\n  filter(usedData, e => e.axis === axis).reduce(\r\n    (prev, used) => [\r\n      ...prev,\r\n      ...extractDataFromPath(data, used.dataSource).map(item =>\r\n        Number.parseFloat(item[extractDataKey(used.dataSource)])\r\n      )\r\n    ],\r\n    []\r\n  );\r\n\r\nconst timeFromData = (data, usedData) =>\r\n  usedData.reduce(\r\n    (prev, used) => [\r\n      ...prev,\r\n      ...extractDataFromPath(data, used.dataSource).map(item =>\r\n        Number.parseFloat(item.time)\r\n      )\r\n    ],\r\n    []\r\n  );\r\n\r\nconst generateRegresionValue = (dataSet, path) => {\r\n  const xData = dataSet.map(e => parseFloat(e.time));\r\n  const yData = dataSet.map(e => parseFloat(e[extractDataKey(path)]));\r\n  return regresion(xData, yData);\r\n};\r\n\r\nconst genRegresionValue = (dataSet, path, id) => {\r\n  const { a, b } = generateRegresionValue(dataSet, path);\r\n  return dataSet.map(item => ({\r\n    ...item,\r\n    [generateRegresionKey(path, id)]: a * item.time + b\r\n  }));\r\n};\r\n\r\nconst addRegresionValues = (data, usedData) => {\r\n  usedData\r\n    .filter(e => e.showRegresion)\r\n    .forEach(({ dataSource, id }) => {\r\n      const sourceId = extractDataSource(dataSource);\r\n      const i = data.findIndex(e => e.id === sourceId);\r\n      console.log(\"reg\", i, data, usedData);\r\n      data[i] = {\r\n        ...data[i],\r\n        data: genRegresionValue(data[i].data, dataSource, id)\r\n      };\r\n    });\r\n};\r\n\r\nconst RegresionSummary = ({ data, usedData, withTime }) => {\r\n  const calculate = filter(usedData, e => e.showRegresion).map(\r\n    ({ dataSource, id, description }) => {\r\n      const sourceId = extractDataSource(dataSource);\r\n      const i = data.findIndex(e => e.id === sourceId);\r\n      const { a, b } = generateRegresionValue(data[i].data, dataSource);\r\n      return {\r\n        description,\r\n        a,\r\n        begin: data[i].data[0].time,\r\n        b: b + a * data[i].data[0].time\r\n      };\r\n    }\r\n  );\r\n  const msInHour = 1000 * 60 * 60;\r\n  return calculate.length > 0 ? (\r\n    <div className=\"RegresionSummary\">\r\n      <div className=\"Title\">Regresja liniowa</div>\r\n      <Row gutter={16}>\r\n        {calculate.map((e, i) => (\r\n          <Col span={12} key={i}>\r\n            <div className=\"RegresionValue\">\r\n              <div className=\"CTProperty\">\r\n                <div className=\"CTFeature\">Źródło danych</div>\r\n                <div className=\"CTValue\">{e.description}</div>\r\n              </div>\r\n              <div className=\"CTProperty\">\r\n                <div className=\"CTFeature\">Wzór</div>\r\n                <div className=\"CTValue\">\r\n                  {`( ${(\r\n                    e.a * (withTime ? msInHour : msInHour * 24)\r\n                  ).toExponential(4)} ) x czas + ${e.b.toFixed(2)}`}\r\n                </div>\r\n              </div>\r\n              <div className=\"CTProperty\">\r\n                <div className=\"CTFeature\">Jednostka</div>\r\n                <div className=\"CTValue\">\r\n                  {`Czas liczony w ${withTime ? \"godzinach\" : \"dobach\"}`}\r\n                </div>\r\n              </div>\r\n              <div className=\"CTProperty\">\r\n                <div className=\"CTFeature\">Początek (czas = 0)</div>\r\n                <div className=\"CTValue\">\r\n                  {moment\r\n                    .unix(e.begin / 1000)\r\n                    .format(withTime ? \"YYYY-MM-DD HH:mm\" : \"YYYY-MM-DD\")}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\nclass ResponsiveLineChart extends Component {\r\n  static propTypes = {\r\n    stopInteractive: PropTypes.bool,\r\n    // Ustawienia\r\n    chartConfig: PropTypes.shape(chartConfigType).isRequired,\r\n    usedData: PropTypes.arrayOf(PropTypes.shape(usedDataType)).isRequired,\r\n    data: PropTypes.arrayOf(PropTypes.shape(dataType)).isRequired\r\n  };\r\n\r\n  render() {\r\n    console.log(\"passed to chart\", this.props);\r\n    const { stopInteractive, usedData, data, chartConfig } = this.props;\r\n    const { xAxis, settings, yAxises } = chartConfig;\r\n    const { height, width } = chartConfig.settings;\r\n\r\n    addRegresionValues(data, usedData);\r\n    console.log(\"after regresion\", data);\r\n    // console.log(\r\n    //   \"Wyliczenia dla wykresu\",\r\n    //   chartRangesFromConfing()\r\n    // )\r\n    // TODO!!!\r\n    // Wyciagniecie danych z axis po data i dopiero przekazac\r\n    return (\r\n      <div className=\"LineChart\">\r\n        <div\r\n          className=\"InnerChart\"\r\n          style={{\r\n            width: `${width}%`\r\n          }}\r\n        >\r\n          {settings.showTitle && (\r\n            <div className=\"ChartTitle\">{settings.title}</div>\r\n          )}\r\n          <ResponsiveContainer width={\"100%\"} aspect={width / height}>\r\n            <LineChart data={data}>\r\n              {!stopInteractive && (\r\n                <Tooltip\r\n                  content={<CustomTooltip withTime={xAxis.withTime} />}\r\n                />\r\n              )}\r\n              {settings.showLegend && (\r\n                <Legend\r\n                  height={36}\r\n                  verticalAlign=\"top\"\r\n                  paylodUniqBy={({ payload }) => payload.lineId}\r\n                />\r\n              )}\r\n              <CartesianGrid vertical={false} strokeDasharray=\"5 5\" />\r\n              {CustomXAxis({\r\n                ...xAxis,\r\n                timeSpread: timeFromData(data, usedData)\r\n              })}\r\n              {// WONTFIX recharts ma problem z przeciazaniem komponentow\r\n              yAxises.map(yAxis =>\r\n                CustomYAxis({\r\n                  ...yAxis,\r\n                  key: `yAxis-${yAxis.id}`,\r\n                  dataSpread: dataFromAxis(data, usedData, yAxis.id)\r\n                })\r\n              )}\r\n              {filter(usedData, e => e.showRegresion).map(\r\n                ({ id, dataSource, ...used }) =>\r\n                  CustomLine({\r\n                    yAxises,\r\n                    ...used,\r\n                    dataSource: generateRegresionPath(dataSource, id),\r\n                    lineId: id,\r\n                    regresion: true,\r\n                    dataSet: data,\r\n                    key: `regresionLine-${id}`,\r\n                    ...regresionSettings\r\n                  })\r\n              )}\r\n              {usedData.map(({ id, ...used }) =>\r\n                CustomLine({\r\n                  yAxises,\r\n                  ...used,\r\n                  lineId: id,\r\n                  dataSet: data,\r\n                  key: `usedData-${id}`\r\n                })\r\n              )}\r\n            </LineChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n        <RegresionSummary\r\n          data={data}\r\n          usedData={usedData}\r\n          withTime={xAxis.withTime}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResponsiveLineChart;\r\n","import React, { Component } from \"react\";\r\n// css\r\nimport \"../../css/ChartCreate.css\";\r\n// imported elements\r\nimport ChartSetup from \"./ChartSetup/ChartSetup\";\r\nimport ResponsiveLineChart from \"../Charts/LineChart\";\r\n// ant.design\r\nimport { Row, Col, Empty } from \"antd\";\r\n\r\nconst defaultChartConfig = {\r\n  settings: {\r\n    title: {\r\n      value: \"\"\r\n    },\r\n    showTitle: {\r\n      value: false\r\n    },\r\n    showLegend: {\r\n      value: false\r\n    },\r\n    height: {\r\n      value: 60\r\n    },\r\n    width: {\r\n      value: 100\r\n    }\r\n  },\r\n  xAxis: {\r\n    description: {\r\n      value: \"Czas\"\r\n    },\r\n    showDescription: {\r\n      value: true\r\n    },\r\n    color: {\r\n      value: \"black\"\r\n    },\r\n    datesNumber: {\r\n      value: 5\r\n    },\r\n    withTime: {\r\n      value: false\r\n    }\r\n  },\r\n  yAxises: {\r\n    0: {\r\n      color: {\r\n        value: \"black\"\r\n      },\r\n      showAxis: {\r\n        value: true\r\n      },\r\n      side: {\r\n        value: \"left\"\r\n      },\r\n      description: {\r\n        value: \"Oś Y\"\r\n      },\r\n      showDescription: {\r\n        value: false\r\n      },\r\n      unit: {\r\n        value: \"\"\r\n      },\r\n      rangeFrom: {\r\n        value: \"auto\"\r\n      },\r\n      rangeTo: {\r\n        value: \"auto\"\r\n      },\r\n      rangeSpan: {\r\n        value: \"auto\"\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nclass ChartCreate extends Component {\r\n  state = {\r\n    loadedData: {},\r\n    usedData: {},\r\n    chartConfig: Object.assign({}, defaultChartConfig)\r\n  };\r\n\r\n  update = (key, newValue) => {\r\n    console.log(`UPDATING: ${key}`, newValue);\r\n    this.setState({\r\n      [key]: newValue\r\n    });\r\n  };\r\n\r\n  mapSetupToChart = ({ loadedData, usedData, chartConfig }) => {\r\n    console.log(\"loadedData\", loadedData);\r\n    console.log(\"usedData\", usedData);\r\n    console.log(\"chartConfig\", chartConfig);\r\n    return {\r\n      usedData: Object.keys(usedData).reduce(\r\n        (result, key) => [\r\n          ...result,\r\n          Object.keys(usedData[key].fields).reduce(\r\n            (prev, fieldKey) => ({\r\n              ...prev,\r\n              [fieldKey]: usedData[key].fields[fieldKey].value\r\n            }),\r\n            { id: key }\r\n          )\r\n        ],\r\n        []\r\n      ),\r\n      chartConfig: {\r\n        settings: Object.keys(chartConfig.settings).reduce(\r\n          (prev, fieldKey) => ({\r\n            ...prev,\r\n            [fieldKey]: chartConfig.settings[fieldKey].value\r\n          }),\r\n          {}\r\n        ),\r\n        xAxis: Object.keys(chartConfig.xAxis).reduce(\r\n          (prev, fieldKey) => ({\r\n            ...prev,\r\n            [fieldKey]: chartConfig.xAxis[fieldKey].value\r\n          }),\r\n          {}\r\n        ),\r\n        yAxises: Object.keys(chartConfig.yAxises).reduce(\r\n          (result, key) => [\r\n            ...result,\r\n            Object.keys(chartConfig.yAxises[key]).reduce(\r\n              (prev, fieldKey) => ({\r\n                ...prev,\r\n                [fieldKey]: chartConfig.yAxises[key][fieldKey].value\r\n              }),\r\n              { id: key }\r\n            )\r\n          ],\r\n          []\r\n        )\r\n      },\r\n      data: Object.keys(loadedData).reduce(\r\n        (prev, key) => [...prev, { id: key, data: loadedData[key].data }],\r\n        []\r\n      )\r\n    };\r\n  };\r\n\r\n  render() {\r\n    const mapSetupResult = this.mapSetupToChart(this.state);\r\n    return (\r\n      <div className=\"ChartCreate\">\r\n        <Row>\r\n          <Col span={8}>\r\n            <ChartSetup update={this.update} {...this.state} />\r\n          </Col>\r\n          <Col span={16}>\r\n            <div className=\"ChartPresentation\">\r\n              {Object.keys(mapSetupResult.usedData).length > 0 ? (\r\n                <ResponsiveLineChart\r\n                  stopInteractive={false}\r\n                  {...mapSetupResult}\r\n                />\r\n              ) : (\r\n                <Empty\r\n                  image=\"https://gw.alipayobjects.com/mdn/miniapp_social/afts/img/A*pevERLJC9v0AAAAAAAAAAABjAQAAAQ/original\"\r\n                  description={\r\n                    <span>\r\n                      Tutaj powstanie wykres\r\n                      <br />\r\n                      Pobierz dane i wybierz ich formę prezentacji\r\n                    </span>\r\n                  }\r\n                />\r\n              )}\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChartCreate;\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport PDFGeneration from \"./components/PDFGeneration\";\r\nimport ChartCreate from \"./components/ChartCreate/ChartCreate\";\r\n\r\nimport { LocaleProvider } from \"antd\";\r\nimport pl_PL from \"antd/lib/locale-provider/pl_PL\";\r\nimport moment from \"moment\";\r\nimport \"moment/locale/pl\";\r\nmoment.locale(\"pl\");\r\n\r\nconst styles = {\r\n  root: {\r\n    flexDirection: \"row\"\r\n  },\r\n  menuTab: {\r\n    maxWidth: \"240px\",\r\n    textDecoration: \"unset\"\r\n  },\r\n  button: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    color: \"white\",\r\n    padding: \"4px 16px\"\r\n  }\r\n};\r\n\r\nconst TestContent = ({ link, description, component }) => (\r\n  <Route key={link} path={`/${link}/`} component={component} />\r\n);\r\n\r\nconst TestList = [\r\n  {\r\n    link: \"pdf-generation\",\r\n    description: \"Generacja PDF\",\r\n    component: PDFGeneration\r\n  },\r\n  {\r\n    link: \"recharts\",\r\n    description: \"Technologia tworzenia wykresów\",\r\n    component: ChartCreate\r\n  },\r\n  {\r\n    link: \"indicators\",\r\n    description: \"Operacje na wskaźnikach\",\r\n    component: Test\r\n  }\r\n];\r\n\r\nfunction Test() {\r\n  return <h1>Test</h1>;\r\n}\r\n\r\nclass App extends Component {\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <LocaleProvider locale={pl_PL}>\r\n        <Router>\r\n          <div className=\"App\">\r\n            <AppBar position=\"static\" className={classes.root}>\r\n              {TestList.map(e => (\r\n                <Link to={e.link} key={e.link} className={classes.menuTab}>\r\n                  <Button className={classes.button}>{e.description}</Button>\r\n                </Link>\r\n              ))}\r\n            </AppBar>\r\n            <div className=\"TestField\">{TestList.map(e => TestContent(e))}</div>\r\n          </div>\r\n        </Router>\r\n      </LocaleProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}